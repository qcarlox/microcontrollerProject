
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000110  00800100  000028c2  000029c2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000028c2  00000000  00000000  00000100  2**8
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000064  00800210  00800210  00002ad2  2**0
                  ALLOC
  3 .eeprom       00000005  00810000  00810000  00002ad2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .stab         00000f84  00000000  00000000  00002ad8  2**2
                  CONTENTS, READONLY, DEBUGGING
  5 .stabstr      00000361  00000000  00000000  00003a5c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .comment      0000002f  00000000  00000000  00003dbd  2**0
                  CONTENTS, READONLY
  7 .debug_aranges 000003e0  00000000  00000000  00003df0  2**3
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_info   000049df  00000000  00000000  000041d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00001635  00000000  00000000  00008baf  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   000023c8  00000000  00000000  0000a1e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_frame  00000958  00000000  00000000  0000c5ac  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    00000c62  00000000  00000000  0000cf04  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    000025df  00000000  00000000  0000db66  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000438  00000000  00000000  00010145  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 3e 06 	jmp	0xc7c	; 0xc7c <__vector_4>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 87 0f 	jmp	0x1f0e	; 0x1f0e <__vector_11>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	12 e0       	ldi	r17, 0x02	; 2
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e2 ec       	ldi	r30, 0xC2	; 194
      7c:	f8 e2       	ldi	r31, 0x28	; 40
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	a0 31       	cpi	r26, 0x10	; 16
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	22 e0       	ldi	r18, 0x02	; 2
      8c:	a0 e1       	ldi	r26, 0x10	; 16
      8e:	b2 e0       	ldi	r27, 0x02	; 2
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	a4 37       	cpi	r26, 0x74	; 116
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <main>
      9e:	0c 94 5f 14 	jmp	0x28be	; 0x28be <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <aes256_enc>:
      a6:	4e e0       	ldi	r20, 0x0E	; 14
      a8:	03 c0       	rjmp	.+6      	; 0xb0 <aes_encrypt_core>

000000aa <aes192_enc>:
      aa:	4c e0       	ldi	r20, 0x0C	; 12
      ac:	01 c0       	rjmp	.+2      	; 0xb0 <aes_encrypt_core>

000000ae <aes128_enc>:
      ae:	4a e0       	ldi	r20, 0x0A	; 10

000000b0 <aes_encrypt_core>:
      b0:	2f 92       	push	r2
      b2:	3f 92       	push	r3
      b4:	4f 92       	push	r4
      b6:	5f 92       	push	r5
      b8:	6f 92       	push	r6
      ba:	7f 92       	push	r7
      bc:	8f 92       	push	r8
      be:	9f 92       	push	r9
      c0:	af 92       	push	r10
      c2:	bf 92       	push	r11
      c4:	cf 92       	push	r12
      c6:	df 92       	push	r13
      c8:	ef 92       	push	r14
      ca:	ff 92       	push	r15
      cc:	0f 93       	push	r16
      ce:	1f 93       	push	r17
      d0:	cf 93       	push	r28
      d2:	df 93       	push	r29
      d4:	8f 93       	push	r24
      d6:	9f 93       	push	r25
      d8:	db 01       	movw	r26, r22
      da:	fc 01       	movw	r30, r24
      dc:	84 2f       	mov	r24, r20
      de:	e8 94       	clt
      e0:	81 90       	ld	r8, Z+
      e2:	91 90       	ld	r9, Z+
      e4:	a1 90       	ld	r10, Z+
      e6:	b1 90       	ld	r11, Z+
      e8:	c1 90       	ld	r12, Z+
      ea:	d1 90       	ld	r13, Z+
      ec:	e1 90       	ld	r14, Z+
      ee:	f1 90       	ld	r15, Z+
      f0:	01 91       	ld	r16, Z+
      f2:	11 91       	ld	r17, Z+
      f4:	21 91       	ld	r18, Z+
      f6:	31 91       	ld	r19, Z+
      f8:	41 91       	ld	r20, Z+
      fa:	51 91       	ld	r21, Z+
      fc:	61 91       	ld	r22, Z+
      fe:	71 91       	ld	r23, Z+
     100:	9b e1       	ldi	r25, 0x1B	; 27
     102:	f4 e0       	ldi	r31, 0x04	; 4
     104:	0d 90       	ld	r0, X+
     106:	80 24       	eor	r8, r0
     108:	0d 90       	ld	r0, X+
     10a:	90 24       	eor	r9, r0
     10c:	0d 90       	ld	r0, X+
     10e:	a0 24       	eor	r10, r0
     110:	0d 90       	ld	r0, X+
     112:	b0 24       	eor	r11, r0
     114:	0d 90       	ld	r0, X+
     116:	c0 24       	eor	r12, r0
     118:	0d 90       	ld	r0, X+
     11a:	d0 24       	eor	r13, r0
     11c:	0d 90       	ld	r0, X+
     11e:	e0 24       	eor	r14, r0
     120:	0d 90       	ld	r0, X+
     122:	f0 24       	eor	r15, r0
     124:	0d 90       	ld	r0, X+
     126:	00 25       	eor	r16, r0
     128:	0d 90       	ld	r0, X+
     12a:	10 25       	eor	r17, r0
     12c:	0d 90       	ld	r0, X+
     12e:	20 25       	eor	r18, r0
     130:	0d 90       	ld	r0, X+
     132:	30 25       	eor	r19, r0
     134:	0d 90       	ld	r0, X+
     136:	40 25       	eor	r20, r0
     138:	0d 90       	ld	r0, X+
     13a:	50 25       	eor	r21, r0
     13c:	0d 90       	ld	r0, X+
     13e:	60 25       	eor	r22, r0
     140:	0d 90       	ld	r0, X+
     142:	70 25       	eor	r23, r0
     144:	2e f5       	brtc	.+74     	; 0x190 <exit+0x4a>

00000146 <exit>:
     146:	ff 91       	pop	r31
     148:	ef 91       	pop	r30
     14a:	81 92       	st	Z+, r8
     14c:	91 92       	st	Z+, r9
     14e:	a1 92       	st	Z+, r10
     150:	b1 92       	st	Z+, r11
     152:	c1 92       	st	Z+, r12
     154:	d1 92       	st	Z+, r13
     156:	e1 92       	st	Z+, r14
     158:	f1 92       	st	Z+, r15
     15a:	01 93       	st	Z+, r16
     15c:	11 93       	st	Z+, r17
     15e:	21 93       	st	Z+, r18
     160:	31 93       	st	Z+, r19
     162:	41 93       	st	Z+, r20
     164:	51 93       	st	Z+, r21
     166:	61 93       	st	Z+, r22
     168:	71 93       	st	Z+, r23
     16a:	df 91       	pop	r29
     16c:	cf 91       	pop	r28
     16e:	1f 91       	pop	r17
     170:	0f 91       	pop	r16
     172:	ff 90       	pop	r15
     174:	ef 90       	pop	r14
     176:	df 90       	pop	r13
     178:	cf 90       	pop	r12
     17a:	bf 90       	pop	r11
     17c:	af 90       	pop	r10
     17e:	9f 90       	pop	r9
     180:	8f 90       	pop	r8
     182:	7f 90       	pop	r7
     184:	6f 90       	pop	r6
     186:	5f 90       	pop	r5
     188:	4f 90       	pop	r4
     18a:	3f 90       	pop	r3
     18c:	2f 90       	pop	r2
     18e:	08 95       	ret
     190:	8a 95       	dec	r24
     192:	09 f4       	brne	.+2      	; 0x196 <exit+0x50>
     194:	68 94       	set
     196:	e8 2d       	mov	r30, r8
     198:	84 90       	lpm	r8, Z
     19a:	ec 2d       	mov	r30, r12
     19c:	c4 90       	lpm	r12, Z
     19e:	e0 2f       	mov	r30, r16
     1a0:	04 91       	lpm	r16, Z
     1a2:	e4 2f       	mov	r30, r20
     1a4:	44 91       	lpm	r20, Z
     1a6:	e9 2d       	mov	r30, r9
     1a8:	24 90       	lpm	r2, Z
     1aa:	ed 2d       	mov	r30, r13
     1ac:	94 90       	lpm	r9, Z
     1ae:	e1 2f       	mov	r30, r17
     1b0:	d4 90       	lpm	r13, Z
     1b2:	e5 2f       	mov	r30, r21
     1b4:	14 91       	lpm	r17, Z
     1b6:	52 2d       	mov	r21, r2
     1b8:	ea 2d       	mov	r30, r10
     1ba:	24 90       	lpm	r2, Z
     1bc:	ee 2d       	mov	r30, r14
     1be:	34 90       	lpm	r3, Z
     1c0:	e2 2f       	mov	r30, r18
     1c2:	a4 90       	lpm	r10, Z
     1c4:	e6 2f       	mov	r30, r22
     1c6:	e4 90       	lpm	r14, Z
     1c8:	22 2d       	mov	r18, r2
     1ca:	63 2d       	mov	r22, r3
     1cc:	eb 2d       	mov	r30, r11
     1ce:	24 90       	lpm	r2, Z
     1d0:	e7 2f       	mov	r30, r23
     1d2:	b4 90       	lpm	r11, Z
     1d4:	e3 2f       	mov	r30, r19
     1d6:	74 91       	lpm	r23, Z
     1d8:	ef 2d       	mov	r30, r15
     1da:	34 91       	lpm	r19, Z
     1dc:	f2 2c       	mov	r15, r2
     1de:	0e f4       	brtc	.+2      	; 0x1e2 <exit+0x9c>
     1e0:	91 cf       	rjmp	.-222    	; 0x104 <aes_encrypt_core+0x54>
     1e2:	0a 2c       	mov	r0, r10
     1e4:	0b 24       	eor	r0, r11
     1e6:	40 2c       	mov	r4, r0
     1e8:	28 2c       	mov	r2, r8
     1ea:	89 24       	eor	r8, r9
     1ec:	08 24       	eor	r0, r8
     1ee:	88 0c       	add	r8, r8
     1f0:	08 f4       	brcc	.+2      	; 0x1f4 <exit+0xae>
     1f2:	89 26       	eor	r8, r25
     1f4:	80 24       	eor	r8, r0
     1f6:	82 24       	eor	r8, r2
     1f8:	39 2c       	mov	r3, r9
     1fa:	3a 24       	eor	r3, r10
     1fc:	33 0c       	add	r3, r3
     1fe:	08 f4       	brcc	.+2      	; 0x202 <exit+0xbc>
     200:	39 26       	eor	r3, r25
     202:	30 24       	eor	r3, r0
     204:	93 24       	eor	r9, r3
     206:	44 0c       	add	r4, r4
     208:	08 f4       	brcc	.+2      	; 0x20c <exit+0xc6>
     20a:	49 26       	eor	r4, r25
     20c:	40 24       	eor	r4, r0
     20e:	a4 24       	eor	r10, r4
     210:	2b 24       	eor	r2, r11
     212:	22 0c       	add	r2, r2
     214:	08 f4       	brcc	.+2      	; 0x218 <exit+0xd2>
     216:	29 26       	eor	r2, r25
     218:	20 24       	eor	r2, r0
     21a:	b2 24       	eor	r11, r2
     21c:	0e 2c       	mov	r0, r14
     21e:	0f 24       	eor	r0, r15
     220:	40 2c       	mov	r4, r0
     222:	2c 2c       	mov	r2, r12
     224:	cd 24       	eor	r12, r13
     226:	0c 24       	eor	r0, r12
     228:	cc 0c       	add	r12, r12
     22a:	08 f4       	brcc	.+2      	; 0x22e <exit+0xe8>
     22c:	c9 26       	eor	r12, r25
     22e:	c0 24       	eor	r12, r0
     230:	c2 24       	eor	r12, r2
     232:	3d 2c       	mov	r3, r13
     234:	3e 24       	eor	r3, r14
     236:	33 0c       	add	r3, r3
     238:	08 f4       	brcc	.+2      	; 0x23c <exit+0xf6>
     23a:	39 26       	eor	r3, r25
     23c:	30 24       	eor	r3, r0
     23e:	d3 24       	eor	r13, r3
     240:	44 0c       	add	r4, r4
     242:	08 f4       	brcc	.+2      	; 0x246 <exit+0x100>
     244:	49 26       	eor	r4, r25
     246:	40 24       	eor	r4, r0
     248:	e4 24       	eor	r14, r4
     24a:	2f 24       	eor	r2, r15
     24c:	22 0c       	add	r2, r2
     24e:	08 f4       	brcc	.+2      	; 0x252 <exit+0x10c>
     250:	29 26       	eor	r2, r25
     252:	20 24       	eor	r2, r0
     254:	f2 24       	eor	r15, r2
     256:	02 2e       	mov	r0, r18
     258:	03 26       	eor	r0, r19
     25a:	40 2c       	mov	r4, r0
     25c:	20 2e       	mov	r2, r16
     25e:	01 27       	eor	r16, r17
     260:	00 26       	eor	r0, r16
     262:	00 0f       	add	r16, r16
     264:	08 f4       	brcc	.+2      	; 0x268 <exit+0x122>
     266:	09 27       	eor	r16, r25
     268:	00 25       	eor	r16, r0
     26a:	02 25       	eor	r16, r2
     26c:	31 2e       	mov	r3, r17
     26e:	32 26       	eor	r3, r18
     270:	33 0c       	add	r3, r3
     272:	08 f4       	brcc	.+2      	; 0x276 <exit+0x130>
     274:	39 26       	eor	r3, r25
     276:	30 24       	eor	r3, r0
     278:	13 25       	eor	r17, r3
     27a:	44 0c       	add	r4, r4
     27c:	08 f4       	brcc	.+2      	; 0x280 <exit+0x13a>
     27e:	49 26       	eor	r4, r25
     280:	40 24       	eor	r4, r0
     282:	24 25       	eor	r18, r4
     284:	23 26       	eor	r2, r19
     286:	22 0c       	add	r2, r2
     288:	08 f4       	brcc	.+2      	; 0x28c <exit+0x146>
     28a:	29 26       	eor	r2, r25
     28c:	20 24       	eor	r2, r0
     28e:	32 25       	eor	r19, r2
     290:	06 2e       	mov	r0, r22
     292:	07 26       	eor	r0, r23
     294:	40 2c       	mov	r4, r0
     296:	24 2e       	mov	r2, r20
     298:	45 27       	eor	r20, r21
     29a:	04 26       	eor	r0, r20
     29c:	44 0f       	add	r20, r20
     29e:	08 f4       	brcc	.+2      	; 0x2a2 <exit+0x15c>
     2a0:	49 27       	eor	r20, r25
     2a2:	40 25       	eor	r20, r0
     2a4:	42 25       	eor	r20, r2
     2a6:	35 2e       	mov	r3, r21
     2a8:	36 26       	eor	r3, r22
     2aa:	33 0c       	add	r3, r3
     2ac:	08 f4       	brcc	.+2      	; 0x2b0 <exit+0x16a>
     2ae:	39 26       	eor	r3, r25
     2b0:	30 24       	eor	r3, r0
     2b2:	53 25       	eor	r21, r3
     2b4:	44 0c       	add	r4, r4
     2b6:	08 f4       	brcc	.+2      	; 0x2ba <exit+0x174>
     2b8:	49 26       	eor	r4, r25
     2ba:	40 24       	eor	r4, r0
     2bc:	64 25       	eor	r22, r4
     2be:	27 26       	eor	r2, r23
     2c0:	22 0c       	add	r2, r2
     2c2:	08 f4       	brcc	.+2      	; 0x2c6 <exit+0x180>
     2c4:	29 26       	eor	r2, r25
     2c6:	20 24       	eor	r2, r0
     2c8:	72 25       	eor	r23, r2
     2ca:	1c cf       	rjmp	.-456    	; 0x104 <aes_encrypt_core+0x54>

000002cc <aes256_init>:
     2cc:	ab 01       	movw	r20, r22
     2ce:	71 e0       	ldi	r23, 0x01	; 1
     2d0:	60 e0       	ldi	r22, 0x00	; 0
     2d2:	07 c0       	rjmp	.+14     	; 0x2e2 <aes_init>

000002d4 <aes192_init>:
     2d4:	ab 01       	movw	r20, r22
     2d6:	70 e0       	ldi	r23, 0x00	; 0
     2d8:	60 ec       	ldi	r22, 0xC0	; 192
     2da:	03 c0       	rjmp	.+6      	; 0x2e2 <aes_init>

000002dc <aes128_init>:
     2dc:	ab 01       	movw	r20, r22
     2de:	77 27       	eor	r23, r23
     2e0:	60 e8       	ldi	r22, 0x80	; 128

000002e2 <aes_init>:
     2e2:	ef 92       	push	r14
     2e4:	ff 92       	push	r15
     2e6:	0f 93       	push	r16
     2e8:	1f 93       	push	r17
     2ea:	cf 93       	push	r28
     2ec:	df 93       	push	r29
     2ee:	fa 01       	movw	r30, r20
     2f0:	ea 01       	movw	r28, r20
     2f2:	dc 01       	movw	r26, r24
     2f4:	76 95       	lsr	r23
     2f6:	67 95       	ror	r22
     2f8:	66 95       	lsr	r22
     2fa:	66 95       	lsr	r22
     2fc:	26 2f       	mov	r18, r22
     2fe:	0d 90       	ld	r0, X+
     300:	01 92       	st	Z+, r0
     302:	2a 95       	dec	r18
     304:	e1 f7       	brne	.-8      	; 0x2fe <aes_init+0x1c>
     306:	66 95       	lsr	r22
     308:	66 95       	lsr	r22
     30a:	63 fb       	bst	r22, 3
     30c:	36 2f       	mov	r19, r22
     30e:	76 2f       	mov	r23, r22
     310:	79 5f       	subi	r23, 0xF9	; 249
     312:	77 0f       	add	r23, r23
     314:	77 0f       	add	r23, r23
     316:	df 01       	movw	r26, r30
     318:	14 97       	sbiw	r26, 0x04	; 4
     31a:	26 2f       	mov	r18, r22
     31c:	e0 e0       	ldi	r30, 0x00	; 0
     31e:	f4 e0       	ldi	r31, 0x04	; 4
     320:	7f 01       	movw	r14, r30
     322:	11 e0       	ldi	r17, 0x01	; 1
     324:	4d 91       	ld	r20, X+
     326:	5d 91       	ld	r21, X+
     328:	8d 91       	ld	r24, X+
     32a:	9d 91       	ld	r25, X+
     32c:	32 17       	cp	r19, r18
     32e:	b1 f0       	breq	.+44     	; 0x35c <aes_init+0x7a>
     330:	5e f5       	brtc	.+86     	; 0x388 <aes_init+0xa6>
     332:	02 2f       	mov	r16, r18
     334:	07 70       	andi	r16, 0x07	; 7
     336:	04 30       	cpi	r16, 0x04	; 4
     338:	39 f5       	brne	.+78     	; 0x388 <aes_init+0xa6>
     33a:	f7 01       	movw	r30, r14
     33c:	e4 0f       	add	r30, r20
     33e:	f1 1d       	adc	r31, r1
     340:	44 91       	lpm	r20, Z
     342:	f7 01       	movw	r30, r14
     344:	e5 0f       	add	r30, r21
     346:	f1 1d       	adc	r31, r1
     348:	54 91       	lpm	r21, Z
     34a:	f7 01       	movw	r30, r14
     34c:	e8 0f       	add	r30, r24
     34e:	f1 1d       	adc	r31, r1
     350:	84 91       	lpm	r24, Z
     352:	f7 01       	movw	r30, r14
     354:	e9 0f       	add	r30, r25
     356:	f1 1d       	adc	r31, r1
     358:	94 91       	lpm	r25, Z
     35a:	16 c0       	rjmp	.+44     	; 0x388 <aes_init+0xa6>
     35c:	36 0f       	add	r19, r22
     35e:	f7 01       	movw	r30, r14
     360:	e4 0f       	add	r30, r20
     362:	f1 1d       	adc	r31, r1
     364:	04 91       	lpm	r16, Z
     366:	f7 01       	movw	r30, r14
     368:	e5 0f       	add	r30, r21
     36a:	f1 1d       	adc	r31, r1
     36c:	44 91       	lpm	r20, Z
     36e:	f7 01       	movw	r30, r14
     370:	e8 0f       	add	r30, r24
     372:	f1 1d       	adc	r31, r1
     374:	54 91       	lpm	r21, Z
     376:	f7 01       	movw	r30, r14
     378:	e9 0f       	add	r30, r25
     37a:	f1 1d       	adc	r31, r1
     37c:	84 91       	lpm	r24, Z
     37e:	90 2f       	mov	r25, r16
     380:	41 27       	eor	r20, r17
     382:	11 0f       	add	r17, r17
     384:	08 f4       	brcc	.+2      	; 0x388 <aes_init+0xa6>
     386:	1b e1       	ldi	r17, 0x1B	; 27
     388:	fd 01       	movw	r30, r26
     38a:	09 90       	ld	r0, Y+
     38c:	04 26       	eor	r0, r20
     38e:	01 92       	st	Z+, r0
     390:	09 90       	ld	r0, Y+
     392:	05 26       	eor	r0, r21
     394:	01 92       	st	Z+, r0
     396:	09 90       	ld	r0, Y+
     398:	08 26       	eor	r0, r24
     39a:	01 92       	st	Z+, r0
     39c:	09 90       	ld	r0, Y+
     39e:	09 26       	eor	r0, r25
     3a0:	01 92       	st	Z+, r0
     3a2:	23 95       	inc	r18
     3a4:	27 17       	cp	r18, r23
     3a6:	09 f0       	breq	.+2      	; 0x3aa <aes_init+0xc8>
     3a8:	bd cf       	rjmp	.-134    	; 0x324 <aes_init+0x42>
     3aa:	e8 94       	clt
     3ac:	df 91       	pop	r29
     3ae:	cf 91       	pop	r28
     3b0:	1f 91       	pop	r17
     3b2:	0f 91       	pop	r16
     3b4:	ff 90       	pop	r15
     3b6:	ef 90       	pop	r14
     3b8:	08 95       	ret
	...

00000400 <aes_sbox>:
     400:	63 7c       	andi	r22, 0xC3	; 195
     402:	77 7b       	andi	r23, 0xB7	; 183
     404:	f2 6b       	ori	r31, 0xB2	; 178
     406:	6f c5       	rjmp	.+2782   	; 0xee6 <getTotalPrice+0x5c>
     408:	30 01       	movw	r6, r0
     40a:	67 2b       	or	r22, r23
     40c:	fe d7       	rcall	.+4092   	; 0x140a <testCardReader+0x7e>
     40e:	ab 76       	andi	r26, 0x6B	; 107
     410:	ca 82       	std	Y+2, r12	; 0x02
     412:	c9 7d       	andi	r28, 0xD9	; 217
     414:	fa 59       	subi	r31, 0x9A	; 154
     416:	47 f0       	brie	.+16     	; 0x428 <aes_sbox+0x28>
     418:	ad d4       	rcall	.+2394   	; 0xd74 <lcdCommand+0x3a>
     41a:	a2 af       	std	Z+58, r26	; 0x3a
     41c:	9c a4       	ldd	r9, Y+44	; 0x2c
     41e:	72 c0       	rjmp	.+228    	; 0x504 <buttonInit+0x4>
     420:	b7 fd       	sbrc	r27, 7
     422:	93 26       	eor	r9, r19
     424:	36 3f       	cpi	r19, 0xF6	; 246
     426:	f7 cc       	rjmp	.-1554   	; 0xfffffe16 <__eeprom_end+0xff7efe11>
     428:	34 a5       	ldd	r19, Z+44	; 0x2c
     42a:	e5 f1       	brhs	.+120    	; 0x4a4 <aes_sbox+0xa4>
     42c:	71 d8       	rcall	.-3870   	; 0xfffff510 <__eeprom_end+0xff7ef50b>
     42e:	31 15       	cp	r19, r1
     430:	04 c7       	rjmp	.+3592   	; 0x123a <lcdUpdate+0x2ec>
     432:	23 c3       	rjmp	.+1606   	; 0xa7a <__stack+0x17b>
     434:	18 96       	adiw	r26, 0x08	; 8
     436:	05 9a       	sbi	0x00, 5	; 0
     438:	07 12       	cpse	r0, r23
     43a:	80 e2       	ldi	r24, 0x20	; 32
     43c:	eb 27       	eor	r30, r27
     43e:	b2 75       	andi	r27, 0x52	; 82
     440:	09 83       	std	Y+1, r16	; 0x01
     442:	2c 1a       	sub	r2, r28
     444:	1b 6e       	ori	r17, 0xEB	; 235
     446:	5a a0       	ldd	r5, Y+34	; 0x22
     448:	52 3b       	cpi	r21, 0xB2	; 178
     44a:	d6 b3       	in	r29, 0x16	; 22
     44c:	29 e3       	ldi	r18, 0x39	; 57
     44e:	2f 84       	ldd	r2, Y+15	; 0x0f
     450:	53 d1       	rcall	.+678    	; 0x6f8 <buttonInterrupt+0x4a>
     452:	00 ed       	ldi	r16, 0xD0	; 208
     454:	20 fc       	sbrc	r2, 0
     456:	b1 5b       	subi	r27, 0xB1	; 177
     458:	6a cb       	rjmp	.-2348   	; 0xfffffb2e <__eeprom_end+0xff7efb29>
     45a:	be 39       	cpi	r27, 0x9E	; 158
     45c:	4a 4c       	sbci	r20, 0xCA	; 202
     45e:	58 cf       	rjmp	.-336    	; 0x310 <aes_init+0x2e>
     460:	d0 ef       	ldi	r29, 0xF0	; 240
     462:	aa fb       	.word	0xfbaa	; ????
     464:	43 4d       	sbci	r20, 0xD3	; 211
     466:	33 85       	ldd	r19, Z+11	; 0x0b
     468:	45 f9       	bld	r20, 5
     46a:	02 7f       	andi	r16, 0xF2	; 242
     46c:	50 3c       	cpi	r21, 0xC0	; 192
     46e:	9f a8       	ldd	r9, Y+55	; 0x37
     470:	51 a3       	std	Z+33, r21	; 0x21
     472:	40 8f       	std	Z+24, r20	; 0x18
     474:	92 9d       	mul	r25, r2
     476:	38 f5       	brcc	.+78     	; 0x4c6 <aes_sbox+0xc6>
     478:	bc b6       	in	r11, 0x3c	; 60
     47a:	da 21       	and	r29, r10
     47c:	10 ff       	sbrs	r17, 0
     47e:	f3 d2       	rcall	.+1510   	; 0xa66 <__stack+0x167>
     480:	cd 0c       	add	r12, r13
     482:	13 ec       	ldi	r17, 0xC3	; 195
     484:	5f 97       	sbiw	r26, 0x1f	; 31
     486:	44 17       	cp	r20, r20
     488:	c4 a7       	std	Z+44, r28	; 0x2c
     48a:	7e 3d       	cpi	r23, 0xDE	; 222
     48c:	64 5d       	subi	r22, 0xD4	; 212
     48e:	19 73       	andi	r17, 0x39	; 57
     490:	60 81       	ld	r22, Z
     492:	4f dc       	rcall	.-1890   	; 0xfffffd32 <__eeprom_end+0xff7efd2d>
     494:	22 2a       	or	r2, r18
     496:	90 88       	ldd	r9, Z+16	; 0x10
     498:	46 ee       	ldi	r20, 0xE6	; 230
     49a:	b8 14       	cp	r11, r8
     49c:	de 5e       	subi	r29, 0xEE	; 238
     49e:	0b db       	rcall	.-2538   	; 0xfffffab6 <__eeprom_end+0xff7efab1>
     4a0:	e0 32       	cpi	r30, 0x20	; 32
     4a2:	3a 0a       	sbc	r3, r26
     4a4:	49 06       	cpc	r4, r25
     4a6:	24 5c       	subi	r18, 0xC4	; 196
     4a8:	c2 d3       	rcall	.+1924   	; 0xc2e <cardReaderInterrupt+0x7a>
     4aa:	ac 62       	ori	r26, 0x2C	; 44
     4ac:	91 95       	neg	r25
     4ae:	e4 79       	andi	r30, 0x94	; 148
     4b0:	e7 c8       	rjmp	.-3634   	; 0xfffff680 <__eeprom_end+0xff7ef67b>
     4b2:	37 6d       	ori	r19, 0xD7	; 215
     4b4:	8d d5       	rcall	.+2842   	; 0xfd0 <lcdUpdate+0x82>
     4b6:	4e a9       	ldd	r20, Y+54	; 0x36
     4b8:	6c 56       	subi	r22, 0x6C	; 108
     4ba:	f4 ea       	ldi	r31, 0xA4	; 164
     4bc:	65 7a       	andi	r22, 0xA5	; 165
     4be:	ae 08       	sbc	r10, r14
     4c0:	ba 78       	andi	r27, 0x8A	; 138
     4c2:	25 2e       	mov	r2, r21
     4c4:	1c a6       	std	Y+44, r1	; 0x2c
     4c6:	b4 c6       	rjmp	.+3432   	; 0x1230 <lcdUpdate+0x2e2>
     4c8:	e8 dd       	rcall	.-1072   	; 0x9a <.do_clear_bss_start+0x6>
     4ca:	74 1f       	adc	r23, r20
     4cc:	4b bd       	out	0x2b, r20	; 43
     4ce:	8b 8a       	std	Y+19, r8	; 0x13
     4d0:	70 3e       	cpi	r23, 0xE0	; 224
     4d2:	b5 66       	ori	r27, 0x65	; 101
     4d4:	48 03       	fmul	r20, r16
     4d6:	f6 0e       	add	r15, r22
     4d8:	61 35       	cpi	r22, 0x51	; 81
     4da:	57 b9       	out	0x07, r21	; 7
     4dc:	86 c1       	rjmp	.+780    	; 0x7ea <verifycard+0x16>
     4de:	1d 9e       	mul	r1, r29
     4e0:	e1 f8       	bld	r14, 1
     4e2:	98 11       	cpse	r25, r8
     4e4:	69 d9       	rcall	.-3374   	; 0xfffff7b8 <__eeprom_end+0xff7ef7b3>
     4e6:	8e 94 9b 1e 	call	0x203d36	; 0x203d36 <__data_load_end+0x201364>
     4ea:	87 e9       	ldi	r24, 0x97	; 151
     4ec:	ce 55       	subi	r28, 0x5E	; 94
     4ee:	28 df       	rcall	.-432    	; 0x340 <aes_init+0x5e>
     4f0:	8c a1       	ldd	r24, Y+36	; 0x24
     4f2:	89 0d       	add	r24, r9
     4f4:	bf e6       	ldi	r27, 0x6F	; 111
     4f6:	42 68       	ori	r20, 0x82	; 130
     4f8:	41 99       	sbic	0x08, 1	; 8
     4fa:	2d 0f       	add	r18, r29
     4fc:	b0 54       	subi	r27, 0x40	; 64
     4fe:	bb 16       	cp	r11, r27

00000500 <buttonInit>:
     500:	ec e6       	ldi	r30, 0x6C	; 108
     502:	f0 e0       	ldi	r31, 0x00	; 0
     504:	80 81       	ld	r24, Z
     506:	88 63       	ori	r24, 0x38	; 56
     508:	80 83       	st	Z, r24
     50a:	e8 e6       	ldi	r30, 0x68	; 104
     50c:	f0 e0       	ldi	r31, 0x00	; 0
     50e:	80 81       	ld	r24, Z
     510:	82 60       	ori	r24, 0x02	; 2
     512:	80 83       	st	Z, r24
     514:	88 b1       	in	r24, 0x08	; 8
     516:	88 63       	ori	r24, 0x38	; 56
     518:	88 b9       	out	0x08, r24	; 8
     51a:	08 95       	ret

0000051c <setUIStateRF>:
     51c:	80 91 14 02 	lds	r24, 0x0214
     520:	89 30       	cpi	r24, 0x09	; 9
     522:	99 f4       	brne	.+38     	; 0x54a <setUIStateRF+0x2e>
     524:	80 91 1f 02 	lds	r24, 0x021F
     528:	82 30       	cpi	r24, 0x02	; 2
     52a:	31 f4       	brne	.+12     	; 0x538 <setUIStateRF+0x1c>
     52c:	10 92 12 02 	sts	0x0212, r1
     530:	83 e0       	ldi	r24, 0x03	; 3
     532:	80 93 14 02 	sts	0x0214, r24
     536:	08 95       	ret
     538:	80 91 1f 02 	lds	r24, 0x021F
     53c:	81 30       	cpi	r24, 0x01	; 1
     53e:	09 f0       	breq	.+2      	; 0x542 <setUIStateRF+0x26>
     540:	3f c0       	rjmp	.+126    	; 0x5c0 <setUIStateRF+0xa4>
     542:	87 e0       	ldi	r24, 0x07	; 7
     544:	80 93 14 02 	sts	0x0214, r24
     548:	08 95       	ret
     54a:	80 91 14 02 	lds	r24, 0x0214
     54e:	8a 30       	cpi	r24, 0x0A	; 10
     550:	91 f4       	brne	.+36     	; 0x576 <setUIStateRF+0x5a>
     552:	80 91 1f 02 	lds	r24, 0x021F
     556:	82 30       	cpi	r24, 0x02	; 2
     558:	31 f4       	brne	.+12     	; 0x566 <setUIStateRF+0x4a>
     55a:	10 92 12 02 	sts	0x0212, r1
     55e:	84 e0       	ldi	r24, 0x04	; 4
     560:	80 93 14 02 	sts	0x0214, r24
     564:	08 95       	ret
     566:	80 91 1f 02 	lds	r24, 0x021F
     56a:	81 30       	cpi	r24, 0x01	; 1
     56c:	49 f5       	brne	.+82     	; 0x5c0 <setUIStateRF+0xa4>
     56e:	88 e0       	ldi	r24, 0x08	; 8
     570:	80 93 14 02 	sts	0x0214, r24
     574:	08 95       	ret
     576:	80 91 14 02 	lds	r24, 0x0214
     57a:	83 30       	cpi	r24, 0x03	; 3
     57c:	39 f4       	brne	.+14     	; 0x58c <setUIStateRF+0x70>
     57e:	80 91 1f 02 	lds	r24, 0x021F
     582:	82 30       	cpi	r24, 0x02	; 2
     584:	e9 f0       	breq	.+58     	; 0x5c0 <setUIStateRF+0xa4>
     586:	10 92 14 02 	sts	0x0214, r1
     58a:	08 95       	ret
     58c:	80 91 14 02 	lds	r24, 0x0214
     590:	84 30       	cpi	r24, 0x04	; 4
     592:	39 f4       	brne	.+14     	; 0x5a2 <setUIStateRF+0x86>
     594:	80 91 1f 02 	lds	r24, 0x021F
     598:	82 30       	cpi	r24, 0x02	; 2
     59a:	91 f0       	breq	.+36     	; 0x5c0 <setUIStateRF+0xa4>
     59c:	10 92 14 02 	sts	0x0214, r1
     5a0:	08 95       	ret
     5a2:	80 91 14 02 	lds	r24, 0x0214
     5a6:	86 30       	cpi	r24, 0x06	; 6
     5a8:	21 f4       	brne	.+8      	; 0x5b2 <setUIStateRF+0x96>
     5aa:	8a e0       	ldi	r24, 0x0A	; 10
     5ac:	80 93 14 02 	sts	0x0214, r24
     5b0:	08 95       	ret
     5b2:	80 91 14 02 	lds	r24, 0x0214
     5b6:	85 30       	cpi	r24, 0x05	; 5
     5b8:	19 f4       	brne	.+6      	; 0x5c0 <setUIStateRF+0xa4>
     5ba:	89 e0       	ldi	r24, 0x09	; 9
     5bc:	80 93 14 02 	sts	0x0214, r24
     5c0:	08 95       	ret

000005c2 <setUIState>:
     5c2:	80 91 14 02 	lds	r24, 0x0214
     5c6:	81 11       	cpse	r24, r1
     5c8:	15 c0       	rjmp	.+42     	; 0x5f4 <setUIState+0x32>
     5ca:	80 91 22 02 	lds	r24, 0x0222
     5ce:	90 91 23 02 	lds	r25, 0x0223
     5d2:	03 97       	sbiw	r24, 0x03	; 3
     5d4:	21 f4       	brne	.+8      	; 0x5de <setUIState+0x1c>
     5d6:	81 e0       	ldi	r24, 0x01	; 1
     5d8:	80 93 14 02 	sts	0x0214, r24
     5dc:	63 c0       	rjmp	.+198    	; 0x6a4 <setUIState+0xe2>
     5de:	80 91 21 02 	lds	r24, 0x0221
     5e2:	88 23       	and	r24, r24
     5e4:	09 f4       	brne	.+2      	; 0x5e8 <setUIState+0x26>
     5e6:	5e c0       	rjmp	.+188    	; 0x6a4 <setUIState+0xe2>
     5e8:	10 92 1d 02 	sts	0x021D, r1
     5ec:	86 e0       	ldi	r24, 0x06	; 6
     5ee:	80 93 14 02 	sts	0x0214, r24
     5f2:	58 c0       	rjmp	.+176    	; 0x6a4 <setUIState+0xe2>
     5f4:	80 91 14 02 	lds	r24, 0x0214
     5f8:	81 30       	cpi	r24, 0x01	; 1
     5fa:	11 f5       	brne	.+68     	; 0x640 <setUIState+0x7e>
     5fc:	80 91 22 02 	lds	r24, 0x0222
     600:	90 91 23 02 	lds	r25, 0x0223
     604:	03 97       	sbiw	r24, 0x03	; 3
     606:	21 f4       	brne	.+8      	; 0x610 <setUIState+0x4e>
     608:	82 e0       	ldi	r24, 0x02	; 2
     60a:	80 93 14 02 	sts	0x0214, r24
     60e:	4a c0       	rjmp	.+148    	; 0x6a4 <setUIState+0xe2>
     610:	80 91 22 02 	lds	r24, 0x0222
     614:	90 91 23 02 	lds	r25, 0x0223
     618:	01 97       	sbiw	r24, 0x01	; 1
     61a:	31 f4       	brne	.+12     	; 0x628 <setUIState+0x66>
     61c:	80 91 12 02 	lds	r24, 0x0212
     620:	8f 5f       	subi	r24, 0xFF	; 255
     622:	80 93 12 02 	sts	0x0212, r24
     626:	3e c0       	rjmp	.+124    	; 0x6a4 <setUIState+0xe2>
     628:	80 91 22 02 	lds	r24, 0x0222
     62c:	90 91 23 02 	lds	r25, 0x0223
     630:	02 97       	sbiw	r24, 0x02	; 2
     632:	c1 f5       	brne	.+112    	; 0x6a4 <setUIState+0xe2>
     634:	80 91 12 02 	lds	r24, 0x0212
     638:	81 50       	subi	r24, 0x01	; 1
     63a:	80 93 12 02 	sts	0x0212, r24
     63e:	32 c0       	rjmp	.+100    	; 0x6a4 <setUIState+0xe2>
     640:	80 91 14 02 	lds	r24, 0x0214
     644:	82 30       	cpi	r24, 0x02	; 2
     646:	a1 f4       	brne	.+40     	; 0x670 <setUIState+0xae>
     648:	80 91 22 02 	lds	r24, 0x0222
     64c:	90 91 23 02 	lds	r25, 0x0223
     650:	03 97       	sbiw	r24, 0x03	; 3
     652:	19 f4       	brne	.+6      	; 0x65a <setUIState+0x98>
     654:	10 92 14 02 	sts	0x0214, r1
     658:	25 c0       	rjmp	.+74     	; 0x6a4 <setUIState+0xe2>
     65a:	80 91 21 02 	lds	r24, 0x0221
     65e:	88 23       	and	r24, r24
     660:	09 f1       	breq	.+66     	; 0x6a4 <setUIState+0xe2>
     662:	81 e0       	ldi	r24, 0x01	; 1
     664:	80 93 1d 02 	sts	0x021D, r24
     668:	85 e0       	ldi	r24, 0x05	; 5
     66a:	80 93 14 02 	sts	0x0214, r24
     66e:	1a c0       	rjmp	.+52     	; 0x6a4 <setUIState+0xe2>
     670:	80 91 14 02 	lds	r24, 0x0214
     674:	87 30       	cpi	r24, 0x07	; 7
     676:	51 f4       	brne	.+20     	; 0x68c <setUIState+0xca>
     678:	80 91 22 02 	lds	r24, 0x0222
     67c:	90 91 23 02 	lds	r25, 0x0223
     680:	89 2b       	or	r24, r25
     682:	81 f0       	breq	.+32     	; 0x6a4 <setUIState+0xe2>
     684:	82 e0       	ldi	r24, 0x02	; 2
     686:	80 93 14 02 	sts	0x0214, r24
     68a:	0c c0       	rjmp	.+24     	; 0x6a4 <setUIState+0xe2>
     68c:	80 91 14 02 	lds	r24, 0x0214
     690:	88 30       	cpi	r24, 0x08	; 8
     692:	41 f4       	brne	.+16     	; 0x6a4 <setUIState+0xe2>
     694:	80 91 22 02 	lds	r24, 0x0222
     698:	90 91 23 02 	lds	r25, 0x0223
     69c:	89 2b       	or	r24, r25
     69e:	11 f0       	breq	.+4      	; 0x6a4 <setUIState+0xe2>
     6a0:	10 92 14 02 	sts	0x0214, r1
     6a4:	10 92 23 02 	sts	0x0223, r1
     6a8:	10 92 22 02 	sts	0x0222, r1
     6ac:	08 95       	ret

000006ae <buttonInterrupt>:
     6ae:	80 95       	com	r24
     6b0:	68 23       	and	r22, r24
     6b2:	60 ff       	sbrs	r22, 0
     6b4:	06 c0       	rjmp	.+12     	; 0x6c2 <buttonInterrupt+0x14>
     6b6:	22 e0       	ldi	r18, 0x02	; 2
     6b8:	30 e0       	ldi	r19, 0x00	; 0
     6ba:	30 93 23 02 	sts	0x0223, r19
     6be:	20 93 22 02 	sts	0x0222, r18
     6c2:	61 ff       	sbrs	r22, 1
     6c4:	06 c0       	rjmp	.+12     	; 0x6d2 <buttonInterrupt+0x24>
     6c6:	23 e0       	ldi	r18, 0x03	; 3
     6c8:	30 e0       	ldi	r19, 0x00	; 0
     6ca:	30 93 23 02 	sts	0x0223, r19
     6ce:	20 93 22 02 	sts	0x0222, r18
     6d2:	62 ff       	sbrs	r22, 2
     6d4:	06 c0       	rjmp	.+12     	; 0x6e2 <buttonInterrupt+0x34>
     6d6:	81 e0       	ldi	r24, 0x01	; 1
     6d8:	90 e0       	ldi	r25, 0x00	; 0
     6da:	90 93 23 02 	sts	0x0223, r25
     6de:	80 93 22 02 	sts	0x0222, r24
     6e2:	0e 94 4c 09 	call	0x1298	; 0x1298 <isMaintenance>
     6e6:	89 2b       	or	r24, r25
     6e8:	71 f4       	brne	.+28     	; 0x706 <buttonInterrupt+0x58>
     6ea:	10 92 16 02 	sts	0x0216, r1
     6ee:	0e 94 50 0c 	call	0x18a0	; 0x18a0 <isPower>
     6f2:	89 2b       	or	r24, r25
     6f4:	21 f4       	brne	.+8      	; 0x6fe <buttonInterrupt+0x50>
     6f6:	10 92 23 02 	sts	0x0223, r1
     6fa:	10 92 22 02 	sts	0x0222, r1
     6fe:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <setUIState>
     702:	0e 94 5c 0c 	call	0x18b8	; 0x18b8 <turnOnUIPower>
     706:	08 95       	ret

00000708 <clearBuffer>:
     708:	66 23       	and	r22, r22
     70a:	41 f0       	breq	.+16     	; 0x71c <clearBuffer+0x14>
     70c:	28 2f       	mov	r18, r24
     70e:	e8 2f       	mov	r30, r24
     710:	f9 2f       	mov	r31, r25
     712:	11 92       	st	Z+, r1
     714:	8e 2f       	mov	r24, r30
     716:	82 1b       	sub	r24, r18
     718:	86 17       	cp	r24, r22
     71a:	d8 f3       	brcs	.-10     	; 0x712 <clearBuffer+0xa>
     71c:	08 95       	ret

0000071e <initTrackState>:
     71e:	ff 92       	push	r15
     720:	0f 93       	push	r16
     722:	1f 93       	push	r17
     724:	cf 93       	push	r28
     726:	df 93       	push	r29
     728:	ec 01       	movw	r28, r24
     72a:	8b 01       	movw	r16, r22
     72c:	f4 2e       	mov	r15, r20
     72e:	68 ec       	ldi	r22, 0xC8	; 200
     730:	c8 01       	movw	r24, r16
     732:	0e 94 84 03 	call	0x708	; 0x708 <clearBuffer>
     736:	18 86       	std	Y+8, r1	; 0x08
     738:	1d 83       	std	Y+5, r17	; 0x05
     73a:	0c 83       	std	Y+4, r16	; 0x04
     73c:	fe 82       	std	Y+6, r15	; 0x06
     73e:	1f 82       	std	Y+7, r1	; 0x07
     740:	18 82       	st	Y, r1
     742:	df 91       	pop	r29
     744:	cf 91       	pop	r28
     746:	1f 91       	pop	r17
     748:	0f 91       	pop	r16
     74a:	ff 90       	pop	r15
     74c:	08 95       	ret

0000074e <shiftTrack>:
     74e:	0f 93       	push	r16
     750:	1f 93       	push	r17
     752:	cf 93       	push	r28
     754:	df 93       	push	r29
     756:	41 30       	cpi	r20, 0x01	; 1
     758:	91 f4       	brne	.+36     	; 0x77e <shiftTrack+0x30>
     75a:	c6 2f       	mov	r28, r22
     75c:	d7 2f       	mov	r29, r23
     75e:	fc 01       	movw	r30, r24
     760:	2d e6       	ldi	r18, 0x6D	; 109
     762:	30 e0       	ldi	r19, 0x00	; 0
     764:	df 01       	movw	r26, r30
     766:	41 91       	ld	r20, Z+
     768:	44 0f       	add	r20, r20
     76a:	34 2b       	or	r19, r20
     76c:	3f 73       	andi	r19, 0x3F	; 63
     76e:	39 93       	st	Y+, r19
     770:	3c 91       	ld	r19, X
     772:	36 fb       	bst	r19, 6
     774:	33 27       	eor	r19, r19
     776:	30 f9       	bld	r19, 0
     778:	21 50       	subi	r18, 0x01	; 1
     77a:	a1 f7       	brne	.-24     	; 0x764 <shiftTrack+0x16>
     77c:	21 c0       	rjmp	.+66     	; 0x7c0 <shiftTrack+0x72>
     77e:	dc 01       	movw	r26, r24
     780:	11 96       	adiw	r26, 0x01	; 1
     782:	ec 01       	movw	r28, r24
     784:	e6 2f       	mov	r30, r22
     786:	f7 2f       	mov	r31, r23
     788:	1d e6       	ldi	r17, 0x6D	; 109
     78a:	4d 91       	ld	r20, X+
     78c:	09 91       	ld	r16, Y+
     78e:	24 2f       	mov	r18, r20
     790:	21 70       	andi	r18, 0x01	; 1
     792:	30 e0       	ldi	r19, 0x00	; 0
     794:	a9 01       	movw	r20, r18
     796:	00 24       	eor	r0, r0
     798:	56 95       	lsr	r21
     79a:	47 95       	ror	r20
     79c:	07 94       	ror	r0
     79e:	56 95       	lsr	r21
     7a0:	47 95       	ror	r20
     7a2:	07 94       	ror	r0
     7a4:	54 2f       	mov	r21, r20
     7a6:	40 2d       	mov	r20, r0
     7a8:	50 2f       	mov	r21, r16
     7aa:	56 95       	lsr	r21
     7ac:	45 2b       	or	r20, r21
     7ae:	41 93       	st	Z+, r20
     7b0:	11 50       	subi	r17, 0x01	; 1
     7b2:	59 f7       	brne	.-42     	; 0x78a <shiftTrack+0x3c>
     7b4:	05 c0       	rjmp	.+10     	; 0x7c0 <shiftTrack+0x72>
     7b6:	91 91       	ld	r25, Z+
     7b8:	9d 93       	st	X+, r25
     7ba:	81 50       	subi	r24, 0x01	; 1
     7bc:	e1 f7       	brne	.-8      	; 0x7b6 <shiftTrack+0x68>
     7be:	05 c0       	rjmp	.+10     	; 0x7ca <shiftTrack+0x7c>
     7c0:	e6 2f       	mov	r30, r22
     7c2:	f7 2f       	mov	r31, r23
     7c4:	dc 01       	movw	r26, r24
     7c6:	8d e6       	ldi	r24, 0x6D	; 109
     7c8:	f6 cf       	rjmp	.-20     	; 0x7b6 <shiftTrack+0x68>
     7ca:	df 91       	pop	r29
     7cc:	cf 91       	pop	r28
     7ce:	1f 91       	pop	r17
     7d0:	0f 91       	pop	r16
     7d2:	08 95       	ret

000007d4 <verifycard>:
     7d4:	df 92       	push	r13
     7d6:	ef 92       	push	r14
     7d8:	ff 92       	push	r15
     7da:	0f 93       	push	r16
     7dc:	1f 93       	push	r17
     7de:	cf 93       	push	r28
     7e0:	df 93       	push	r29
     7e2:	fc 01       	movw	r30, r24
     7e4:	0f e4       	ldi	r16, 0x4F	; 79
     7e6:	ee 24       	eor	r14, r14
     7e8:	e3 94       	inc	r14
     7ea:	c0 e0       	ldi	r28, 0x00	; 0
     7ec:	d0 e0       	ldi	r29, 0x00	; 0
     7ee:	ff 24       	eor	r15, r15
     7f0:	f3 94       	inc	r15
     7f2:	d1 2c       	mov	r13, r1
     7f4:	1c c0       	rjmp	.+56     	; 0x82e <verifycard+0x5a>
     7f6:	ab 01       	movw	r20, r22
     7f8:	02 2e       	mov	r0, r18
     7fa:	02 c0       	rjmp	.+4      	; 0x800 <verifycard+0x2c>
     7fc:	55 95       	asr	r21
     7fe:	47 95       	ror	r20
     800:	0a 94       	dec	r0
     802:	e2 f7       	brpl	.-8      	; 0x7fc <verifycard+0x28>
     804:	40 fd       	sbrc	r20, 0
     806:	1f 5f       	subi	r17, 0xFF	; 255
     808:	2f 5f       	subi	r18, 0xFF	; 255
     80a:	3f 4f       	sbci	r19, 0xFF	; 255
     80c:	26 30       	cpi	r18, 0x06	; 6
     80e:	31 05       	cpc	r19, r1
     810:	91 f7       	brne	.-28     	; 0x7f6 <verifycard+0x22>
     812:	2c 91       	ld	r18, X
     814:	31 96       	adiw	r30, 0x01	; 1
     816:	32 2f       	mov	r19, r18
     818:	32 95       	swap	r19
     81a:	36 95       	lsr	r19
     81c:	36 95       	lsr	r19
     81e:	33 70       	andi	r19, 0x03	; 3
     820:	11 70       	andi	r17, 0x01	; 1
     822:	31 13       	cpse	r19, r17
     824:	ed 2c       	mov	r14, r13
     826:	2f 31       	cpi	r18, 0x1F	; 31
     828:	41 f0       	breq	.+16     	; 0x83a <verifycard+0x66>
     82a:	01 50       	subi	r16, 0x01	; 1
     82c:	31 f0       	breq	.+12     	; 0x83a <verifycard+0x66>
     82e:	df 01       	movw	r26, r30
     830:	60 81       	ld	r22, Z
     832:	70 e0       	ldi	r23, 0x00	; 0
     834:	9e 01       	movw	r18, r28
     836:	1f 2d       	mov	r17, r15
     838:	de cf       	rjmp	.-68     	; 0x7f6 <verifycard+0x22>
     83a:	fc 01       	movw	r30, r24
     83c:	20 81       	ld	r18, Z
     83e:	25 34       	cpi	r18, 0x45	; 69
     840:	41 f4       	brne	.+16     	; 0x852 <verifycard+0x7e>
     842:	81 81       	ldd	r24, Z+1	; 0x01
     844:	82 36       	cpi	r24, 0x62	; 98
     846:	39 f4       	brne	.+14     	; 0x856 <verifycard+0x82>
     848:	81 e0       	ldi	r24, 0x01	; 1
     84a:	e1 10       	cpse	r14, r1
     84c:	05 c0       	rjmp	.+10     	; 0x858 <verifycard+0x84>
     84e:	80 e0       	ldi	r24, 0x00	; 0
     850:	03 c0       	rjmp	.+6      	; 0x858 <verifycard+0x84>
     852:	80 e0       	ldi	r24, 0x00	; 0
     854:	01 c0       	rjmp	.+2      	; 0x858 <verifycard+0x84>
     856:	80 e0       	ldi	r24, 0x00	; 0
     858:	df 91       	pop	r29
     85a:	cf 91       	pop	r28
     85c:	1f 91       	pop	r17
     85e:	0f 91       	pop	r16
     860:	ff 90       	pop	r15
     862:	ef 90       	pop	r14
     864:	df 90       	pop	r13
     866:	08 95       	ret

00000868 <sendCardInformation>:
     868:	cf 93       	push	r28
     86a:	df 93       	push	r29
     86c:	cd b7       	in	r28, 0x3d	; 61
     86e:	de b7       	in	r29, 0x3e	; 62
     870:	c4 5f       	subi	r28, 0xF4	; 244
     872:	d1 40       	sbci	r29, 0x01	; 1
     874:	0f b6       	in	r0, 0x3f	; 63
     876:	f8 94       	cli
     878:	de bf       	out	0x3e, r29	; 62
     87a:	0f be       	out	0x3f, r0	; 63
     87c:	cd bf       	out	0x3d, r28	; 61
     87e:	fc 01       	movw	r30, r24
     880:	37 81       	ldd	r19, Z+7	; 0x07
     882:	33 23       	and	r19, r19
     884:	89 f0       	breq	.+34     	; 0x8a8 <sendCardInformation+0x40>
     886:	44 81       	ldd	r20, Z+4	; 0x04
     888:	de 01       	movw	r26, r28
     88a:	11 96       	adiw	r26, 0x01	; 1
     88c:	64 2f       	mov	r22, r20
     88e:	75 81       	ldd	r23, Z+5	; 0x05
     890:	fb 01       	movw	r30, r22
     892:	81 91       	ld	r24, Z+
     894:	bf 01       	movw	r22, r30
     896:	8f 73       	andi	r24, 0x3F	; 63
     898:	80 5e       	subi	r24, 0xE0	; 224
     89a:	8d 93       	st	X+, r24
     89c:	cd 01       	movw	r24, r26
     89e:	2e 2f       	mov	r18, r30
     8a0:	24 1b       	sub	r18, r20
     8a2:	23 17       	cp	r18, r19
     8a4:	a8 f3       	brcs	.-22     	; 0x890 <sendCardInformation+0x28>
     8a6:	02 c0       	rjmp	.+4      	; 0x8ac <sendCardInformation+0x44>
     8a8:	ce 01       	movw	r24, r28
     8aa:	01 96       	adiw	r24, 0x01	; 1
     8ac:	2a e0       	ldi	r18, 0x0A	; 10
     8ae:	fc 01       	movw	r30, r24
     8b0:	20 83       	st	Z, r18
     8b2:	8f e4       	ldi	r24, 0x4F	; 79
     8b4:	fe 01       	movw	r30, r28
     8b6:	31 96       	adiw	r30, 0x01	; 1
     8b8:	a4 e2       	ldi	r26, 0x24	; 36
     8ba:	b2 e0       	ldi	r27, 0x02	; 2
     8bc:	01 90       	ld	r0, Z+
     8be:	0d 92       	st	X+, r0
     8c0:	8a 95       	dec	r24
     8c2:	e1 f7       	brne	.-8      	; 0x8bc <sendCardInformation+0x54>
     8c4:	cc 50       	subi	r28, 0x0C	; 12
     8c6:	de 4f       	sbci	r29, 0xFE	; 254
     8c8:	0f b6       	in	r0, 0x3f	; 63
     8ca:	f8 94       	cli
     8cc:	de bf       	out	0x3e, r29	; 62
     8ce:	0f be       	out	0x3f, r0	; 63
     8d0:	cd bf       	out	0x3d, r28	; 61
     8d2:	df 91       	pop	r29
     8d4:	cf 91       	pop	r28
     8d6:	08 95       	ret

000008d8 <getCard>:
     8d8:	4f 92       	push	r4
     8da:	5f 92       	push	r5
     8dc:	7f 92       	push	r7
     8de:	8f 92       	push	r8
     8e0:	9f 92       	push	r9
     8e2:	af 92       	push	r10
     8e4:	bf 92       	push	r11
     8e6:	cf 92       	push	r12
     8e8:	df 92       	push	r13
     8ea:	ef 92       	push	r14
     8ec:	ff 92       	push	r15
     8ee:	0f 93       	push	r16
     8f0:	1f 93       	push	r17
     8f2:	cf 93       	push	r28
     8f4:	df 93       	push	r29
     8f6:	cd b7       	in	r28, 0x3d	; 61
     8f8:	de b7       	in	r29, 0x3e	; 62
     8fa:	ca 59       	subi	r28, 0x9A	; 154
     8fc:	d1 40       	sbci	r29, 0x01	; 1
     8fe:	0f b6       	in	r0, 0x3f	; 63
     900:	f8 94       	cli
     902:	de bf       	out	0x3e, r29	; 62
     904:	0f be       	out	0x3f, r0	; 63
     906:	cd bf       	out	0x3d, r28	; 61
     908:	48 ec       	ldi	r20, 0xC8	; 200
     90a:	be 01       	movw	r22, r28
     90c:	6f 5f       	subi	r22, 0xFF	; 255
     90e:	7f 4f       	sbci	r23, 0xFF	; 255
     910:	ce 01       	movw	r24, r28
     912:	87 53       	subi	r24, 0x37	; 55
     914:	9f 4f       	sbci	r25, 0xFF	; 255
     916:	0e 94 8f 03 	call	0x71e	; 0x71e <initTrackState>
     91a:	81 e0       	ldi	r24, 0x01	; 1
     91c:	c6 53       	subi	r28, 0x36	; 54
     91e:	df 4f       	sbci	r29, 0xFF	; 255
     920:	88 83       	st	Y, r24
     922:	ca 5c       	subi	r28, 0xCA	; 202
     924:	d0 40       	sbci	r29, 0x00	; 0
     926:	82 e0       	ldi	r24, 0x02	; 2
     928:	c5 53       	subi	r28, 0x35	; 53
     92a:	df 4f       	sbci	r29, 0xFF	; 255
     92c:	88 83       	st	Y, r24
     92e:	cb 5c       	subi	r28, 0xCB	; 203
     930:	d0 40       	sbci	r29, 0x00	; 0
     932:	c4 53       	subi	r28, 0x34	; 52
     934:	df 4f       	sbci	r29, 0xFF	; 255
     936:	88 83       	st	Y, r24
     938:	cc 5c       	subi	r28, 0xCC	; 204
     93a:	d0 40       	sbci	r29, 0x00	; 0
     93c:	87 e0       	ldi	r24, 0x07	; 7
     93e:	ce 52       	subi	r28, 0x2E	; 46
     940:	df 4f       	sbci	r29, 0xFF	; 255
     942:	88 83       	st	Y, r24
     944:	c2 5d       	subi	r28, 0xD2	; 210
     946:	d0 40       	sbci	r29, 0x00	; 0
     948:	30 99       	sbic	0x06, 0	; 6
     94a:	10 c1       	rjmp	.+544    	; 0xb6c <__stack+0x26d>
     94c:	10 e0       	ldi	r17, 0x00	; 0
     94e:	00 e0       	ldi	r16, 0x00	; 0
     950:	a0 e0       	ldi	r26, 0x00	; 0
     952:	b0 e0       	ldi	r27, 0x00	; 0
     954:	61 e0       	ldi	r22, 0x01	; 1
     956:	70 e0       	ldi	r23, 0x00	; 0
     958:	ff 24       	eor	r15, r15
     95a:	fa 94       	dec	r15
     95c:	ee 24       	eor	r14, r14
     95e:	e3 94       	inc	r14
     960:	41 2f       	mov	r20, r17
     962:	50 e0       	ldi	r21, 0x00	; 0
     964:	c3 53       	subi	r28, 0x33	; 51
     966:	df 4f       	sbci	r29, 0xFF	; 255
     968:	e8 81       	ld	r30, Y
     96a:	f9 81       	ldd	r31, Y+1	; 0x01
     96c:	cd 5c       	subi	r28, 0xCD	; 205
     96e:	d0 40       	sbci	r29, 0x00	; 0
     970:	e4 0f       	add	r30, r20
     972:	f5 1f       	adc	r31, r21
     974:	10 82       	st	Z, r1
     976:	cd 01       	movw	r24, r26
     978:	c5 53       	subi	r28, 0x35	; 53
     97a:	df 4f       	sbci	r29, 0xFF	; 255
     97c:	38 81       	ld	r19, Y
     97e:	cb 5c       	subi	r28, 0xCB	; 203
     980:	d0 40       	sbci	r29, 0x00	; 0
     982:	c6 53       	subi	r28, 0x36	; 54
     984:	df 4f       	sbci	r29, 0xFF	; 255
     986:	e8 81       	ld	r30, Y
     988:	ca 5c       	subi	r28, 0xCA	; 202
     98a:	d0 40       	sbci	r29, 0x00	; 0
     98c:	26 b1       	in	r18, 0x06	; 6
     98e:	23 23       	and	r18, r19
     990:	19 f0       	breq	.+6      	; 0x998 <__stack+0x99>
     992:	26 b1       	in	r18, 0x06	; 6
     994:	2e 23       	and	r18, r30
     996:	d1 f3       	breq	.-12     	; 0x98c <__stack+0x8d>
     998:	32 99       	sbic	0x06, 2	; 6
     99a:	12 c0       	rjmp	.+36     	; 0x9c0 <__stack+0xc1>
     99c:	c3 53       	subi	r28, 0x33	; 51
     99e:	df 4f       	sbci	r29, 0xFF	; 255
     9a0:	e8 81       	ld	r30, Y
     9a2:	f9 81       	ldd	r31, Y+1	; 0x01
     9a4:	cd 5c       	subi	r28, 0xCD	; 205
     9a6:	d0 40       	sbci	r29, 0x00	; 0
     9a8:	e4 0f       	add	r30, r20
     9aa:	f5 1f       	adc	r31, r21
     9ac:	9b 01       	movw	r18, r22
     9ae:	08 2e       	mov	r0, r24
     9b0:	02 c0       	rjmp	.+4      	; 0x9b6 <__stack+0xb7>
     9b2:	22 0f       	add	r18, r18
     9b4:	33 1f       	adc	r19, r19
     9b6:	0a 94       	dec	r0
     9b8:	e2 f7       	brpl	.-8      	; 0x9b2 <__stack+0xb3>
     9ba:	30 81       	ld	r19, Z
     9bc:	23 2b       	or	r18, r19
     9be:	20 83       	st	Z, r18
     9c0:	c5 53       	subi	r28, 0x35	; 53
     9c2:	df 4f       	sbci	r29, 0xFF	; 255
     9c4:	38 81       	ld	r19, Y
     9c6:	cb 5c       	subi	r28, 0xCB	; 203
     9c8:	d0 40       	sbci	r29, 0x00	; 0
     9ca:	c6 53       	subi	r28, 0x36	; 54
     9cc:	df 4f       	sbci	r29, 0xFF	; 255
     9ce:	e8 81       	ld	r30, Y
     9d0:	ca 5c       	subi	r28, 0xCA	; 202
     9d2:	d0 40       	sbci	r29, 0x00	; 0
     9d4:	26 b1       	in	r18, 0x06	; 6
     9d6:	23 23       	and	r18, r19
     9d8:	19 f4       	brne	.+6      	; 0x9e0 <__stack+0xe1>
     9da:	26 b1       	in	r18, 0x06	; 6
     9dc:	2e 23       	and	r18, r30
     9de:	d1 f3       	breq	.-12     	; 0x9d4 <__stack+0xd5>
     9e0:	01 96       	adiw	r24, 0x01	; 1
     9e2:	87 30       	cpi	r24, 0x07	; 7
     9e4:	91 05       	cpc	r25, r1
     9e6:	41 f6       	brne	.-112    	; 0x978 <__stack+0x79>
     9e8:	11 11       	cpse	r17, r1
     9ea:	0f c0       	rjmp	.+30     	; 0xa0a <__stack+0x10b>
     9ec:	c3 53       	subi	r28, 0x33	; 51
     9ee:	df 4f       	sbci	r29, 0xFF	; 255
     9f0:	88 81       	ld	r24, Y
     9f2:	99 81       	ldd	r25, Y+1	; 0x01
     9f4:	cd 5c       	subi	r28, 0xCD	; 205
     9f6:	d0 40       	sbci	r29, 0x00	; 0
     9f8:	fc 01       	movw	r30, r24
     9fa:	e4 0f       	add	r30, r20
     9fc:	f5 1f       	adc	r31, r21
     9fe:	80 81       	ld	r24, Z
     a00:	81 11       	cpse	r24, r1
     a02:	b8 c0       	rjmp	.+368    	; 0xb74 <__stack+0x275>
     a04:	0f 5f       	subi	r16, 0xFF	; 255
     a06:	1f 2d       	mov	r17, r15
     a08:	bc c0       	rjmp	.+376    	; 0xb82 <__stack+0x283>
     a0a:	04 30       	cpi	r16, 0x04	; 4
     a0c:	10 f4       	brcc	.+4      	; 0xa12 <__stack+0x113>
     a0e:	11 50       	subi	r17, 0x01	; 1
     a10:	10 c0       	rjmp	.+32     	; 0xa32 <__stack+0x133>
     a12:	11 30       	cpi	r17, 0x01	; 1
     a14:	71 f4       	brne	.+28     	; 0xa32 <__stack+0x133>
     a16:	c3 53       	subi	r28, 0x33	; 51
     a18:	df 4f       	sbci	r29, 0xFF	; 255
     a1a:	88 81       	ld	r24, Y
     a1c:	99 81       	ldd	r25, Y+1	; 0x01
     a1e:	cd 5c       	subi	r28, 0xCD	; 205
     a20:	d0 40       	sbci	r29, 0x00	; 0
     a22:	fc 01       	movw	r30, r24
     a24:	e4 0f       	add	r30, r20
     a26:	f5 1f       	adc	r31, r21
     a28:	80 81       	ld	r24, Z
     a2a:	88 23       	and	r24, r24
     a2c:	09 f4       	brne	.+2      	; 0xa30 <__stack+0x131>
     a2e:	a7 c0       	rjmp	.+334    	; 0xb7e <__stack+0x27f>
     a30:	a8 c0       	rjmp	.+336    	; 0xb82 <__stack+0x283>
     a32:	1f 5f       	subi	r17, 0xFF	; 255
     a34:	1f 34       	cpi	r17, 0x4F	; 79
     a36:	08 f4       	brcc	.+2      	; 0xa3a <__stack+0x13b>
     a38:	93 cf       	rjmp	.-218    	; 0x960 <__stack+0x61>
     a3a:	c3 53       	subi	r28, 0x33	; 51
     a3c:	df 4f       	sbci	r29, 0xFF	; 255
     a3e:	e8 80       	ld	r14, Y
     a40:	f9 80       	ldd	r15, Y+1	; 0x01
     a42:	cd 5c       	subi	r28, 0xCD	; 205
     a44:	d0 40       	sbci	r29, 0x00	; 0
     a46:	d7 01       	movw	r26, r14
     a48:	8c 91       	ld	r24, X
     a4a:	80 fd       	sbrc	r24, 0
     a4c:	11 c0       	rjmp	.+34     	; 0xa70 <__stack+0x171>
     a4e:	40 e0       	ldi	r20, 0x00	; 0
     a50:	be 01       	movw	r22, r28
     a52:	6d 52       	subi	r22, 0x2D	; 45
     a54:	7f 4f       	sbci	r23, 0xFF	; 255
     a56:	c7 01       	movw	r24, r14
     a58:	0e 94 a7 03 	call	0x74e	; 0x74e <shiftTrack>
     a5c:	c3 53       	subi	r28, 0x33	; 51
     a5e:	df 4f       	sbci	r29, 0xFF	; 255
     a60:	e8 80       	ld	r14, Y
     a62:	f9 80       	ldd	r15, Y+1	; 0x01
     a64:	cd 5c       	subi	r28, 0xCD	; 205
     a66:	d0 40       	sbci	r29, 0x00	; 0
     a68:	f7 01       	movw	r30, r14
     a6a:	80 81       	ld	r24, Z
     a6c:	80 ff       	sbrs	r24, 0
     a6e:	ef cf       	rjmp	.-34     	; 0xa4e <__stack+0x14f>
     a70:	c7 01       	movw	r24, r14
     a72:	0e 94 ea 03 	call	0x7d4	; 0x7d4 <verifycard>
     a76:	81 11       	cpse	r24, r1
     a78:	62 c0       	rjmp	.+196    	; 0xb3e <__stack+0x23f>
     a7a:	8e 01       	movw	r16, r28
     a7c:	0d 52       	subi	r16, 0x2D	; 45
     a7e:	1f 4f       	sbci	r17, 0xFF	; 255
     a80:	48 01       	movw	r8, r16
     a82:	6e 01       	movw	r12, r28
     a84:	f0 ec       	ldi	r31, 0xC0	; 192
     a86:	cf 1a       	sub	r12, r31
     a88:	fe ef       	ldi	r31, 0xFE	; 254
     a8a:	df 0a       	sbc	r13, r31
     a8c:	f8 01       	movw	r30, r16
     a8e:	11 92       	st	Z+, r1
     a90:	ec 15       	cp	r30, r12
     a92:	fd 05       	cpc	r31, r13
     a94:	e1 f7       	brne	.-8      	; 0xa8e <__stack+0x18f>
     a96:	d7 01       	movw	r26, r14
     a98:	a4 59       	subi	r26, 0x94	; 148
     a9a:	bf 4f       	sbci	r27, 0xFF	; 255
     a9c:	f8 01       	movw	r30, r16
     a9e:	a1 2c       	mov	r10, r1
     aa0:	b1 2c       	mov	r11, r1
     aa2:	66 e0       	ldi	r22, 0x06	; 6
     aa4:	70 e0       	ldi	r23, 0x00	; 0
     aa6:	ee 24       	eor	r14, r14
     aa8:	e3 94       	inc	r14
     aaa:	f1 2c       	mov	r15, r1
     aac:	20 c0       	rjmp	.+64     	; 0xaee <__stack+0x1ef>
     aae:	4c 91       	ld	r20, X
     ab0:	50 e0       	ldi	r21, 0x00	; 0
     ab2:	9b 01       	movw	r18, r22
     ab4:	28 1b       	sub	r18, r24
     ab6:	39 0b       	sbc	r19, r25
     ab8:	2a 01       	movw	r4, r20
     aba:	02 c0       	rjmp	.+4      	; 0xac0 <__stack+0x1c1>
     abc:	55 94       	asr	r5
     abe:	47 94       	ror	r4
     ac0:	2a 95       	dec	r18
     ac2:	e2 f7       	brpl	.-8      	; 0xabc <__stack+0x1bd>
     ac4:	40 fe       	sbrs	r4, 0
     ac6:	0a c0       	rjmp	.+20     	; 0xadc <__stack+0x1dd>
     ac8:	97 01       	movw	r18, r14
     aca:	08 2e       	mov	r0, r24
     acc:	02 c0       	rjmp	.+4      	; 0xad2 <__stack+0x1d3>
     ace:	22 0f       	add	r18, r18
     ad0:	33 1f       	adc	r19, r19
     ad2:	0a 94       	dec	r0
     ad4:	e2 f7       	brpl	.-8      	; 0xace <__stack+0x1cf>
     ad6:	30 81       	ld	r19, Z
     ad8:	23 2b       	or	r18, r19
     ada:	20 83       	st	Z, r18
     adc:	01 96       	adiw	r24, 0x01	; 1
     ade:	87 30       	cpi	r24, 0x07	; 7
     ae0:	91 05       	cpc	r25, r1
     ae2:	29 f7       	brne	.-54     	; 0xaae <__stack+0x1af>
     ae4:	11 97       	sbiw	r26, 0x01	; 1
     ae6:	31 96       	adiw	r30, 0x01	; 1
     ae8:	ec 15       	cp	r30, r12
     aea:	fd 05       	cpc	r31, r13
     aec:	11 f0       	breq	.+4      	; 0xaf2 <__stack+0x1f3>
     aee:	c5 01       	movw	r24, r10
     af0:	de cf       	rjmp	.-68     	; 0xaae <__stack+0x1af>
     af2:	c8 01       	movw	r24, r16
     af4:	88 19       	sub	r24, r8
     af6:	99 09       	sbc	r25, r9
     af8:	c3 53       	subi	r28, 0x33	; 51
     afa:	df 4f       	sbci	r29, 0xFF	; 255
     afc:	e8 81       	ld	r30, Y
     afe:	f9 81       	ldd	r31, Y+1	; 0x01
     b00:	cd 5c       	subi	r28, 0xCD	; 205
     b02:	d0 40       	sbci	r29, 0x00	; 0
     b04:	e8 0f       	add	r30, r24
     b06:	f9 1f       	adc	r31, r25
     b08:	d8 01       	movw	r26, r16
     b0a:	8d 91       	ld	r24, X+
     b0c:	8d 01       	movw	r16, r26
     b0e:	80 83       	st	Z, r24
     b10:	ac 15       	cp	r26, r12
     b12:	bd 05       	cpc	r27, r13
     b14:	71 f7       	brne	.-36     	; 0xaf2 <__stack+0x1f3>
     b16:	06 c0       	rjmp	.+12     	; 0xb24 <__stack+0x225>
     b18:	40 e0       	ldi	r20, 0x00	; 0
     b1a:	be 01       	movw	r22, r28
     b1c:	6d 52       	subi	r22, 0x2D	; 45
     b1e:	7f 4f       	sbci	r23, 0xFF	; 255
     b20:	0e 94 a7 03 	call	0x74e	; 0x74e <shiftTrack>
     b24:	c3 53       	subi	r28, 0x33	; 51
     b26:	df 4f       	sbci	r29, 0xFF	; 255
     b28:	88 81       	ld	r24, Y
     b2a:	99 81       	ldd	r25, Y+1	; 0x01
     b2c:	cd 5c       	subi	r28, 0xCD	; 205
     b2e:	d0 40       	sbci	r29, 0x00	; 0
     b30:	fc 01       	movw	r30, r24
     b32:	20 81       	ld	r18, Z
     b34:	20 ff       	sbrs	r18, 0
     b36:	f0 cf       	rjmp	.-32     	; 0xb18 <__stack+0x219>
     b38:	21 81       	ldd	r18, Z+1	; 0x01
     b3a:	22 23       	and	r18, r18
     b3c:	69 f3       	breq	.-38     	; 0xb18 <__stack+0x219>
     b3e:	c3 53       	subi	r28, 0x33	; 51
     b40:	df 4f       	sbci	r29, 0xFF	; 255
     b42:	88 81       	ld	r24, Y
     b44:	99 81       	ldd	r25, Y+1	; 0x01
     b46:	cd 5c       	subi	r28, 0xCD	; 205
     b48:	d0 40       	sbci	r29, 0x00	; 0
     b4a:	0e 94 ea 03 	call	0x7d4	; 0x7d4 <verifycard>
     b4e:	88 23       	and	r24, r24
     b50:	79 f0       	breq	.+30     	; 0xb70 <__stack+0x271>
     b52:	8d e6       	ldi	r24, 0x6D	; 109
     b54:	c0 53       	subi	r28, 0x30	; 48
     b56:	df 4f       	sbci	r29, 0xFF	; 255
     b58:	88 83       	st	Y, r24
     b5a:	c0 5d       	subi	r28, 0xD0	; 208
     b5c:	d0 40       	sbci	r29, 0x00	; 0
     b5e:	ce 01       	movw	r24, r28
     b60:	87 53       	subi	r24, 0x37	; 55
     b62:	9f 4f       	sbci	r25, 0xFF	; 255
     b64:	0e 94 34 04 	call	0x868	; 0x868 <sendCardInformation>
     b68:	81 e0       	ldi	r24, 0x01	; 1
     b6a:	0d c0       	rjmp	.+26     	; 0xb86 <__stack+0x287>
     b6c:	80 e0       	ldi	r24, 0x00	; 0
     b6e:	0b c0       	rjmp	.+22     	; 0xb86 <__stack+0x287>
     b70:	80 e0       	ldi	r24, 0x00	; 0
     b72:	09 c0       	rjmp	.+18     	; 0xb86 <__stack+0x287>
     b74:	04 30       	cpi	r16, 0x04	; 4
     b76:	08 f4       	brcc	.+2      	; 0xb7a <__stack+0x27b>
     b78:	4a cf       	rjmp	.-364    	; 0xa0e <__stack+0x10f>
     b7a:	1e 2d       	mov	r17, r14
     b7c:	f1 ce       	rjmp	.-542    	; 0x960 <__stack+0x61>
     b7e:	1f 2d       	mov	r17, r15
     b80:	0e 2d       	mov	r16, r14
     b82:	1f 5f       	subi	r17, 0xFF	; 255
     b84:	ed ce       	rjmp	.-550    	; 0x960 <__stack+0x61>
     b86:	c6 56       	subi	r28, 0x66	; 102
     b88:	de 4f       	sbci	r29, 0xFE	; 254
     b8a:	0f b6       	in	r0, 0x3f	; 63
     b8c:	f8 94       	cli
     b8e:	de bf       	out	0x3e, r29	; 62
     b90:	0f be       	out	0x3f, r0	; 63
     b92:	cd bf       	out	0x3d, r28	; 61
     b94:	df 91       	pop	r29
     b96:	cf 91       	pop	r28
     b98:	1f 91       	pop	r17
     b9a:	0f 91       	pop	r16
     b9c:	ff 90       	pop	r15
     b9e:	ef 90       	pop	r14
     ba0:	df 90       	pop	r13
     ba2:	cf 90       	pop	r12
     ba4:	bf 90       	pop	r11
     ba6:	af 90       	pop	r10
     ba8:	9f 90       	pop	r9
     baa:	8f 90       	pop	r8
     bac:	7f 90       	pop	r7
     bae:	5f 90       	pop	r5
     bb0:	4f 90       	pop	r4
     bb2:	08 95       	ret

00000bb4 <cardReaderInterrupt>:
     bb4:	ef 92       	push	r14
     bb6:	ff 92       	push	r15
     bb8:	0f 93       	push	r16
     bba:	1f 93       	push	r17
     bbc:	cf 93       	push	r28
     bbe:	df 93       	push	r29
     bc0:	cd b7       	in	r28, 0x3d	; 61
     bc2:	de b7       	in	r29, 0x3e	; 62
     bc4:	c0 5b       	subi	r28, 0xB0	; 176
     bc6:	d1 09       	sbc	r29, r1
     bc8:	0f b6       	in	r0, 0x3f	; 63
     bca:	f8 94       	cli
     bcc:	de bf       	out	0x3e, r29	; 62
     bce:	0f be       	out	0x3f, r0	; 63
     bd0:	cd bf       	out	0x3d, r28	; 61
     bd2:	84 e2       	ldi	r24, 0x24	; 36
     bd4:	92 e0       	ldi	r25, 0x02	; 2
     bd6:	0e 94 6c 04 	call	0x8d8	; 0x8d8 <getCard>
     bda:	90 91 21 02 	lds	r25, 0x0221
     bde:	89 2b       	or	r24, r25
     be0:	80 93 21 02 	sts	0x0221, r24
     be4:	0e 94 4c 09 	call	0x1298	; 0x1298 <isMaintenance>
     be8:	89 2b       	or	r24, r25
     bea:	d1 f5       	brne	.+116    	; 0xc60 <cardReaderInterrupt+0xac>
     bec:	10 92 16 02 	sts	0x0216, r1
     bf0:	80 91 14 02 	lds	r24, 0x0214
     bf4:	88 23       	and	r24, r24
     bf6:	49 f0       	breq	.+18     	; 0xc0a <cardReaderInterrupt+0x56>
     bf8:	20 91 14 02 	lds	r18, 0x0214
     bfc:	81 e0       	ldi	r24, 0x01	; 1
     bfe:	90 e0       	ldi	r25, 0x00	; 0
     c00:	22 30       	cpi	r18, 0x02	; 2
     c02:	29 f0       	breq	.+10     	; 0xc0e <cardReaderInterrupt+0x5a>
     c04:	80 e0       	ldi	r24, 0x00	; 0
     c06:	90 e0       	ldi	r25, 0x00	; 0
     c08:	02 c0       	rjmp	.+4      	; 0xc0e <cardReaderInterrupt+0x5a>
     c0a:	81 e0       	ldi	r24, 0x01	; 1
     c0c:	90 e0       	ldi	r25, 0x00	; 0
     c0e:	90 91 21 02 	lds	r25, 0x0221
     c12:	89 23       	and	r24, r25
     c14:	80 93 21 02 	sts	0x0221, r24
     c18:	80 91 21 02 	lds	r24, 0x0221
     c1c:	88 23       	and	r24, r24
     c1e:	01 f1       	breq	.+64     	; 0xc60 <cardReaderInterrupt+0xac>
     c20:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <setUIState>
     c24:	0e 94 5c 0c 	call	0x18b8	; 0x18b8 <turnOnUIPower>
     c28:	10 92 73 02 	sts	0x0273, r1
     c2c:	be 01       	movw	r22, r28
     c2e:	6f 5f       	subi	r22, 0xFF	; 255
     c30:	7f 4f       	sbci	r23, 0xFF	; 255
     c32:	84 e0       	ldi	r24, 0x04	; 4
     c34:	91 e0       	ldi	r25, 0x01	; 1
     c36:	0e 94 6e 01 	call	0x2dc	; 0x2dc <aes128_init>
     c3a:	04 e2       	ldi	r16, 0x24	; 36
     c3c:	12 e0       	ldi	r17, 0x02	; 2
     c3e:	0f 2e       	mov	r0, r31
     c40:	f4 e7       	ldi	r31, 0x74	; 116
     c42:	ef 2e       	mov	r14, r31
     c44:	f2 e0       	ldi	r31, 0x02	; 2
     c46:	ff 2e       	mov	r15, r31
     c48:	f0 2d       	mov	r31, r0
     c4a:	be 01       	movw	r22, r28
     c4c:	6f 5f       	subi	r22, 0xFF	; 255
     c4e:	7f 4f       	sbci	r23, 0xFF	; 255
     c50:	c8 01       	movw	r24, r16
     c52:	0e 94 57 00 	call	0xae	; 0xae <aes128_enc>
     c56:	00 5f       	subi	r16, 0xF0	; 240
     c58:	1f 4f       	sbci	r17, 0xFF	; 255
     c5a:	0e 15       	cp	r16, r14
     c5c:	1f 05       	cpc	r17, r15
     c5e:	a9 f7       	brne	.-22     	; 0xc4a <cardReaderInterrupt+0x96>
     c60:	c0 55       	subi	r28, 0x50	; 80
     c62:	df 4f       	sbci	r29, 0xFF	; 255
     c64:	0f b6       	in	r0, 0x3f	; 63
     c66:	f8 94       	cli
     c68:	de bf       	out	0x3e, r29	; 62
     c6a:	0f be       	out	0x3f, r0	; 63
     c6c:	cd bf       	out	0x3d, r28	; 61
     c6e:	df 91       	pop	r29
     c70:	cf 91       	pop	r28
     c72:	1f 91       	pop	r17
     c74:	0f 91       	pop	r16
     c76:	ff 90       	pop	r15
     c78:	ef 90       	pop	r14
     c7a:	08 95       	ret

00000c7c <__vector_4>:
     c7c:	1f 92       	push	r1
     c7e:	0f 92       	push	r0
     c80:	0f b6       	in	r0, 0x3f	; 63
     c82:	0f 92       	push	r0
     c84:	11 24       	eor	r1, r1
     c86:	2f 93       	push	r18
     c88:	3f 93       	push	r19
     c8a:	4f 93       	push	r20
     c8c:	5f 93       	push	r21
     c8e:	6f 93       	push	r22
     c90:	7f 93       	push	r23
     c92:	8f 93       	push	r24
     c94:	9f 93       	push	r25
     c96:	af 93       	push	r26
     c98:	bf 93       	push	r27
     c9a:	cf 93       	push	r28
     c9c:	df 93       	push	r29
     c9e:	ef 93       	push	r30
     ca0:	ff 93       	push	r31
     ca2:	f8 94       	cli
     ca4:	c6 b1       	in	r28, 0x06	; 6
     ca6:	d0 91 00 01 	lds	r29, 0x0100
     caa:	dc 27       	eor	r29, r28
     cac:	80 91 13 02 	lds	r24, 0x0213
     cb0:	81 30       	cpi	r24, 0x01	; 1
     cb2:	29 f4       	brne	.+10     	; 0xcbe <__vector_4+0x42>
     cb4:	d0 ff       	sbrs	r29, 0
     cb6:	03 c0       	rjmp	.+6      	; 0xcbe <__vector_4+0x42>
     cb8:	c0 ff       	sbrs	r28, 0
     cba:	0e 94 da 05 	call	0xbb4	; 0xbb4 <cardReaderInterrupt>
     cbe:	d8 73       	andi	r29, 0x38	; 56
     cc0:	a1 f0       	breq	.+40     	; 0xcea <__vector_4+0x6e>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     cc2:	8f ec       	ldi	r24, 0xCF	; 207
     cc4:	97 e0       	ldi	r25, 0x07	; 7
     cc6:	01 97       	sbiw	r24, 0x01	; 1
     cc8:	f1 f7       	brne	.-4      	; 0xcc6 <__vector_4+0x4a>
     cca:	00 c0       	rjmp	.+0      	; 0xccc <__vector_4+0x50>
     ccc:	00 00       	nop
     cce:	86 b1       	in	r24, 0x06	; 6
     cd0:	86 95       	lsr	r24
     cd2:	86 95       	lsr	r24
     cd4:	86 95       	lsr	r24
     cd6:	87 70       	andi	r24, 0x07	; 7
     cd8:	60 91 00 01 	lds	r22, 0x0100
     cdc:	66 95       	lsr	r22
     cde:	66 95       	lsr	r22
     ce0:	66 95       	lsr	r22
     ce2:	67 70       	andi	r22, 0x07	; 7
     ce4:	68 27       	eor	r22, r24
     ce6:	0e 94 57 03 	call	0x6ae	; 0x6ae <buttonInterrupt>
     cea:	c0 93 00 01 	sts	0x0100, r28
     cee:	78 94       	sei
     cf0:	ff 91       	pop	r31
     cf2:	ef 91       	pop	r30
     cf4:	df 91       	pop	r29
     cf6:	cf 91       	pop	r28
     cf8:	bf 91       	pop	r27
     cfa:	af 91       	pop	r26
     cfc:	9f 91       	pop	r25
     cfe:	8f 91       	pop	r24
     d00:	7f 91       	pop	r23
     d02:	6f 91       	pop	r22
     d04:	5f 91       	pop	r21
     d06:	4f 91       	pop	r20
     d08:	3f 91       	pop	r19
     d0a:	2f 91       	pop	r18
     d0c:	0f 90       	pop	r0
     d0e:	0f be       	out	0x3f, r0	; 63
     d10:	0f 90       	pop	r0
     d12:	1f 90       	pop	r1
     d14:	18 95       	reti

00000d16 <cardReaderInit>:
     d16:	ec e6       	ldi	r30, 0x6C	; 108
     d18:	f0 e0       	ldi	r31, 0x00	; 0
     d1a:	80 81       	ld	r24, Z
     d1c:	81 60       	ori	r24, 0x01	; 1
     d1e:	80 83       	st	Z, r24
     d20:	e8 e6       	ldi	r30, 0x68	; 104
     d22:	f0 e0       	ldi	r31, 0x00	; 0
     d24:	80 81       	ld	r24, Z
     d26:	82 60       	ori	r24, 0x02	; 2
     d28:	80 83       	st	Z, r24
     d2a:	88 b1       	in	r24, 0x08	; 8
     d2c:	87 60       	ori	r24, 0x07	; 7
     d2e:	88 b9       	out	0x08, r24	; 8
     d30:	08 95       	ret

00000d32 <cardReaderOff>:
     d32:	88 b1       	in	r24, 0x08	; 8
     d34:	88 7f       	andi	r24, 0xF8	; 248
     d36:	88 b9       	out	0x08, r24	; 8
     d38:	08 95       	ret

00000d3a <lcdCommand>:
     d3a:	28 e0       	ldi	r18, 0x08	; 8
     d3c:	30 e0       	ldi	r19, 0x00	; 0
     d3e:	88 23       	and	r24, r24
     d40:	14 f0       	brlt	.+4      	; 0xd46 <lcdCommand+0xc>
     d42:	5a 98       	cbi	0x0b, 2	; 11
     d44:	01 c0       	rjmp	.+2      	; 0xd48 <lcdCommand+0xe>
     d46:	5a 9a       	sbi	0x0b, 2	; 11
     d48:	88 0f       	add	r24, r24
     d4a:	5b 9a       	sbi	0x0b, 3	; 11
     d4c:	92 e0       	ldi	r25, 0x02	; 2
     d4e:	9a 95       	dec	r25
     d50:	f1 f7       	brne	.-4      	; 0xd4e <lcdCommand+0x14>
     d52:	00 c0       	rjmp	.+0      	; 0xd54 <lcdCommand+0x1a>
     d54:	5b 98       	cbi	0x0b, 3	; 11
     d56:	5a 98       	cbi	0x0b, 2	; 11
     d58:	21 50       	subi	r18, 0x01	; 1
     d5a:	31 09       	sbc	r19, r1
     d5c:	81 f7       	brne	.-32     	; 0xd3e <lcdCommand+0x4>
     d5e:	58 98       	cbi	0x0b, 0	; 11
     d60:	59 9a       	sbi	0x0b, 1	; 11
     d62:	82 e0       	ldi	r24, 0x02	; 2
     d64:	8a 95       	dec	r24
     d66:	f1 f7       	brne	.-4      	; 0xd64 <lcdCommand+0x2a>
     d68:	00 c0       	rjmp	.+0      	; 0xd6a <lcdCommand+0x30>
     d6a:	59 98       	cbi	0x0b, 1	; 11
     d6c:	87 ec       	ldi	r24, 0xC7	; 199
     d6e:	90 e0       	ldi	r25, 0x00	; 0
     d70:	01 97       	sbiw	r24, 0x01	; 1
     d72:	f1 f7       	brne	.-4      	; 0xd70 <lcdCommand+0x36>
     d74:	00 c0       	rjmp	.+0      	; 0xd76 <lcdCommand+0x3c>
     d76:	00 00       	nop
     d78:	5b 98       	cbi	0x0b, 3	; 11
     d7a:	5a 98       	cbi	0x0b, 2	; 11
     d7c:	58 98       	cbi	0x0b, 0	; 11
     d7e:	59 98       	cbi	0x0b, 1	; 11
     d80:	08 95       	ret

00000d82 <lcdData>:
     d82:	28 e0       	ldi	r18, 0x08	; 8
     d84:	30 e0       	ldi	r19, 0x00	; 0
     d86:	88 23       	and	r24, r24
     d88:	14 f0       	brlt	.+4      	; 0xd8e <lcdData+0xc>
     d8a:	5a 98       	cbi	0x0b, 2	; 11
     d8c:	01 c0       	rjmp	.+2      	; 0xd90 <lcdData+0xe>
     d8e:	5a 9a       	sbi	0x0b, 2	; 11
     d90:	88 0f       	add	r24, r24
     d92:	5b 9a       	sbi	0x0b, 3	; 11
     d94:	92 e0       	ldi	r25, 0x02	; 2
     d96:	9a 95       	dec	r25
     d98:	f1 f7       	brne	.-4      	; 0xd96 <lcdData+0x14>
     d9a:	00 c0       	rjmp	.+0      	; 0xd9c <lcdData+0x1a>
     d9c:	5b 98       	cbi	0x0b, 3	; 11
     d9e:	21 50       	subi	r18, 0x01	; 1
     da0:	31 09       	sbc	r19, r1
     da2:	89 f7       	brne	.-30     	; 0xd86 <lcdData+0x4>
     da4:	58 9a       	sbi	0x0b, 0	; 11
     da6:	59 9a       	sbi	0x0b, 1	; 11
     da8:	82 e0       	ldi	r24, 0x02	; 2
     daa:	8a 95       	dec	r24
     dac:	f1 f7       	brne	.-4      	; 0xdaa <lcdData+0x28>
     dae:	00 c0       	rjmp	.+0      	; 0xdb0 <lcdData+0x2e>
     db0:	59 98       	cbi	0x0b, 1	; 11
     db2:	87 ec       	ldi	r24, 0xC7	; 199
     db4:	90 e0       	ldi	r25, 0x00	; 0
     db6:	01 97       	sbiw	r24, 0x01	; 1
     db8:	f1 f7       	brne	.-4      	; 0xdb6 <lcdData+0x34>
     dba:	00 c0       	rjmp	.+0      	; 0xdbc <lcdData+0x3a>
     dbc:	00 00       	nop
     dbe:	5b 98       	cbi	0x0b, 3	; 11
     dc0:	5a 98       	cbi	0x0b, 2	; 11
     dc2:	58 98       	cbi	0x0b, 0	; 11
     dc4:	59 98       	cbi	0x0b, 1	; 11
     dc6:	08 95       	ret

00000dc8 <lcdInit>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     dc8:	8f e4       	ldi	r24, 0x4F	; 79
     dca:	93 ec       	ldi	r25, 0xC3	; 195
     dcc:	01 97       	sbiw	r24, 0x01	; 1
     dce:	f1 f7       	brne	.-4      	; 0xdcc <lcdInit+0x4>
     dd0:	00 c0       	rjmp	.+0      	; 0xdd2 <lcdInit+0xa>
     dd2:	00 00       	nop
     dd4:	8a b1       	in	r24, 0x0a	; 10
     dd6:	8f 60       	ori	r24, 0x0F	; 15
     dd8:	8a b9       	out	0x0a, r24	; 10
     dda:	59 98       	cbi	0x0b, 1	; 11
     ddc:	8f e0       	ldi	r24, 0x0F	; 15
     dde:	97 e2       	ldi	r25, 0x27	; 39
     de0:	01 97       	sbiw	r24, 0x01	; 1
     de2:	f1 f7       	brne	.-4      	; 0xde0 <lcdInit+0x18>
     de4:	00 c0       	rjmp	.+0      	; 0xde6 <lcdInit+0x1e>
     de6:	00 00       	nop
     de8:	88 e3       	ldi	r24, 0x38	; 56
     dea:	0e 94 9d 06 	call	0xd3a	; 0xd3a <lcdCommand>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     dee:	8f e0       	ldi	r24, 0x0F	; 15
     df0:	97 e2       	ldi	r25, 0x27	; 39
     df2:	01 97       	sbiw	r24, 0x01	; 1
     df4:	f1 f7       	brne	.-4      	; 0xdf2 <lcdInit+0x2a>
     df6:	00 c0       	rjmp	.+0      	; 0xdf8 <lcdInit+0x30>
     df8:	00 00       	nop
     dfa:	8c e0       	ldi	r24, 0x0C	; 12
     dfc:	0e 94 9d 06 	call	0xd3a	; 0xd3a <lcdCommand>
     e00:	81 e0       	ldi	r24, 0x01	; 1
     e02:	0e 94 9d 06 	call	0xd3a	; 0xd3a <lcdCommand>
     e06:	8f e9       	ldi	r24, 0x9F	; 159
     e08:	9f e0       	ldi	r25, 0x0F	; 15
     e0a:	01 97       	sbiw	r24, 0x01	; 1
     e0c:	f1 f7       	brne	.-4      	; 0xe0a <lcdInit+0x42>
     e0e:	00 c0       	rjmp	.+0      	; 0xe10 <lcdInit+0x48>
     e10:	00 00       	nop
     e12:	08 95       	ret

00000e14 <lcdGoToY>:
     e14:	cf 93       	push	r28
     e16:	df 93       	push	r29
     e18:	00 d0       	rcall	.+0      	; 0xe1a <lcdGoToY+0x6>
     e1a:	00 d0       	rcall	.+0      	; 0xe1c <lcdGoToY+0x8>
     e1c:	cd b7       	in	r28, 0x3d	; 61
     e1e:	de b7       	in	r29, 0x3e	; 62
     e20:	90 e8       	ldi	r25, 0x80	; 128
     e22:	99 83       	std	Y+1, r25	; 0x01
     e24:	90 ec       	ldi	r25, 0xC0	; 192
     e26:	9a 83       	std	Y+2, r25	; 0x02
     e28:	94 e9       	ldi	r25, 0x94	; 148
     e2a:	9b 83       	std	Y+3, r25	; 0x03
     e2c:	94 ed       	ldi	r25, 0xD4	; 212
     e2e:	9c 83       	std	Y+4, r25	; 0x04
     e30:	fe 01       	movw	r30, r28
     e32:	e8 0f       	add	r30, r24
     e34:	f1 1d       	adc	r31, r1
     e36:	80 81       	ld	r24, Z
     e38:	0e 94 9d 06 	call	0xd3a	; 0xd3a <lcdCommand>
     e3c:	87 ec       	ldi	r24, 0xC7	; 199
     e3e:	90 e0       	ldi	r25, 0x00	; 0
     e40:	01 97       	sbiw	r24, 0x01	; 1
     e42:	f1 f7       	brne	.-4      	; 0xe40 <lcdGoToY+0x2c>
     e44:	00 c0       	rjmp	.+0      	; 0xe46 <lcdGoToY+0x32>
     e46:	00 00       	nop
     e48:	0f 90       	pop	r0
     e4a:	0f 90       	pop	r0
     e4c:	0f 90       	pop	r0
     e4e:	0f 90       	pop	r0
     e50:	df 91       	pop	r29
     e52:	cf 91       	pop	r28
     e54:	08 95       	ret

00000e56 <lcdPrint>:
     e56:	0f 93       	push	r16
     e58:	1f 93       	push	r17
     e5a:	cf 93       	push	r28
     e5c:	df 93       	push	r29
     e5e:	06 2f       	mov	r16, r22
     e60:	c8 2f       	mov	r28, r24
     e62:	d9 2f       	mov	r29, r25
     e64:	10 e0       	ldi	r17, 0x00	; 0
     e66:	10 17       	cp	r17, r16
     e68:	20 f4       	brcc	.+8      	; 0xe72 <lcdPrint+0x1c>
     e6a:	88 81       	ld	r24, Y
     e6c:	0e 94 c1 06 	call	0xd82	; 0xd82 <lcdData>
     e70:	03 c0       	rjmp	.+6      	; 0xe78 <lcdPrint+0x22>
     e72:	80 e2       	ldi	r24, 0x20	; 32
     e74:	0e 94 c1 06 	call	0xd82	; 0xd82 <lcdData>
     e78:	1f 5f       	subi	r17, 0xFF	; 255
     e7a:	21 96       	adiw	r28, 0x01	; 1
     e7c:	10 31       	cpi	r17, 0x10	; 16
     e7e:	99 f7       	brne	.-26     	; 0xe66 <lcdPrint+0x10>
     e80:	df 91       	pop	r29
     e82:	cf 91       	pop	r28
     e84:	1f 91       	pop	r17
     e86:	0f 91       	pop	r16
     e88:	08 95       	ret

00000e8a <getTotalPrice>:
     e8a:	cf 92       	push	r12
     e8c:	df 92       	push	r13
     e8e:	ef 92       	push	r14
     e90:	ff 92       	push	r15
     e92:	0f 93       	push	r16
     e94:	1f 93       	push	r17
     e96:	cf 93       	push	r28
     e98:	df 93       	push	r29
     e9a:	8c 01       	movw	r16, r24
     e9c:	eb 01       	movw	r28, r22
     e9e:	fa 01       	movw	r30, r20
     ea0:	40 91 1b 02 	lds	r20, 0x021B
     ea4:	20 91 1c 02 	lds	r18, 0x021C
     ea8:	30 e0       	ldi	r19, 0x00	; 0
     eaa:	a4 e6       	ldi	r26, 0x64	; 100
     eac:	b0 e0       	ldi	r27, 0x00	; 0
     eae:	0e 94 2d 11 	call	0x225a	; 0x225a <__umulhisi3>
     eb2:	6b 01       	movw	r12, r22
     eb4:	7c 01       	movw	r14, r24
     eb6:	c4 0e       	add	r12, r20
     eb8:	d1 1c       	adc	r13, r1
     eba:	e1 1c       	adc	r14, r1
     ebc:	f1 1c       	adc	r15, r1
     ebe:	a7 01       	movw	r20, r14
     ec0:	96 01       	movw	r18, r12
     ec2:	df 01       	movw	r26, r30
     ec4:	0e 94 39 11 	call	0x2272	; 0x2272 <__muluhisi3>
     ec8:	2c e3       	ldi	r18, 0x3C	; 60
     eca:	30 e0       	ldi	r19, 0x00	; 0
     ecc:	40 e0       	ldi	r20, 0x00	; 0
     ece:	50 e0       	ldi	r21, 0x00	; 0
     ed0:	0e 94 0b 11 	call	0x2216	; 0x2216 <__udivmodsi4>
     ed4:	ca 01       	movw	r24, r20
     ed6:	b9 01       	movw	r22, r18
     ed8:	24 e6       	ldi	r18, 0x64	; 100
     eda:	30 e0       	ldi	r19, 0x00	; 0
     edc:	40 e0       	ldi	r20, 0x00	; 0
     ede:	50 e0       	ldi	r21, 0x00	; 0
     ee0:	0e 94 0b 11 	call	0x2216	; 0x2216 <__udivmodsi4>
     ee4:	f8 01       	movw	r30, r16
     ee6:	20 83       	st	Z, r18
     ee8:	68 83       	st	Y, r22
     eea:	df 91       	pop	r29
     eec:	cf 91       	pop	r28
     eee:	1f 91       	pop	r17
     ef0:	0f 91       	pop	r16
     ef2:	ff 90       	pop	r15
     ef4:	ef 90       	pop	r14
     ef6:	df 90       	pop	r13
     ef8:	cf 90       	pop	r12
     efa:	08 95       	ret

00000efc <getTotalTime>:
     efc:	cf 93       	push	r28
     efe:	df 93       	push	r29
     f00:	ec 01       	movw	r28, r24
     f02:	fb 01       	movw	r30, r22
     f04:	40 91 12 02 	lds	r20, 0x0212
     f08:	50 e0       	ldi	r21, 0x00	; 0
     f0a:	ca 01       	movw	r24, r20
     f0c:	88 0f       	add	r24, r24
     f0e:	99 1f       	adc	r25, r25
     f10:	88 0f       	add	r24, r24
     f12:	99 1f       	adc	r25, r25
     f14:	48 0f       	add	r20, r24
     f16:	59 1f       	adc	r21, r25
     f18:	9a 01       	movw	r18, r20
     f1a:	a9 e8       	ldi	r26, 0x89	; 137
     f1c:	b8 e8       	ldi	r27, 0x88	; 136
     f1e:	0e 94 2d 11 	call	0x225a	; 0x225a <__umulhisi3>
     f22:	9c 01       	movw	r18, r24
     f24:	36 95       	lsr	r19
     f26:	27 95       	ror	r18
     f28:	32 95       	swap	r19
     f2a:	22 95       	swap	r18
     f2c:	2f 70       	andi	r18, 0x0F	; 15
     f2e:	23 27       	eor	r18, r19
     f30:	3f 70       	andi	r19, 0x0F	; 15
     f32:	23 27       	eor	r18, r19
     f34:	28 83       	st	Y, r18
     f36:	6c e3       	ldi	r22, 0x3C	; 60
     f38:	62 9f       	mul	r22, r18
     f3a:	c0 01       	movw	r24, r0
     f3c:	63 9f       	mul	r22, r19
     f3e:	90 0d       	add	r25, r0
     f40:	11 24       	eor	r1, r1
     f42:	48 1b       	sub	r20, r24
     f44:	59 0b       	sbc	r21, r25
     f46:	40 83       	st	Z, r20
     f48:	df 91       	pop	r29
     f4a:	cf 91       	pop	r28
     f4c:	08 95       	ret

00000f4e <lcdUpdate>:
     f4e:	0f 93       	push	r16
     f50:	1f 93       	push	r17
     f52:	cf 93       	push	r28
     f54:	df 93       	push	r29
     f56:	cd b7       	in	r28, 0x3d	; 61
     f58:	de b7       	in	r29, 0x3e	; 62
     f5a:	64 97       	sbiw	r28, 0x14	; 20
     f5c:	0f b6       	in	r0, 0x3f	; 63
     f5e:	f8 94       	cli
     f60:	de bf       	out	0x3e, r29	; 62
     f62:	0f be       	out	0x3f, r0	; 63
     f64:	cd bf       	out	0x3d, r28	; 61
     f66:	80 91 14 02 	lds	r24, 0x0214
     f6a:	81 11       	cpse	r24, r1
     f6c:	2f c0       	rjmp	.+94     	; 0xfcc <lcdUpdate+0x7e>
     f6e:	81 e0       	ldi	r24, 0x01	; 1
     f70:	0e 94 0a 07 	call	0xe14	; 0xe14 <lcdGoToY>
     f74:	6a e0       	ldi	r22, 0x0A	; 10
     f76:	84 e1       	ldi	r24, 0x14	; 20
     f78:	91 e0       	ldi	r25, 0x01	; 1
     f7a:	0e 94 2b 07 	call	0xe56	; 0xe56 <lcdPrint>
     f7e:	82 e0       	ldi	r24, 0x02	; 2
     f80:	0e 94 0a 07 	call	0xe14	; 0xe14 <lcdGoToY>
     f84:	90 91 1b 02 	lds	r25, 0x021B
     f88:	80 91 1c 02 	lds	r24, 0x021C
     f8c:	1f 92       	push	r1
     f8e:	9f 93       	push	r25
     f90:	1f 92       	push	r1
     f92:	8f 93       	push	r24
     f94:	8f e1       	ldi	r24, 0x1F	; 31
     f96:	91 e0       	ldi	r25, 0x01	; 1
     f98:	9f 93       	push	r25
     f9a:	8f 93       	push	r24
     f9c:	8e 01       	movw	r16, r28
     f9e:	0f 5f       	subi	r16, 0xFF	; 255
     fa0:	1f 4f       	sbci	r17, 0xFF	; 255
     fa2:	1f 93       	push	r17
     fa4:	0f 93       	push	r16
     fa6:	0e 94 58 11 	call	0x22b0	; 0x22b0 <sprintf>
     faa:	f8 01       	movw	r30, r16
     fac:	01 90       	ld	r0, Z+
     fae:	00 20       	and	r0, r0
     fb0:	e9 f7       	brne	.-6      	; 0xfac <lcdUpdate+0x5e>
     fb2:	31 97       	sbiw	r30, 0x01	; 1
     fb4:	bf 01       	movw	r22, r30
     fb6:	60 1b       	sub	r22, r16
     fb8:	71 0b       	sbc	r23, r17
     fba:	c8 01       	movw	r24, r16
     fbc:	0e 94 2b 07 	call	0xe56	; 0xe56 <lcdPrint>
     fc0:	0f b6       	in	r0, 0x3f	; 63
     fc2:	f8 94       	cli
     fc4:	de bf       	out	0x3e, r29	; 62
     fc6:	0f be       	out	0x3f, r0	; 63
     fc8:	cd bf       	out	0x3d, r28	; 61
     fca:	48 c1       	rjmp	.+656    	; 0x125c <lcdUpdate+0x30e>
     fcc:	80 91 14 02 	lds	r24, 0x0214
     fd0:	81 30       	cpi	r24, 0x01	; 1
     fd2:	09 f0       	breq	.+2      	; 0xfd6 <lcdUpdate+0x88>
     fd4:	58 c0       	rjmp	.+176    	; 0x1086 <lcdUpdate+0x138>
     fd6:	0e 94 0a 07 	call	0xe14	; 0xe14 <lcdGoToY>
     fda:	80 91 12 02 	lds	r24, 0x0212
     fde:	90 e0       	ldi	r25, 0x00	; 0
     fe0:	ac 01       	movw	r20, r24
     fe2:	44 0f       	add	r20, r20
     fe4:	55 1f       	adc	r21, r21
     fe6:	44 0f       	add	r20, r20
     fe8:	55 1f       	adc	r21, r21
     fea:	48 0f       	add	r20, r24
     fec:	59 1f       	adc	r21, r25
     fee:	be 01       	movw	r22, r28
     ff0:	6e 5e       	subi	r22, 0xEE	; 238
     ff2:	7f 4f       	sbci	r23, 0xFF	; 255
     ff4:	ce 01       	movw	r24, r28
     ff6:	41 96       	adiw	r24, 0x11	; 17
     ff8:	0e 94 45 07 	call	0xe8a	; 0xe8a <getTotalPrice>
     ffc:	8a 89       	ldd	r24, Y+18	; 0x12
     ffe:	1f 92       	push	r1
    1000:	8f 93       	push	r24
    1002:	89 89       	ldd	r24, Y+17	; 0x11
    1004:	1f 92       	push	r1
    1006:	8f 93       	push	r24
    1008:	8f e1       	ldi	r24, 0x1F	; 31
    100a:	91 e0       	ldi	r25, 0x01	; 1
    100c:	9f 93       	push	r25
    100e:	8f 93       	push	r24
    1010:	8e 01       	movw	r16, r28
    1012:	0f 5f       	subi	r16, 0xFF	; 255
    1014:	1f 4f       	sbci	r17, 0xFF	; 255
    1016:	1f 93       	push	r17
    1018:	0f 93       	push	r16
    101a:	0e 94 58 11 	call	0x22b0	; 0x22b0 <sprintf>
    101e:	f8 01       	movw	r30, r16
    1020:	01 90       	ld	r0, Z+
    1022:	00 20       	and	r0, r0
    1024:	e9 f7       	brne	.-6      	; 0x1020 <lcdUpdate+0xd2>
    1026:	31 97       	sbiw	r30, 0x01	; 1
    1028:	bf 01       	movw	r22, r30
    102a:	60 1b       	sub	r22, r16
    102c:	71 0b       	sbc	r23, r17
    102e:	c8 01       	movw	r24, r16
    1030:	0e 94 2b 07 	call	0xe56	; 0xe56 <lcdPrint>
    1034:	82 e0       	ldi	r24, 0x02	; 2
    1036:	0e 94 0a 07 	call	0xe14	; 0xe14 <lcdGoToY>
    103a:	be 01       	movw	r22, r28
    103c:	6c 5e       	subi	r22, 0xEC	; 236
    103e:	7f 4f       	sbci	r23, 0xFF	; 255
    1040:	ce 01       	movw	r24, r28
    1042:	43 96       	adiw	r24, 0x13	; 19
    1044:	0e 94 7e 07 	call	0xefc	; 0xefc <getTotalTime>
    1048:	8c 89       	ldd	r24, Y+20	; 0x14
    104a:	1f 92       	push	r1
    104c:	8f 93       	push	r24
    104e:	8b 89       	ldd	r24, Y+19	; 0x13
    1050:	1f 92       	push	r1
    1052:	8f 93       	push	r24
    1054:	8d e2       	ldi	r24, 0x2D	; 45
    1056:	91 e0       	ldi	r25, 0x01	; 1
    1058:	9f 93       	push	r25
    105a:	8f 93       	push	r24
    105c:	1f 93       	push	r17
    105e:	0f 93       	push	r16
    1060:	0e 94 58 11 	call	0x22b0	; 0x22b0 <sprintf>
    1064:	f8 01       	movw	r30, r16
    1066:	01 90       	ld	r0, Z+
    1068:	00 20       	and	r0, r0
    106a:	e9 f7       	brne	.-6      	; 0x1066 <lcdUpdate+0x118>
    106c:	31 97       	sbiw	r30, 0x01	; 1
    106e:	bf 01       	movw	r22, r30
    1070:	60 1b       	sub	r22, r16
    1072:	71 0b       	sbc	r23, r17
    1074:	c8 01       	movw	r24, r16
    1076:	0e 94 2b 07 	call	0xe56	; 0xe56 <lcdPrint>
    107a:	0f b6       	in	r0, 0x3f	; 63
    107c:	f8 94       	cli
    107e:	de bf       	out	0x3e, r29	; 62
    1080:	0f be       	out	0x3f, r0	; 63
    1082:	cd bf       	out	0x3d, r28	; 61
    1084:	eb c0       	rjmp	.+470    	; 0x125c <lcdUpdate+0x30e>
    1086:	80 91 14 02 	lds	r24, 0x0214
    108a:	82 30       	cpi	r24, 0x02	; 2
    108c:	89 f4       	brne	.+34     	; 0x10b0 <lcdUpdate+0x162>
    108e:	81 e0       	ldi	r24, 0x01	; 1
    1090:	0e 94 0a 07 	call	0xe14	; 0xe14 <lcdGoToY>
    1094:	6a e0       	ldi	r22, 0x0A	; 10
    1096:	84 e1       	ldi	r24, 0x14	; 20
    1098:	91 e0       	ldi	r25, 0x01	; 1
    109a:	0e 94 2b 07 	call	0xe56	; 0xe56 <lcdPrint>
    109e:	82 e0       	ldi	r24, 0x02	; 2
    10a0:	0e 94 0a 07 	call	0xe14	; 0xe14 <lcdGoToY>
    10a4:	6f e0       	ldi	r22, 0x0F	; 15
    10a6:	8a e3       	ldi	r24, 0x3A	; 58
    10a8:	91 e0       	ldi	r25, 0x01	; 1
    10aa:	0e 94 2b 07 	call	0xe56	; 0xe56 <lcdPrint>
    10ae:	d6 c0       	rjmp	.+428    	; 0x125c <lcdUpdate+0x30e>
    10b0:	80 91 14 02 	lds	r24, 0x0214
    10b4:	83 30       	cpi	r24, 0x03	; 3
    10b6:	79 f5       	brne	.+94     	; 0x1116 <lcdUpdate+0x1c8>
    10b8:	81 e0       	ldi	r24, 0x01	; 1
    10ba:	0e 94 0a 07 	call	0xe14	; 0xe14 <lcdGoToY>
    10be:	90 91 17 02 	lds	r25, 0x0217
    10c2:	80 91 18 02 	lds	r24, 0x0218
    10c6:	1f 92       	push	r1
    10c8:	9f 93       	push	r25
    10ca:	1f 92       	push	r1
    10cc:	8f 93       	push	r24
    10ce:	8d e2       	ldi	r24, 0x2D	; 45
    10d0:	91 e0       	ldi	r25, 0x01	; 1
    10d2:	9f 93       	push	r25
    10d4:	8f 93       	push	r24
    10d6:	8e 01       	movw	r16, r28
    10d8:	0f 5f       	subi	r16, 0xFF	; 255
    10da:	1f 4f       	sbci	r17, 0xFF	; 255
    10dc:	1f 93       	push	r17
    10de:	0f 93       	push	r16
    10e0:	0e 94 58 11 	call	0x22b0	; 0x22b0 <sprintf>
    10e4:	f8 01       	movw	r30, r16
    10e6:	01 90       	ld	r0, Z+
    10e8:	00 20       	and	r0, r0
    10ea:	e9 f7       	brne	.-6      	; 0x10e6 <lcdUpdate+0x198>
    10ec:	31 97       	sbiw	r30, 0x01	; 1
    10ee:	bf 01       	movw	r22, r30
    10f0:	60 1b       	sub	r22, r16
    10f2:	71 0b       	sbc	r23, r17
    10f4:	c8 01       	movw	r24, r16
    10f6:	0e 94 2b 07 	call	0xe56	; 0xe56 <lcdPrint>
    10fa:	82 e0       	ldi	r24, 0x02	; 2
    10fc:	0e 94 0a 07 	call	0xe14	; 0xe14 <lcdGoToY>
    1100:	60 e0       	ldi	r22, 0x00	; 0
    1102:	8e ea       	ldi	r24, 0xAE	; 174
    1104:	91 e0       	ldi	r25, 0x01	; 1
    1106:	0e 94 2b 07 	call	0xe56	; 0xe56 <lcdPrint>
    110a:	0f b6       	in	r0, 0x3f	; 63
    110c:	f8 94       	cli
    110e:	de bf       	out	0x3e, r29	; 62
    1110:	0f be       	out	0x3f, r0	; 63
    1112:	cd bf       	out	0x3d, r28	; 61
    1114:	a3 c0       	rjmp	.+326    	; 0x125c <lcdUpdate+0x30e>
    1116:	80 91 14 02 	lds	r24, 0x0214
    111a:	84 30       	cpi	r24, 0x04	; 4
    111c:	09 f0       	breq	.+2      	; 0x1120 <lcdUpdate+0x1d2>
    111e:	54 c0       	rjmp	.+168    	; 0x11c8 <lcdUpdate+0x27a>
    1120:	81 e0       	ldi	r24, 0x01	; 1
    1122:	0e 94 0a 07 	call	0xe14	; 0xe14 <lcdGoToY>
    1126:	90 91 17 02 	lds	r25, 0x0217
    112a:	80 91 18 02 	lds	r24, 0x0218
    112e:	1f 92       	push	r1
    1130:	9f 93       	push	r25
    1132:	1f 92       	push	r1
    1134:	8f 93       	push	r24
    1136:	8d e2       	ldi	r24, 0x2D	; 45
    1138:	91 e0       	ldi	r25, 0x01	; 1
    113a:	9f 93       	push	r25
    113c:	8f 93       	push	r24
    113e:	8e 01       	movw	r16, r28
    1140:	0f 5f       	subi	r16, 0xFF	; 255
    1142:	1f 4f       	sbci	r17, 0xFF	; 255
    1144:	1f 93       	push	r17
    1146:	0f 93       	push	r16
    1148:	0e 94 58 11 	call	0x22b0	; 0x22b0 <sprintf>
    114c:	f8 01       	movw	r30, r16
    114e:	01 90       	ld	r0, Z+
    1150:	00 20       	and	r0, r0
    1152:	e9 f7       	brne	.-6      	; 0x114e <lcdUpdate+0x200>
    1154:	31 97       	sbiw	r30, 0x01	; 1
    1156:	bf 01       	movw	r22, r30
    1158:	60 1b       	sub	r22, r16
    115a:	71 0b       	sbc	r23, r17
    115c:	c8 01       	movw	r24, r16
    115e:	0e 94 2b 07 	call	0xe56	; 0xe56 <lcdPrint>
    1162:	82 e0       	ldi	r24, 0x02	; 2
    1164:	0e 94 0a 07 	call	0xe14	; 0xe14 <lcdGoToY>
    1168:	80 91 18 02 	lds	r24, 0x0218
    116c:	40 91 17 02 	lds	r20, 0x0217
    1170:	50 e0       	ldi	r21, 0x00	; 0
    1172:	9c e3       	ldi	r25, 0x3C	; 60
    1174:	89 9f       	mul	r24, r25
    1176:	40 0d       	add	r20, r0
    1178:	51 1d       	adc	r21, r1
    117a:	11 24       	eor	r1, r1
    117c:	be 01       	movw	r22, r28
    117e:	6e 5e       	subi	r22, 0xEE	; 238
    1180:	7f 4f       	sbci	r23, 0xFF	; 255
    1182:	ce 01       	movw	r24, r28
    1184:	41 96       	adiw	r24, 0x11	; 17
    1186:	0e 94 45 07 	call	0xe8a	; 0xe8a <getTotalPrice>
    118a:	8a 89       	ldd	r24, Y+18	; 0x12
    118c:	1f 92       	push	r1
    118e:	8f 93       	push	r24
    1190:	89 89       	ldd	r24, Y+17	; 0x11
    1192:	1f 92       	push	r1
    1194:	8f 93       	push	r24
    1196:	8a e4       	ldi	r24, 0x4A	; 74
    1198:	91 e0       	ldi	r25, 0x01	; 1
    119a:	9f 93       	push	r25
    119c:	8f 93       	push	r24
    119e:	1f 93       	push	r17
    11a0:	0f 93       	push	r16
    11a2:	0e 94 58 11 	call	0x22b0	; 0x22b0 <sprintf>
    11a6:	f8 01       	movw	r30, r16
    11a8:	01 90       	ld	r0, Z+
    11aa:	00 20       	and	r0, r0
    11ac:	e9 f7       	brne	.-6      	; 0x11a8 <lcdUpdate+0x25a>
    11ae:	31 97       	sbiw	r30, 0x01	; 1
    11b0:	bf 01       	movw	r22, r30
    11b2:	60 1b       	sub	r22, r16
    11b4:	71 0b       	sbc	r23, r17
    11b6:	c8 01       	movw	r24, r16
    11b8:	0e 94 2b 07 	call	0xe56	; 0xe56 <lcdPrint>
    11bc:	0f b6       	in	r0, 0x3f	; 63
    11be:	f8 94       	cli
    11c0:	de bf       	out	0x3e, r29	; 62
    11c2:	0f be       	out	0x3f, r0	; 63
    11c4:	cd bf       	out	0x3d, r28	; 61
    11c6:	4a c0       	rjmp	.+148    	; 0x125c <lcdUpdate+0x30e>
    11c8:	80 91 14 02 	lds	r24, 0x0214
    11cc:	87 30       	cpi	r24, 0x07	; 7
    11ce:	89 f4       	brne	.+34     	; 0x11f2 <lcdUpdate+0x2a4>
    11d0:	81 e0       	ldi	r24, 0x01	; 1
    11d2:	0e 94 0a 07 	call	0xe14	; 0xe14 <lcdGoToY>
    11d6:	6d e0       	ldi	r22, 0x0D	; 13
    11d8:	88 e5       	ldi	r24, 0x58	; 88
    11da:	91 e0       	ldi	r25, 0x01	; 1
    11dc:	0e 94 2b 07 	call	0xe56	; 0xe56 <lcdPrint>
    11e0:	82 e0       	ldi	r24, 0x02	; 2
    11e2:	0e 94 0a 07 	call	0xe14	; 0xe14 <lcdGoToY>
    11e6:	6e e0       	ldi	r22, 0x0E	; 14
    11e8:	86 e6       	ldi	r24, 0x66	; 102
    11ea:	91 e0       	ldi	r25, 0x01	; 1
    11ec:	0e 94 2b 07 	call	0xe56	; 0xe56 <lcdPrint>
    11f0:	35 c0       	rjmp	.+106    	; 0x125c <lcdUpdate+0x30e>
    11f2:	80 91 14 02 	lds	r24, 0x0214
    11f6:	88 30       	cpi	r24, 0x08	; 8
    11f8:	89 f4       	brne	.+34     	; 0x121c <lcdUpdate+0x2ce>
    11fa:	81 e0       	ldi	r24, 0x01	; 1
    11fc:	0e 94 0a 07 	call	0xe14	; 0xe14 <lcdGoToY>
    1200:	6d e0       	ldi	r22, 0x0D	; 13
    1202:	88 e5       	ldi	r24, 0x58	; 88
    1204:	91 e0       	ldi	r25, 0x01	; 1
    1206:	0e 94 2b 07 	call	0xe56	; 0xe56 <lcdPrint>
    120a:	82 e0       	ldi	r24, 0x02	; 2
    120c:	0e 94 0a 07 	call	0xe14	; 0xe14 <lcdGoToY>
    1210:	6e e0       	ldi	r22, 0x0E	; 14
    1212:	86 e6       	ldi	r24, 0x66	; 102
    1214:	91 e0       	ldi	r25, 0x01	; 1
    1216:	0e 94 2b 07 	call	0xe56	; 0xe56 <lcdPrint>
    121a:	20 c0       	rjmp	.+64     	; 0x125c <lcdUpdate+0x30e>
    121c:	80 91 14 02 	lds	r24, 0x0214
    1220:	8a 30       	cpi	r24, 0x0A	; 10
    1222:	61 f0       	breq	.+24     	; 0x123c <lcdUpdate+0x2ee>
    1224:	80 91 14 02 	lds	r24, 0x0214
    1228:	89 30       	cpi	r24, 0x09	; 9
    122a:	41 f0       	breq	.+16     	; 0x123c <lcdUpdate+0x2ee>
    122c:	80 91 14 02 	lds	r24, 0x0214
    1230:	86 30       	cpi	r24, 0x06	; 6
    1232:	21 f0       	breq	.+8      	; 0x123c <lcdUpdate+0x2ee>
    1234:	80 91 14 02 	lds	r24, 0x0214
    1238:	85 30       	cpi	r24, 0x05	; 5
    123a:	81 f4       	brne	.+32     	; 0x125c <lcdUpdate+0x30e>
    123c:	81 e0       	ldi	r24, 0x01	; 1
    123e:	0e 94 0a 07 	call	0xe14	; 0xe14 <lcdGoToY>
    1242:	6f e0       	ldi	r22, 0x0F	; 15
    1244:	85 e7       	ldi	r24, 0x75	; 117
    1246:	91 e0       	ldi	r25, 0x01	; 1
    1248:	0e 94 2b 07 	call	0xe56	; 0xe56 <lcdPrint>
    124c:	82 e0       	ldi	r24, 0x02	; 2
    124e:	0e 94 0a 07 	call	0xe14	; 0xe14 <lcdGoToY>
    1252:	60 e0       	ldi	r22, 0x00	; 0
    1254:	8e ea       	ldi	r24, 0xAE	; 174
    1256:	91 e0       	ldi	r25, 0x01	; 1
    1258:	0e 94 2b 07 	call	0xe56	; 0xe56 <lcdPrint>
    125c:	64 96       	adiw	r28, 0x14	; 20
    125e:	0f b6       	in	r0, 0x3f	; 63
    1260:	f8 94       	cli
    1262:	de bf       	out	0x3e, r29	; 62
    1264:	0f be       	out	0x3f, r0	; 63
    1266:	cd bf       	out	0x3d, r28	; 61
    1268:	df 91       	pop	r29
    126a:	cf 91       	pop	r28
    126c:	1f 91       	pop	r17
    126e:	0f 91       	pop	r16
    1270:	08 95       	ret

00001272 <ledInit>:
    1272:	56 9a       	sbi	0x0a, 6	; 10
    1274:	08 95       	ret

00001276 <ledOn>:
    1276:	83 e8       	ldi	r24, 0x83	; 131
    1278:	84 bd       	out	0x24, r24	; 36
    127a:	84 e0       	ldi	r24, 0x04	; 4
    127c:	85 bd       	out	0x25, r24	; 37
    127e:	80 91 20 02 	lds	r24, 0x0220
    1282:	87 bd       	out	0x27, r24	; 39
    1284:	08 95       	ret

00001286 <ledOff>:
    1286:	15 bc       	out	0x25, r1	; 37
    1288:	14 bc       	out	0x24, r1	; 36
    128a:	08 95       	ret

0000128c <ledSetDutyCycle>:
    128c:	80 93 20 02 	sts	0x0220, r24
    1290:	87 bd       	out	0x27, r24	; 39
    1292:	08 95       	ret

00001294 <maintenanceInit>:
    1294:	2e 9a       	sbi	0x05, 6	; 5
    1296:	08 95       	ret

00001298 <isMaintenance>:
    1298:	83 b1       	in	r24, 0x03	; 3
    129a:	86 fb       	bst	r24, 6
    129c:	88 27       	eor	r24, r24
    129e:	80 f9       	bld	r24, 0
    12a0:	90 e0       	ldi	r25, 0x00	; 0
    12a2:	08 95       	ret

000012a4 <testUltrasonic>:
    12a4:	ef 92       	push	r14
    12a6:	ff 92       	push	r15
    12a8:	0f 93       	push	r16
    12aa:	1f 93       	push	r17
    12ac:	cf 93       	push	r28
    12ae:	df 93       	push	r29
    12b0:	cd b7       	in	r28, 0x3d	; 61
    12b2:	de b7       	in	r29, 0x3e	; 62
    12b4:	60 97       	sbiw	r28, 0x10	; 16
    12b6:	0f b6       	in	r0, 0x3f	; 63
    12b8:	f8 94       	cli
    12ba:	de bf       	out	0x3e, r29	; 62
    12bc:	0f be       	out	0x3f, r0	; 63
    12be:	cd bf       	out	0x3d, r28	; 61
    12c0:	0e 94 0c 0f 	call	0x1e18	; 0x1e18 <ultrasonicInit>
    12c4:	80 91 22 02 	lds	r24, 0x0222
    12c8:	90 91 23 02 	lds	r25, 0x0223
    12cc:	03 97       	sbiw	r24, 0x03	; 3
    12ce:	09 f4       	brne	.+2      	; 0x12d2 <testUltrasonic+0x2e>
    12d0:	4c c0       	rjmp	.+152    	; 0x136a <testUltrasonic+0xc6>
    12d2:	0f 2e       	mov	r0, r31
    12d4:	f3 e9       	ldi	r31, 0x93	; 147
    12d6:	ef 2e       	mov	r14, r31
    12d8:	f1 e0       	ldi	r31, 0x01	; 1
    12da:	ff 2e       	mov	r15, r31
    12dc:	f0 2d       	mov	r31, r0
    12de:	8e 01       	movw	r16, r28
    12e0:	0f 5f       	subi	r16, 0xFF	; 255
    12e2:	1f 4f       	sbci	r17, 0xFF	; 255
    12e4:	10 92 23 02 	sts	0x0223, r1
    12e8:	10 92 22 02 	sts	0x0222, r1
    12ec:	0e 94 20 0f 	call	0x1e40	; 0x1e40 <ultrasonicUpdateDistance>
    12f0:	81 e0       	ldi	r24, 0x01	; 1
    12f2:	0e 94 0a 07 	call	0xe14	; 0xe14 <lcdGoToY>
    12f6:	6d e0       	ldi	r22, 0x0D	; 13
    12f8:	85 e8       	ldi	r24, 0x85	; 133
    12fa:	91 e0       	ldi	r25, 0x01	; 1
    12fc:	0e 94 2b 07 	call	0xe56	; 0xe56 <lcdPrint>
    1300:	0e 94 78 0f 	call	0x1ef0	; 0x1ef0 <ultrasonicMinDistance>
    1304:	e0 91 10 02 	lds	r30, 0x0210
    1308:	f0 e0       	ldi	r31, 0x00	; 0
    130a:	ef 5f       	subi	r30, 0xFF	; 255
    130c:	fe 4f       	sbci	r31, 0xFE	; 254
    130e:	90 81       	ld	r25, Z
    1310:	1f 92       	push	r1
    1312:	8f 93       	push	r24
    1314:	1f 92       	push	r1
    1316:	9f 93       	push	r25
    1318:	ff 92       	push	r15
    131a:	ef 92       	push	r14
    131c:	1f 93       	push	r17
    131e:	0f 93       	push	r16
    1320:	0e 94 58 11 	call	0x22b0	; 0x22b0 <sprintf>
    1324:	82 e0       	ldi	r24, 0x02	; 2
    1326:	0e 94 0a 07 	call	0xe14	; 0xe14 <lcdGoToY>
    132a:	f8 01       	movw	r30, r16
    132c:	01 90       	ld	r0, Z+
    132e:	00 20       	and	r0, r0
    1330:	e9 f7       	brne	.-6      	; 0x132c <testUltrasonic+0x88>
    1332:	31 97       	sbiw	r30, 0x01	; 1
    1334:	bf 01       	movw	r22, r30
    1336:	60 1b       	sub	r22, r16
    1338:	71 0b       	sbc	r23, r17
    133a:	c8 01       	movw	r24, r16
    133c:	0e 94 2b 07 	call	0xe56	; 0xe56 <lcdPrint>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1340:	2f ef       	ldi	r18, 0xFF	; 255
    1342:	39 e6       	ldi	r19, 0x69	; 105
    1344:	88 e1       	ldi	r24, 0x18	; 24
    1346:	21 50       	subi	r18, 0x01	; 1
    1348:	30 40       	sbci	r19, 0x00	; 0
    134a:	80 40       	sbci	r24, 0x00	; 0
    134c:	e1 f7       	brne	.-8      	; 0x1346 <testUltrasonic+0xa2>
    134e:	00 c0       	rjmp	.+0      	; 0x1350 <testUltrasonic+0xac>
    1350:	00 00       	nop
    1352:	80 91 22 02 	lds	r24, 0x0222
    1356:	90 91 23 02 	lds	r25, 0x0223
    135a:	0f b6       	in	r0, 0x3f	; 63
    135c:	f8 94       	cli
    135e:	de bf       	out	0x3e, r29	; 62
    1360:	0f be       	out	0x3f, r0	; 63
    1362:	cd bf       	out	0x3d, r28	; 61
    1364:	03 97       	sbiw	r24, 0x03	; 3
    1366:	09 f0       	breq	.+2      	; 0x136a <testUltrasonic+0xc6>
    1368:	bd cf       	rjmp	.-134    	; 0x12e4 <testUltrasonic+0x40>
    136a:	10 92 23 02 	sts	0x0223, r1
    136e:	10 92 22 02 	sts	0x0222, r1
    1372:	60 96       	adiw	r28, 0x10	; 16
    1374:	0f b6       	in	r0, 0x3f	; 63
    1376:	f8 94       	cli
    1378:	de bf       	out	0x3e, r29	; 62
    137a:	0f be       	out	0x3f, r0	; 63
    137c:	cd bf       	out	0x3d, r28	; 61
    137e:	df 91       	pop	r29
    1380:	cf 91       	pop	r28
    1382:	1f 91       	pop	r17
    1384:	0f 91       	pop	r16
    1386:	ff 90       	pop	r15
    1388:	ef 90       	pop	r14
    138a:	08 95       	ret

0000138c <testCardReader>:
    138c:	df 92       	push	r13
    138e:	ef 92       	push	r14
    1390:	ff 92       	push	r15
    1392:	0f 93       	push	r16
    1394:	1f 93       	push	r17
    1396:	cf 93       	push	r28
    1398:	df 93       	push	r29
    139a:	cd b7       	in	r28, 0x3d	; 61
    139c:	de b7       	in	r29, 0x3e	; 62
    139e:	60 97       	sbiw	r28, 0x10	; 16
    13a0:	0f b6       	in	r0, 0x3f	; 63
    13a2:	f8 94       	cli
    13a4:	de bf       	out	0x3e, r29	; 62
    13a6:	0f be       	out	0x3f, r0	; 63
    13a8:	cd bf       	out	0x3d, r28	; 61
    13aa:	0e 94 8b 06 	call	0xd16	; 0xd16 <cardReaderInit>
    13ae:	9e 01       	movw	r18, r28
    13b0:	2f 5f       	subi	r18, 0xFF	; 255
    13b2:	3f 4f       	sbci	r19, 0xFF	; 255
    13b4:	8e 01       	movw	r16, r28
    13b6:	0f 5e       	subi	r16, 0xEF	; 239
    13b8:	1f 4f       	sbci	r17, 0xFF	; 255
    13ba:	f9 01       	movw	r30, r18
    13bc:	80 e2       	ldi	r24, 0x20	; 32
    13be:	81 93       	st	Z+, r24
    13c0:	e0 17       	cp	r30, r16
    13c2:	f1 07       	cpc	r31, r17
    13c4:	e1 f7       	brne	.-8      	; 0x13be <testCardReader+0x32>
    13c6:	80 e0       	ldi	r24, 0x00	; 0
    13c8:	90 e0       	ldi	r25, 0x00	; 0
    13ca:	40 e2       	ldi	r20, 0x20	; 32
    13cc:	fc 01       	movw	r30, r24
    13ce:	ec 5d       	subi	r30, 0xDC	; 220
    13d0:	fd 4f       	sbci	r31, 0xFD	; 253
    13d2:	40 83       	st	Z, r20
    13d4:	01 96       	adiw	r24, 0x01	; 1
    13d6:	8f 34       	cpi	r24, 0x4F	; 79
    13d8:	91 05       	cpc	r25, r1
    13da:	c1 f7       	brne	.-16     	; 0x13cc <testCardReader+0x40>
    13dc:	80 91 22 02 	lds	r24, 0x0222
    13e0:	90 91 23 02 	lds	r25, 0x0223
    13e4:	03 97       	sbiw	r24, 0x03	; 3
    13e6:	09 f4       	brne	.+2      	; 0x13ea <testCardReader+0x5e>
    13e8:	41 c0       	rjmp	.+130    	; 0x146c <testCardReader+0xe0>
    13ea:	f1 2c       	mov	r15, r1
    13ec:	e2 2e       	mov	r14, r18
    13ee:	d3 2e       	mov	r13, r19
    13f0:	10 92 23 02 	sts	0x0223, r1
    13f4:	10 92 22 02 	sts	0x0222, r1
    13f8:	80 91 21 02 	lds	r24, 0x0221
    13fc:	88 23       	and	r24, r24
    13fe:	19 f0       	breq	.+6      	; 0x1406 <testCardReader+0x7a>
    1400:	10 92 21 02 	sts	0x0221, r1
    1404:	f1 2c       	mov	r15, r1
    1406:	fe 01       	movw	r30, r28
    1408:	32 96       	adiw	r30, 0x02	; 2
    140a:	ae 2d       	mov	r26, r14
    140c:	bd 2d       	mov	r27, r13
    140e:	81 91       	ld	r24, Z+
    1410:	8d 93       	st	X+, r24
    1412:	0e 17       	cp	r16, r30
    1414:	1f 07       	cpc	r17, r31
    1416:	d9 f7       	brne	.-10     	; 0x140e <testCardReader+0x82>
    1418:	ef 2d       	mov	r30, r15
    141a:	f0 e0       	ldi	r31, 0x00	; 0
    141c:	ec 5d       	subi	r30, 0xDC	; 220
    141e:	fd 4f       	sbci	r31, 0xFD	; 253
    1420:	80 81       	ld	r24, Z
    1422:	88 8b       	std	Y+16, r24	; 0x10
    1424:	f3 94       	inc	r15
    1426:	2f e4       	ldi	r18, 0x4F	; 79
    1428:	f2 12       	cpse	r15, r18
    142a:	01 c0       	rjmp	.+2      	; 0x142e <testCardReader+0xa2>
    142c:	f1 2c       	mov	r15, r1
    142e:	81 e0       	ldi	r24, 0x01	; 1
    1430:	0e 94 0a 07 	call	0xe14	; 0xe14 <lcdGoToY>
    1434:	69 e0       	ldi	r22, 0x09	; 9
    1436:	8a e9       	ldi	r24, 0x9A	; 154
    1438:	91 e0       	ldi	r25, 0x01	; 1
    143a:	0e 94 2b 07 	call	0xe56	; 0xe56 <lcdPrint>
    143e:	82 e0       	ldi	r24, 0x02	; 2
    1440:	0e 94 0a 07 	call	0xe14	; 0xe14 <lcdGoToY>
    1444:	60 e1       	ldi	r22, 0x10	; 16
    1446:	ce 01       	movw	r24, r28
    1448:	01 96       	adiw	r24, 0x01	; 1
    144a:	0e 94 2b 07 	call	0xe56	; 0xe56 <lcdPrint>
    144e:	8f ef       	ldi	r24, 0xFF	; 255
    1450:	94 e3       	ldi	r25, 0x34	; 52
    1452:	2c e0       	ldi	r18, 0x0C	; 12
    1454:	81 50       	subi	r24, 0x01	; 1
    1456:	90 40       	sbci	r25, 0x00	; 0
    1458:	20 40       	sbci	r18, 0x00	; 0
    145a:	e1 f7       	brne	.-8      	; 0x1454 <testCardReader+0xc8>
    145c:	00 c0       	rjmp	.+0      	; 0x145e <testCardReader+0xd2>
    145e:	00 00       	nop
    1460:	80 91 22 02 	lds	r24, 0x0222
    1464:	90 91 23 02 	lds	r25, 0x0223
    1468:	03 97       	sbiw	r24, 0x03	; 3
    146a:	11 f6       	brne	.-124    	; 0x13f0 <testCardReader+0x64>
    146c:	10 92 23 02 	sts	0x0223, r1
    1470:	10 92 22 02 	sts	0x0222, r1
    1474:	60 96       	adiw	r28, 0x10	; 16
    1476:	0f b6       	in	r0, 0x3f	; 63
    1478:	f8 94       	cli
    147a:	de bf       	out	0x3e, r29	; 62
    147c:	0f be       	out	0x3f, r0	; 63
    147e:	cd bf       	out	0x3d, r28	; 61
    1480:	df 91       	pop	r29
    1482:	cf 91       	pop	r28
    1484:	1f 91       	pop	r17
    1486:	0f 91       	pop	r16
    1488:	ff 90       	pop	r15
    148a:	ef 90       	pop	r14
    148c:	df 90       	pop	r13
    148e:	08 95       	ret

00001490 <hexToAscii>:
    1490:	ef 92       	push	r14
    1492:	ff 92       	push	r15
    1494:	0f 93       	push	r16
    1496:	1f 93       	push	r17
    1498:	cf 93       	push	r28
    149a:	df 93       	push	r29
    149c:	06 2f       	mov	r16, r22
    149e:	10 e0       	ldi	r17, 0x00	; 0
    14a0:	10 16       	cp	r1, r16
    14a2:	11 06       	cpc	r1, r17
    14a4:	6c f5       	brge	.+90     	; 0x1500 <hexToAscii+0x70>
    14a6:	4f 5f       	subi	r20, 0xFF	; 255
    14a8:	5f 4f       	sbci	r21, 0xFF	; 255
    14aa:	e8 2f       	mov	r30, r24
    14ac:	f9 2f       	mov	r31, r25
    14ae:	80 e0       	ldi	r24, 0x00	; 0
    14b0:	90 e0       	ldi	r25, 0x00	; 0
    14b2:	ef 01       	movw	r28, r30
    14b4:	20 81       	ld	r18, Z
    14b6:	22 95       	swap	r18
    14b8:	2f 70       	andi	r18, 0x0F	; 15
    14ba:	30 e0       	ldi	r19, 0x00	; 0
    14bc:	2a 30       	cpi	r18, 0x0A	; 10
    14be:	31 05       	cpc	r19, r1
    14c0:	1c f0       	brlt	.+6      	; 0x14c8 <hexToAscii+0x38>
    14c2:	29 5c       	subi	r18, 0xC9	; 201
    14c4:	3f 4f       	sbci	r19, 0xFF	; 255
    14c6:	02 c0       	rjmp	.+4      	; 0x14cc <hexToAscii+0x3c>
    14c8:	20 5d       	subi	r18, 0xD0	; 208
    14ca:	3f 4f       	sbci	r19, 0xFF	; 255
    14cc:	7a 01       	movw	r14, r20
    14ce:	ba 01       	movw	r22, r20
    14d0:	61 50       	subi	r22, 0x01	; 1
    14d2:	71 09       	sbc	r23, r1
    14d4:	db 01       	movw	r26, r22
    14d6:	2c 93       	st	X, r18
    14d8:	31 96       	adiw	r30, 0x01	; 1
    14da:	28 81       	ld	r18, Y
    14dc:	2f 70       	andi	r18, 0x0F	; 15
    14de:	30 e0       	ldi	r19, 0x00	; 0
    14e0:	2a 30       	cpi	r18, 0x0A	; 10
    14e2:	31 05       	cpc	r19, r1
    14e4:	1c f0       	brlt	.+6      	; 0x14ec <hexToAscii+0x5c>
    14e6:	29 5c       	subi	r18, 0xC9	; 201
    14e8:	3f 4f       	sbci	r19, 0xFF	; 255
    14ea:	02 c0       	rjmp	.+4      	; 0x14f0 <hexToAscii+0x60>
    14ec:	20 5d       	subi	r18, 0xD0	; 208
    14ee:	3f 4f       	sbci	r19, 0xFF	; 255
    14f0:	d7 01       	movw	r26, r14
    14f2:	2c 93       	st	X, r18
    14f4:	01 96       	adiw	r24, 0x01	; 1
    14f6:	4e 5f       	subi	r20, 0xFE	; 254
    14f8:	5f 4f       	sbci	r21, 0xFF	; 255
    14fa:	80 17       	cp	r24, r16
    14fc:	91 07       	cpc	r25, r17
    14fe:	cc f2       	brlt	.-78     	; 0x14b2 <hexToAscii+0x22>
    1500:	df 91       	pop	r29
    1502:	cf 91       	pop	r28
    1504:	1f 91       	pop	r17
    1506:	0f 91       	pop	r16
    1508:	ff 90       	pop	r15
    150a:	ef 90       	pop	r14
    150c:	08 95       	ret

0000150e <assignID>:
    150e:	af 92       	push	r10
    1510:	bf 92       	push	r11
    1512:	cf 92       	push	r12
    1514:	df 92       	push	r13
    1516:	ef 92       	push	r14
    1518:	ff 92       	push	r15
    151a:	0f 93       	push	r16
    151c:	1f 93       	push	r17
    151e:	cf 93       	push	r28
    1520:	df 93       	push	r29
    1522:	cd b7       	in	r28, 0x3d	; 61
    1524:	de b7       	in	r29, 0x3e	; 62
    1526:	da 95       	dec	r29
    1528:	0f b6       	in	r0, 0x3f	; 63
    152a:	f8 94       	cli
    152c:	de bf       	out	0x3e, r29	; 62
    152e:	0f be       	out	0x3f, r0	; 63
    1530:	cd bf       	out	0x3d, r28	; 61
    1532:	ed b6       	in	r14, 0x3d	; 61
    1534:	fe b6       	in	r15, 0x3e	; 62
    1536:	0e 94 79 0d 	call	0x1af2	; 0x1af2 <rfInit>
    153a:	10 92 23 02 	sts	0x0223, r1
    153e:	10 92 22 02 	sts	0x0222, r1
    1542:	0f 2e       	mov	r0, r31
    1544:	f7 ee       	ldi	r31, 0xE7	; 231
    1546:	df 2e       	mov	r13, r31
    1548:	f0 2d       	mov	r31, r0
    154a:	cc 24       	eor	r12, r12
    154c:	ca 94       	dec	r12
    154e:	d9 82       	std	Y+1, r13	; 0x01
    1550:	da 82       	std	Y+2, r13	; 0x02
    1552:	db 82       	std	Y+3, r13	; 0x03
    1554:	dc 82       	std	Y+4, r13	; 0x04
    1556:	dd 82       	std	Y+5, r13	; 0x05
    1558:	ce 01       	movw	r24, r28
    155a:	01 96       	adiw	r24, 0x01	; 1
    155c:	0e 94 1c 0d 	call	0x1a38	; 0x1a38 <setAddress>
    1560:	81 e0       	ldi	r24, 0x01	; 1
    1562:	0e 94 0a 07 	call	0xe14	; 0xe14 <lcdGoToY>
    1566:	6a e0       	ldi	r22, 0x0A	; 10
    1568:	84 ea       	ldi	r24, 0xA4	; 164
    156a:	91 e0       	ldi	r25, 0x01	; 1
    156c:	0e 94 2b 07 	call	0xe56	; 0xe56 <lcdPrint>
    1570:	c0 50       	subi	r28, 0x00	; 0
    1572:	df 4f       	sbci	r29, 0xFF	; 255
    1574:	c8 82       	st	Y, r12
    1576:	c0 50       	subi	r28, 0x00	; 0
    1578:	d1 40       	sbci	r29, 0x01	; 1
    157a:	be 01       	movw	r22, r28
    157c:	73 95       	inc	r23
    157e:	ce 01       	movw	r24, r28
    1580:	01 96       	adiw	r24, 0x01	; 1
    1582:	0e 94 2c 0e 	call	0x1c58	; 0x1c58 <rfRead>
    1586:	81 11       	cpse	r24, r1
    1588:	e2 cf       	rjmp	.-60     	; 0x154e <assignID+0x40>
    158a:	ad b6       	in	r10, 0x3d	; 61
    158c:	be b6       	in	r11, 0x3e	; 62
    158e:	82 e0       	ldi	r24, 0x02	; 2
    1590:	0e 94 0a 07 	call	0xe14	; 0xe14 <lcdGoToY>
    1594:	c0 50       	subi	r28, 0x00	; 0
    1596:	df 4f       	sbci	r29, 0xFF	; 255
    1598:	68 81       	ld	r22, Y
    159a:	c0 50       	subi	r28, 0x00	; 0
    159c:	d1 40       	sbci	r29, 0x01	; 1
    159e:	86 2f       	mov	r24, r22
    15a0:	90 e0       	ldi	r25, 0x00	; 0
    15a2:	88 0f       	add	r24, r24
    15a4:	99 1f       	adc	r25, r25
    15a6:	2d b7       	in	r18, 0x3d	; 61
    15a8:	3e b7       	in	r19, 0x3e	; 62
    15aa:	28 1b       	sub	r18, r24
    15ac:	39 0b       	sbc	r19, r25
    15ae:	0f b6       	in	r0, 0x3f	; 63
    15b0:	f8 94       	cli
    15b2:	3e bf       	out	0x3e, r19	; 62
    15b4:	0f be       	out	0x3f, r0	; 63
    15b6:	2d bf       	out	0x3d, r18	; 61
    15b8:	0d b7       	in	r16, 0x3d	; 61
    15ba:	1e b7       	in	r17, 0x3e	; 62
    15bc:	0f 5f       	subi	r16, 0xFF	; 255
    15be:	1f 4f       	sbci	r17, 0xFF	; 255
    15c0:	40 2f       	mov	r20, r16
    15c2:	51 2f       	mov	r21, r17
    15c4:	ce 01       	movw	r24, r28
    15c6:	01 96       	adiw	r24, 0x01	; 1
    15c8:	0e 94 48 0a 	call	0x1490	; 0x1490 <hexToAscii>
    15cc:	c0 50       	subi	r28, 0x00	; 0
    15ce:	df 4f       	sbci	r29, 0xFF	; 255
    15d0:	68 81       	ld	r22, Y
    15d2:	c0 50       	subi	r28, 0x00	; 0
    15d4:	d1 40       	sbci	r29, 0x01	; 1
    15d6:	66 0f       	add	r22, r22
    15d8:	80 2f       	mov	r24, r16
    15da:	91 2f       	mov	r25, r17
    15dc:	0e 94 2b 07 	call	0xe56	; 0xe56 <lcdPrint>
    15e0:	ce 01       	movw	r24, r28
    15e2:	01 96       	adiw	r24, 0x01	; 1
    15e4:	0e 94 1c 0d 	call	0x1a38	; 0x1a38 <setAddress>
    15e8:	81 e0       	ldi	r24, 0x01	; 1
    15ea:	0e 94 0a 07 	call	0xe14	; 0xe14 <lcdGoToY>
    15ee:	6c e0       	ldi	r22, 0x0C	; 12
    15f0:	8f ea       	ldi	r24, 0xAF	; 175
    15f2:	91 e0       	ldi	r25, 0x01	; 1
    15f4:	0e 94 2b 07 	call	0xe56	; 0xe56 <lcdPrint>
    15f8:	1f c0       	rjmp	.+62     	; 0x1638 <assignID+0x12a>
    15fa:	be 01       	movw	r22, r28
    15fc:	73 95       	inc	r23
    15fe:	ce 01       	movw	r24, r28
    1600:	01 96       	adiw	r24, 0x01	; 1
    1602:	0e 94 2c 0e 	call	0x1c58	; 0x1c58 <rfRead>
    1606:	81 11       	cpse	r24, r1
    1608:	17 c0       	rjmp	.+46     	; 0x1638 <assignID+0x12a>
    160a:	81 e0       	ldi	r24, 0x01	; 1
    160c:	0e 94 0a 07 	call	0xe14	; 0xe14 <lcdGoToY>
    1610:	6b e0       	ldi	r22, 0x0B	; 11
    1612:	8c eb       	ldi	r24, 0xBC	; 188
    1614:	91 e0       	ldi	r25, 0x01	; 1
    1616:	0e 94 2b 07 	call	0xe56	; 0xe56 <lcdPrint>
    161a:	45 e0       	ldi	r20, 0x05	; 5
    161c:	50 e0       	ldi	r21, 0x00	; 0
    161e:	60 e0       	ldi	r22, 0x00	; 0
    1620:	70 e0       	ldi	r23, 0x00	; 0
    1622:	ce 01       	movw	r24, r28
    1624:	01 96       	adiw	r24, 0x01	; 1
    1626:	0e 94 66 13 	call	0x26cc	; 0x26cc <__eeupd_block_m328p>
    162a:	80 91 22 02 	lds	r24, 0x0222
    162e:	90 91 23 02 	lds	r25, 0x0223
    1632:	03 97       	sbiw	r24, 0x03	; 3
    1634:	d1 f7       	brne	.-12     	; 0x162a <assignID+0x11c>
    1636:	12 c0       	rjmp	.+36     	; 0x165c <assignID+0x14e>
    1638:	80 91 22 02 	lds	r24, 0x0222
    163c:	90 91 23 02 	lds	r25, 0x0223
    1640:	89 2b       	or	r24, r25
    1642:	d9 f2       	breq	.-74     	; 0x15fa <assignID+0xec>
    1644:	10 92 23 02 	sts	0x0223, r1
    1648:	10 92 22 02 	sts	0x0222, r1
    164c:	8a 2d       	mov	r24, r10
    164e:	9b 2d       	mov	r25, r11
    1650:	0f b6       	in	r0, 0x3f	; 63
    1652:	f8 94       	cli
    1654:	9e bf       	out	0x3e, r25	; 62
    1656:	0f be       	out	0x3f, r0	; 63
    1658:	8d bf       	out	0x3d, r24	; 61
    165a:	79 cf       	rjmp	.-270    	; 0x154e <assignID+0x40>
    165c:	10 92 23 02 	sts	0x0223, r1
    1660:	10 92 22 02 	sts	0x0222, r1
    1664:	0f b6       	in	r0, 0x3f	; 63
    1666:	f8 94       	cli
    1668:	fe be       	out	0x3e, r15	; 62
    166a:	0f be       	out	0x3f, r0	; 63
    166c:	ed be       	out	0x3d, r14	; 61
    166e:	d3 95       	inc	r29
    1670:	0f b6       	in	r0, 0x3f	; 63
    1672:	f8 94       	cli
    1674:	de bf       	out	0x3e, r29	; 62
    1676:	0f be       	out	0x3f, r0	; 63
    1678:	cd bf       	out	0x3d, r28	; 61
    167a:	df 91       	pop	r29
    167c:	cf 91       	pop	r28
    167e:	1f 91       	pop	r17
    1680:	0f 91       	pop	r16
    1682:	ff 90       	pop	r15
    1684:	ef 90       	pop	r14
    1686:	df 90       	pop	r13
    1688:	cf 90       	pop	r12
    168a:	bf 90       	pop	r11
    168c:	af 90       	pop	r10
    168e:	08 95       	ret

00001690 <displayID>:
    1690:	cf 93       	push	r28
    1692:	df 93       	push	r29
    1694:	cd b7       	in	r28, 0x3d	; 61
    1696:	de b7       	in	r29, 0x3e	; 62
    1698:	6a 97       	sbiw	r28, 0x1a	; 26
    169a:	0f b6       	in	r0, 0x3f	; 63
    169c:	f8 94       	cli
    169e:	de bf       	out	0x3e, r29	; 62
    16a0:	0f be       	out	0x3f, r0	; 63
    16a2:	cd bf       	out	0x3d, r28	; 61
    16a4:	45 e0       	ldi	r20, 0x05	; 5
    16a6:	50 e0       	ldi	r21, 0x00	; 0
    16a8:	60 e0       	ldi	r22, 0x00	; 0
    16aa:	70 e0       	ldi	r23, 0x00	; 0
    16ac:	ce 01       	movw	r24, r28
    16ae:	01 96       	adiw	r24, 0x01	; 1
    16b0:	0e 94 56 13 	call	0x26ac	; 0x26ac <__eerd_block_m328p>
    16b4:	ae 01       	movw	r20, r28
    16b6:	4f 5e       	subi	r20, 0xEF	; 239
    16b8:	5f 4f       	sbci	r21, 0xFF	; 255
    16ba:	65 e0       	ldi	r22, 0x05	; 5
    16bc:	ce 01       	movw	r24, r28
    16be:	01 96       	adiw	r24, 0x01	; 1
    16c0:	0e 94 48 0a 	call	0x1490	; 0x1490 <hexToAscii>
    16c4:	80 91 22 02 	lds	r24, 0x0222
    16c8:	90 91 23 02 	lds	r25, 0x0223
    16cc:	03 97       	sbiw	r24, 0x03	; 3
    16ce:	19 f1       	breq	.+70     	; 0x1716 <displayID+0x86>
    16d0:	10 92 23 02 	sts	0x0223, r1
    16d4:	10 92 22 02 	sts	0x0222, r1
    16d8:	81 e0       	ldi	r24, 0x01	; 1
    16da:	0e 94 0a 07 	call	0xe14	; 0xe14 <lcdGoToY>
    16de:	62 e0       	ldi	r22, 0x02	; 2
    16e0:	8c ea       	ldi	r24, 0xAC	; 172
    16e2:	91 e0       	ldi	r25, 0x01	; 1
    16e4:	0e 94 2b 07 	call	0xe56	; 0xe56 <lcdPrint>
    16e8:	82 e0       	ldi	r24, 0x02	; 2
    16ea:	0e 94 0a 07 	call	0xe14	; 0xe14 <lcdGoToY>
    16ee:	6a e0       	ldi	r22, 0x0A	; 10
    16f0:	ce 01       	movw	r24, r28
    16f2:	41 96       	adiw	r24, 0x11	; 17
    16f4:	0e 94 2b 07 	call	0xe56	; 0xe56 <lcdPrint>
    16f8:	2f ef       	ldi	r18, 0xFF	; 255
    16fa:	89 e6       	ldi	r24, 0x69	; 105
    16fc:	98 e1       	ldi	r25, 0x18	; 24
    16fe:	21 50       	subi	r18, 0x01	; 1
    1700:	80 40       	sbci	r24, 0x00	; 0
    1702:	90 40       	sbci	r25, 0x00	; 0
    1704:	e1 f7       	brne	.-8      	; 0x16fe <displayID+0x6e>
    1706:	00 c0       	rjmp	.+0      	; 0x1708 <displayID+0x78>
    1708:	00 00       	nop
    170a:	80 91 22 02 	lds	r24, 0x0222
    170e:	90 91 23 02 	lds	r25, 0x0223
    1712:	03 97       	sbiw	r24, 0x03	; 3
    1714:	e9 f6       	brne	.-70     	; 0x16d0 <displayID+0x40>
    1716:	10 92 23 02 	sts	0x0223, r1
    171a:	10 92 22 02 	sts	0x0222, r1
    171e:	6a 96       	adiw	r28, 0x1a	; 26
    1720:	0f b6       	in	r0, 0x3f	; 63
    1722:	f8 94       	cli
    1724:	de bf       	out	0x3e, r29	; 62
    1726:	0f be       	out	0x3f, r0	; 63
    1728:	cd bf       	out	0x3d, r28	; 61
    172a:	df 91       	pop	r29
    172c:	cf 91       	pop	r28
    172e:	08 95       	ret

00001730 <maintenanceMode>:
    1730:	0e 94 80 02 	call	0x500	; 0x500 <buttonInit>
    1734:	0e 94 5c 0c 	call	0x18b8	; 0x18b8 <turnOnUIPower>
    1738:	0e 94 e4 06 	call	0xdc8	; 0xdc8 <lcdInit>
    173c:	78 94       	sei
    173e:	10 92 23 02 	sts	0x0223, r1
    1742:	10 92 22 02 	sts	0x0222, r1
    1746:	c0 e0       	ldi	r28, 0x00	; 0
    1748:	d0 e0       	ldi	r29, 0x00	; 0
    174a:	03 e0       	ldi	r16, 0x03	; 3
    174c:	10 e0       	ldi	r17, 0x00	; 0
    174e:	01 c0       	rjmp	.+2      	; 0x1752 <maintenanceMode+0x22>
    1750:	e8 01       	movw	r28, r16
    1752:	80 91 22 02 	lds	r24, 0x0222
    1756:	90 91 23 02 	lds	r25, 0x0223
    175a:	01 97       	sbiw	r24, 0x01	; 1
    175c:	71 f4       	brne	.+28     	; 0x177a <maintenanceMode+0x4a>
    175e:	10 92 23 02 	sts	0x0223, r1
    1762:	10 92 22 02 	sts	0x0222, r1
    1766:	21 96       	adiw	r28, 0x01	; 1
    1768:	c3 70       	andi	r28, 0x03	; 3
    176a:	d0 78       	andi	r29, 0x80	; 128
    176c:	dd 23       	and	r29, r29
    176e:	8c f7       	brge	.-30     	; 0x1752 <maintenanceMode+0x22>
    1770:	21 97       	sbiw	r28, 0x01	; 1
    1772:	cc 6f       	ori	r28, 0xFC	; 252
    1774:	df 6f       	ori	r29, 0xFF	; 255
    1776:	21 96       	adiw	r28, 0x01	; 1
    1778:	ec cf       	rjmp	.-40     	; 0x1752 <maintenanceMode+0x22>
    177a:	80 91 22 02 	lds	r24, 0x0222
    177e:	90 91 23 02 	lds	r25, 0x0223
    1782:	02 97       	sbiw	r24, 0x02	; 2
    1784:	39 f4       	brne	.+14     	; 0x1794 <maintenanceMode+0x64>
    1786:	10 92 23 02 	sts	0x0223, r1
    178a:	10 92 22 02 	sts	0x0222, r1
    178e:	21 97       	sbiw	r28, 0x01	; 1
    1790:	00 f7       	brcc	.-64     	; 0x1752 <maintenanceMode+0x22>
    1792:	de cf       	rjmp	.-68     	; 0x1750 <maintenanceMode+0x20>
    1794:	80 91 22 02 	lds	r24, 0x0222
    1798:	90 91 23 02 	lds	r25, 0x0223
    179c:	03 97       	sbiw	r24, 0x03	; 3
    179e:	e1 f4       	brne	.+56     	; 0x17d8 <maintenanceMode+0xa8>
    17a0:	10 92 23 02 	sts	0x0223, r1
    17a4:	10 92 22 02 	sts	0x0222, r1
    17a8:	20 97       	sbiw	r28, 0x00	; 0
    17aa:	19 f4       	brne	.+6      	; 0x17b2 <maintenanceMode+0x82>
    17ac:	0e 94 52 09 	call	0x12a4	; 0x12a4 <testUltrasonic>
    17b0:	d0 cf       	rjmp	.-96     	; 0x1752 <maintenanceMode+0x22>
    17b2:	c1 30       	cpi	r28, 0x01	; 1
    17b4:	d1 05       	cpc	r29, r1
    17b6:	19 f4       	brne	.+6      	; 0x17be <maintenanceMode+0x8e>
    17b8:	0e 94 c6 09 	call	0x138c	; 0x138c <testCardReader>
    17bc:	ca cf       	rjmp	.-108    	; 0x1752 <maintenanceMode+0x22>
    17be:	c2 30       	cpi	r28, 0x02	; 2
    17c0:	d1 05       	cpc	r29, r1
    17c2:	19 f4       	brne	.+6      	; 0x17ca <maintenanceMode+0x9a>
    17c4:	0e 94 87 0a 	call	0x150e	; 0x150e <assignID>
    17c8:	c4 cf       	rjmp	.-120    	; 0x1752 <maintenanceMode+0x22>
    17ca:	c3 30       	cpi	r28, 0x03	; 3
    17cc:	d1 05       	cpc	r29, r1
    17ce:	09 f0       	breq	.+2      	; 0x17d2 <maintenanceMode+0xa2>
    17d0:	c0 cf       	rjmp	.-128    	; 0x1752 <maintenanceMode+0x22>
    17d2:	0e 94 48 0b 	call	0x1690	; 0x1690 <displayID>
    17d6:	bd cf       	rjmp	.-134    	; 0x1752 <maintenanceMode+0x22>
    17d8:	20 97       	sbiw	r28, 0x00	; 0
    17da:	89 f4       	brne	.+34     	; 0x17fe <maintenanceMode+0xce>
    17dc:	81 e0       	ldi	r24, 0x01	; 1
    17de:	0e 94 0a 07 	call	0xe14	; 0xe14 <lcdGoToY>
    17e2:	6b e0       	ldi	r22, 0x0B	; 11
    17e4:	88 ec       	ldi	r24, 0xC8	; 200
    17e6:	91 e0       	ldi	r25, 0x01	; 1
    17e8:	0e 94 2b 07 	call	0xe56	; 0xe56 <lcdPrint>
    17ec:	82 e0       	ldi	r24, 0x02	; 2
    17ee:	0e 94 0a 07 	call	0xe14	; 0xe14 <lcdGoToY>
    17f2:	6f e0       	ldi	r22, 0x0F	; 15
    17f4:	84 ed       	ldi	r24, 0xD4	; 212
    17f6:	91 e0       	ldi	r25, 0x01	; 1
    17f8:	0e 94 2b 07 	call	0xe56	; 0xe56 <lcdPrint>
    17fc:	aa cf       	rjmp	.-172    	; 0x1752 <maintenanceMode+0x22>
    17fe:	c1 30       	cpi	r28, 0x01	; 1
    1800:	d1 05       	cpc	r29, r1
    1802:	89 f4       	brne	.+34     	; 0x1826 <maintenanceMode+0xf6>
    1804:	81 e0       	ldi	r24, 0x01	; 1
    1806:	0e 94 0a 07 	call	0xe14	; 0xe14 <lcdGoToY>
    180a:	6b e0       	ldi	r22, 0x0B	; 11
    180c:	88 ec       	ldi	r24, 0xC8	; 200
    180e:	91 e0       	ldi	r25, 0x01	; 1
    1810:	0e 94 2b 07 	call	0xe56	; 0xe56 <lcdPrint>
    1814:	82 e0       	ldi	r24, 0x02	; 2
    1816:	0e 94 0a 07 	call	0xe14	; 0xe14 <lcdGoToY>
    181a:	60 e1       	ldi	r22, 0x10	; 16
    181c:	84 ee       	ldi	r24, 0xE4	; 228
    181e:	91 e0       	ldi	r25, 0x01	; 1
    1820:	0e 94 2b 07 	call	0xe56	; 0xe56 <lcdPrint>
    1824:	96 cf       	rjmp	.-212    	; 0x1752 <maintenanceMode+0x22>
    1826:	c2 30       	cpi	r28, 0x02	; 2
    1828:	d1 05       	cpc	r29, r1
    182a:	89 f4       	brne	.+34     	; 0x184e <maintenanceMode+0x11e>
    182c:	81 e0       	ldi	r24, 0x01	; 1
    182e:	0e 94 0a 07 	call	0xe14	; 0xe14 <lcdGoToY>
    1832:	6b e0       	ldi	r22, 0x0B	; 11
    1834:	88 ec       	ldi	r24, 0xC8	; 200
    1836:	91 e0       	ldi	r25, 0x01	; 1
    1838:	0e 94 2b 07 	call	0xe56	; 0xe56 <lcdPrint>
    183c:	82 e0       	ldi	r24, 0x02	; 2
    183e:	0e 94 0a 07 	call	0xe14	; 0xe14 <lcdGoToY>
    1842:	69 e0       	ldi	r22, 0x09	; 9
    1844:	85 ef       	ldi	r24, 0xF5	; 245
    1846:	91 e0       	ldi	r25, 0x01	; 1
    1848:	0e 94 2b 07 	call	0xe56	; 0xe56 <lcdPrint>
    184c:	82 cf       	rjmp	.-252    	; 0x1752 <maintenanceMode+0x22>
    184e:	c3 30       	cpi	r28, 0x03	; 3
    1850:	d1 05       	cpc	r29, r1
    1852:	09 f0       	breq	.+2      	; 0x1856 <maintenanceMode+0x126>
    1854:	7e cf       	rjmp	.-260    	; 0x1752 <maintenanceMode+0x22>
    1856:	81 e0       	ldi	r24, 0x01	; 1
    1858:	0e 94 0a 07 	call	0xe14	; 0xe14 <lcdGoToY>
    185c:	6b e0       	ldi	r22, 0x0B	; 11
    185e:	88 ec       	ldi	r24, 0xC8	; 200
    1860:	91 e0       	ldi	r25, 0x01	; 1
    1862:	0e 94 2b 07 	call	0xe56	; 0xe56 <lcdPrint>
    1866:	82 e0       	ldi	r24, 0x02	; 2
    1868:	0e 94 0a 07 	call	0xe14	; 0xe14 <lcdGoToY>
    186c:	6a e0       	ldi	r22, 0x0A	; 10
    186e:	8f ef       	ldi	r24, 0xFF	; 255
    1870:	91 e0       	ldi	r25, 0x01	; 1
    1872:	0e 94 2b 07 	call	0xe56	; 0xe56 <lcdPrint>
    1876:	6d cf       	rjmp	.-294    	; 0x1752 <maintenanceMode+0x22>

00001878 <powerInit>:
    1878:	27 9a       	sbi	0x04, 7	; 4
    187a:	08 95       	ret

0000187c <turnOffUIPower>:
    187c:	10 92 13 02 	sts	0x0213, r1
    1880:	80 91 1f 02 	lds	r24, 0x021F
    1884:	82 30       	cpi	r24, 0x02	; 2
    1886:	41 f0       	breq	.+16     	; 0x1898 <turnOffUIPower+0x1c>
    1888:	80 91 1a 02 	lds	r24, 0x021A
    188c:	80 93 1c 02 	sts	0x021C, r24
    1890:	80 91 19 02 	lds	r24, 0x0219
    1894:	80 93 1b 02 	sts	0x021B, r24
    1898:	2f 9a       	sbi	0x05, 7	; 5
    189a:	0e 94 99 06 	call	0xd32	; 0xd32 <cardReaderOff>
    189e:	08 95       	ret

000018a0 <isPower>:
    18a0:	83 b1       	in	r24, 0x03	; 3
    18a2:	99 27       	eor	r25, r25
    18a4:	87 fd       	sbrc	r24, 7
    18a6:	90 95       	com	r25
    18a8:	80 95       	com	r24
    18aa:	90 95       	com	r25
    18ac:	89 2f       	mov	r24, r25
    18ae:	88 1f       	adc	r24, r24
    18b0:	88 27       	eor	r24, r24
    18b2:	88 1f       	adc	r24, r24
    18b4:	90 e0       	ldi	r25, 0x00	; 0
    18b6:	08 95       	ret

000018b8 <turnOnUIPower>:
    18b8:	0e 94 50 0c 	call	0x18a0	; 0x18a0 <isPower>
    18bc:	89 2b       	or	r24, r25
    18be:	61 f4       	brne	.+24     	; 0x18d8 <turnOnUIPower+0x20>
    18c0:	81 e0       	ldi	r24, 0x01	; 1
    18c2:	80 93 13 02 	sts	0x0213, r24
    18c6:	0e 94 3c 0c 	call	0x1878	; 0x1878 <powerInit>
    18ca:	2f 98       	cbi	0x05, 7	; 5
    18cc:	10 92 16 02 	sts	0x0216, r1
    18d0:	0e 94 e4 06 	call	0xdc8	; 0xdc8 <lcdInit>
    18d4:	0e 94 8b 06 	call	0xd16	; 0xd16 <cardReaderInit>
    18d8:	0e 94 a7 07 	call	0xf4e	; 0xf4e <lcdUpdate>
    18dc:	08 95       	ret

000018de <ultrasonicTick>:
    18de:	80 91 15 02 	lds	r24, 0x0215
    18e2:	8f 5f       	subi	r24, 0xFF	; 255
    18e4:	80 93 15 02 	sts	0x0215, r24
    18e8:	80 91 15 02 	lds	r24, 0x0215
    18ec:	86 30       	cpi	r24, 0x06	; 6
    18ee:	30 f0       	brcs	.+12     	; 0x18fc <ultrasonicTick+0x1e>
    18f0:	8e ef       	ldi	r24, 0xFE	; 254
    18f2:	80 93 15 02 	sts	0x0215, r24
    18f6:	0e 94 43 09 	call	0x1286	; 0x1286 <ledOff>
    18fa:	09 c0       	rjmp	.+18     	; 0x190e <ultrasonicTick+0x30>
    18fc:	80 91 15 02 	lds	r24, 0x0215
    1900:	80 ff       	sbrs	r24, 0
    1902:	03 c0       	rjmp	.+6      	; 0x190a <ultrasonicTick+0x2c>
    1904:	0e 94 43 09 	call	0x1286	; 0x1286 <ledOff>
    1908:	02 c0       	rjmp	.+4      	; 0x190e <ultrasonicTick+0x30>
    190a:	0e 94 3b 09 	call	0x1276	; 0x1276 <ledOn>
    190e:	80 91 16 02 	lds	r24, 0x0216
    1912:	8f 5f       	subi	r24, 0xFF	; 255
    1914:	80 93 16 02 	sts	0x0216, r24
    1918:	80 91 16 02 	lds	r24, 0x0216
    191c:	86 30       	cpi	r24, 0x06	; 6
    191e:	28 f0       	brcs	.+10     	; 0x192a <ultrasonicTick+0x4c>
    1920:	0e 94 3e 0c 	call	0x187c	; 0x187c <turnOffUIPower>
    1924:	8e ef       	ldi	r24, 0xFE	; 254
    1926:	80 93 16 02 	sts	0x0216, r24
    192a:	08 95       	ret

0000192c <read_payload>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    192c:	9a e1       	ldi	r25, 0x1A	; 26
    192e:	9a 95       	dec	r25
    1930:	f1 f7       	brne	.-4      	; 0x192e <read_payload+0x2>
    1932:	00 c0       	rjmp	.+0      	; 0x1934 <read_payload+0x8>
    1934:	2a 98       	cbi	0x05, 2	; 5
    1936:	9a e1       	ldi	r25, 0x1A	; 26
    1938:	9a 95       	dec	r25
    193a:	f1 f7       	brne	.-4      	; 0x1938 <read_payload+0xc>
    193c:	00 c0       	rjmp	.+0      	; 0x193e <read_payload+0x12>
    193e:	8e bd       	out	0x2e, r24	; 46
    1940:	0d b4       	in	r0, 0x2d	; 45
    1942:	07 fe       	sbrs	r0, 7
    1944:	fd cf       	rjmp	.-6      	; 0x1940 <read_payload+0x14>
    1946:	e6 2f       	mov	r30, r22
    1948:	f7 2f       	mov	r31, r23
    194a:	80 e0       	ldi	r24, 0x00	; 0
    194c:	2f ef       	ldi	r18, 0xFF	; 255
    194e:	2e bd       	out	0x2e, r18	; 46
    1950:	0d b4       	in	r0, 0x2d	; 45
    1952:	07 fe       	sbrs	r0, 7
    1954:	fd cf       	rjmp	.-6      	; 0x1950 <read_payload+0x24>
    1956:	9e b5       	in	r25, 0x2e	; 46
    1958:	91 93       	st	Z+, r25
    195a:	8f 5f       	subi	r24, 0xFF	; 255
    195c:	80 32       	cpi	r24, 0x20	; 32
    195e:	b9 f7       	brne	.-18     	; 0x194e <read_payload+0x22>
    1960:	8a e1       	ldi	r24, 0x1A	; 26
    1962:	8a 95       	dec	r24
    1964:	f1 f7       	brne	.-4      	; 0x1962 <read_payload+0x36>
    1966:	00 c0       	rjmp	.+0      	; 0x1968 <read_payload+0x3c>
    1968:	2a 9a       	sbi	0x05, 2	; 5
    196a:	9a e1       	ldi	r25, 0x1A	; 26
    196c:	9a 95       	dec	r25
    196e:	f1 f7       	brne	.-4      	; 0x196c <read_payload+0x40>
    1970:	00 c0       	rjmp	.+0      	; 0x1972 <read_payload+0x46>
    1972:	08 95       	ret

00001974 <write_onebyte>:
    1974:	9a e1       	ldi	r25, 0x1A	; 26
    1976:	9a 95       	dec	r25
    1978:	f1 f7       	brne	.-4      	; 0x1976 <write_onebyte+0x2>
    197a:	00 c0       	rjmp	.+0      	; 0x197c <write_onebyte+0x8>
    197c:	2a 98       	cbi	0x05, 2	; 5
    197e:	9a e1       	ldi	r25, 0x1A	; 26
    1980:	9a 95       	dec	r25
    1982:	f1 f7       	brne	.-4      	; 0x1980 <write_onebyte+0xc>
    1984:	00 c0       	rjmp	.+0      	; 0x1986 <write_onebyte+0x12>
    1986:	8e bd       	out	0x2e, r24	; 46
    1988:	0d b4       	in	r0, 0x2d	; 45
    198a:	07 fe       	sbrs	r0, 7
    198c:	fd cf       	rjmp	.-6      	; 0x1988 <write_onebyte+0x14>
    198e:	6e bd       	out	0x2e, r22	; 46
    1990:	0d b4       	in	r0, 0x2d	; 45
    1992:	07 fe       	sbrs	r0, 7
    1994:	fd cf       	rjmp	.-6      	; 0x1990 <write_onebyte+0x1c>
    1996:	8a e1       	ldi	r24, 0x1A	; 26
    1998:	8a 95       	dec	r24
    199a:	f1 f7       	brne	.-4      	; 0x1998 <write_onebyte+0x24>
    199c:	00 c0       	rjmp	.+0      	; 0x199e <write_onebyte+0x2a>
    199e:	2a 9a       	sbi	0x05, 2	; 5
    19a0:	9a e1       	ldi	r25, 0x1A	; 26
    19a2:	9a 95       	dec	r25
    19a4:	f1 f7       	brne	.-4      	; 0x19a2 <write_onebyte+0x2e>
    19a6:	00 c0       	rjmp	.+0      	; 0x19a8 <write_onebyte+0x34>
    19a8:	08 95       	ret

000019aa <write_payload>:
    19aa:	9a e1       	ldi	r25, 0x1A	; 26
    19ac:	9a 95       	dec	r25
    19ae:	f1 f7       	brne	.-4      	; 0x19ac <write_payload+0x2>
    19b0:	00 c0       	rjmp	.+0      	; 0x19b2 <write_payload+0x8>
    19b2:	2a 98       	cbi	0x05, 2	; 5
    19b4:	9a e1       	ldi	r25, 0x1A	; 26
    19b6:	9a 95       	dec	r25
    19b8:	f1 f7       	brne	.-4      	; 0x19b6 <write_payload+0xc>
    19ba:	00 c0       	rjmp	.+0      	; 0x19bc <write_payload+0x12>
    19bc:	8e bd       	out	0x2e, r24	; 46
    19be:	0d b4       	in	r0, 0x2d	; 45
    19c0:	07 fe       	sbrs	r0, 7
    19c2:	fd cf       	rjmp	.-6      	; 0x19be <write_payload+0x14>
    19c4:	e6 2f       	mov	r30, r22
    19c6:	f7 2f       	mov	r31, r23
    19c8:	80 e0       	ldi	r24, 0x00	; 0
    19ca:	91 91       	ld	r25, Z+
    19cc:	9e bd       	out	0x2e, r25	; 46
    19ce:	0d b4       	in	r0, 0x2d	; 45
    19d0:	07 fe       	sbrs	r0, 7
    19d2:	fd cf       	rjmp	.-6      	; 0x19ce <write_payload+0x24>
    19d4:	8f 5f       	subi	r24, 0xFF	; 255
    19d6:	80 32       	cpi	r24, 0x20	; 32
    19d8:	c1 f7       	brne	.-16     	; 0x19ca <write_payload+0x20>
    19da:	8a e1       	ldi	r24, 0x1A	; 26
    19dc:	8a 95       	dec	r24
    19de:	f1 f7       	brne	.-4      	; 0x19dc <write_payload+0x32>
    19e0:	00 c0       	rjmp	.+0      	; 0x19e2 <write_payload+0x38>
    19e2:	2a 9a       	sbi	0x05, 2	; 5
    19e4:	9a e1       	ldi	r25, 0x1A	; 26
    19e6:	9a 95       	dec	r25
    19e8:	f1 f7       	brne	.-4      	; 0x19e6 <write_payload+0x3c>
    19ea:	00 c0       	rjmp	.+0      	; 0x19ec <write_payload+0x42>
    19ec:	08 95       	ret

000019ee <write_data>:
    19ee:	9a e1       	ldi	r25, 0x1A	; 26
    19f0:	9a 95       	dec	r25
    19f2:	f1 f7       	brne	.-4      	; 0x19f0 <write_data+0x2>
    19f4:	00 c0       	rjmp	.+0      	; 0x19f6 <write_data+0x8>
    19f6:	2a 98       	cbi	0x05, 2	; 5
    19f8:	9a e1       	ldi	r25, 0x1A	; 26
    19fa:	9a 95       	dec	r25
    19fc:	f1 f7       	brne	.-4      	; 0x19fa <write_data+0xc>
    19fe:	00 c0       	rjmp	.+0      	; 0x1a00 <write_data+0x12>
    1a00:	8e bd       	out	0x2e, r24	; 46
    1a02:	0d b4       	in	r0, 0x2d	; 45
    1a04:	07 fe       	sbrs	r0, 7
    1a06:	fd cf       	rjmp	.-6      	; 0x1a02 <write_data+0x14>
    1a08:	44 23       	and	r20, r20
    1a0a:	61 f0       	breq	.+24     	; 0x1a24 <write_data+0x36>
    1a0c:	96 2f       	mov	r25, r22
    1a0e:	e6 2f       	mov	r30, r22
    1a10:	f7 2f       	mov	r31, r23
    1a12:	81 91       	ld	r24, Z+
    1a14:	8e bd       	out	0x2e, r24	; 46
    1a16:	0d b4       	in	r0, 0x2d	; 45
    1a18:	07 fe       	sbrs	r0, 7
    1a1a:	fd cf       	rjmp	.-6      	; 0x1a16 <write_data+0x28>
    1a1c:	8e 2f       	mov	r24, r30
    1a1e:	89 1b       	sub	r24, r25
    1a20:	84 17       	cp	r24, r20
    1a22:	b8 f3       	brcs	.-18     	; 0x1a12 <write_data+0x24>
    1a24:	8a e1       	ldi	r24, 0x1A	; 26
    1a26:	8a 95       	dec	r24
    1a28:	f1 f7       	brne	.-4      	; 0x1a26 <write_data+0x38>
    1a2a:	00 c0       	rjmp	.+0      	; 0x1a2c <write_data+0x3e>
    1a2c:	2a 9a       	sbi	0x05, 2	; 5
    1a2e:	9a e1       	ldi	r25, 0x1A	; 26
    1a30:	9a 95       	dec	r25
    1a32:	f1 f7       	brne	.-4      	; 0x1a30 <write_data+0x42>
    1a34:	00 c0       	rjmp	.+0      	; 0x1a36 <write_data+0x48>
    1a36:	08 95       	ret

00001a38 <setAddress>:
    1a38:	cf 93       	push	r28
    1a3a:	df 93       	push	r29
    1a3c:	ec 01       	movw	r28, r24
    1a3e:	45 e0       	ldi	r20, 0x05	; 5
    1a40:	bc 01       	movw	r22, r24
    1a42:	8a e2       	ldi	r24, 0x2A	; 42
    1a44:	0e 94 f7 0c 	call	0x19ee	; 0x19ee <write_data>
    1a48:	45 e0       	ldi	r20, 0x05	; 5
    1a4a:	be 01       	movw	r22, r28
    1a4c:	80 e3       	ldi	r24, 0x30	; 48
    1a4e:	0e 94 f7 0c 	call	0x19ee	; 0x19ee <write_data>
    1a52:	df 91       	pop	r29
    1a54:	cf 91       	pop	r28
    1a56:	08 95       	ret

00001a58 <commandret>:
    1a58:	9a e1       	ldi	r25, 0x1A	; 26
    1a5a:	9a 95       	dec	r25
    1a5c:	f1 f7       	brne	.-4      	; 0x1a5a <commandret+0x2>
    1a5e:	00 c0       	rjmp	.+0      	; 0x1a60 <commandret+0x8>
    1a60:	2a 98       	cbi	0x05, 2	; 5
    1a62:	9a e1       	ldi	r25, 0x1A	; 26
    1a64:	9a 95       	dec	r25
    1a66:	f1 f7       	brne	.-4      	; 0x1a64 <commandret+0xc>
    1a68:	00 c0       	rjmp	.+0      	; 0x1a6a <commandret+0x12>
    1a6a:	8e bd       	out	0x2e, r24	; 46
    1a6c:	0d b4       	in	r0, 0x2d	; 45
    1a6e:	07 fe       	sbrs	r0, 7
    1a70:	fd cf       	rjmp	.-6      	; 0x1a6c <commandret+0x14>
    1a72:	8a e1       	ldi	r24, 0x1A	; 26
    1a74:	8a 95       	dec	r24
    1a76:	f1 f7       	brne	.-4      	; 0x1a74 <commandret+0x1c>
    1a78:	00 c0       	rjmp	.+0      	; 0x1a7a <commandret+0x22>
    1a7a:	2a 9a       	sbi	0x05, 2	; 5
    1a7c:	9a e1       	ldi	r25, 0x1A	; 26
    1a7e:	9a 95       	dec	r25
    1a80:	f1 f7       	brne	.-4      	; 0x1a7e <commandret+0x26>
    1a82:	00 c0       	rjmp	.+0      	; 0x1a84 <commandret+0x2c>
    1a84:	8e b5       	in	r24, 0x2e	; 46
    1a86:	08 95       	ret

00001a88 <command>:
    1a88:	9a e1       	ldi	r25, 0x1A	; 26
    1a8a:	9a 95       	dec	r25
    1a8c:	f1 f7       	brne	.-4      	; 0x1a8a <command+0x2>
    1a8e:	00 c0       	rjmp	.+0      	; 0x1a90 <command+0x8>
    1a90:	2a 98       	cbi	0x05, 2	; 5
    1a92:	9a e1       	ldi	r25, 0x1A	; 26
    1a94:	9a 95       	dec	r25
    1a96:	f1 f7       	brne	.-4      	; 0x1a94 <command+0xc>
    1a98:	00 c0       	rjmp	.+0      	; 0x1a9a <command+0x12>
    1a9a:	8e bd       	out	0x2e, r24	; 46
    1a9c:	0d b4       	in	r0, 0x2d	; 45
    1a9e:	07 fe       	sbrs	r0, 7
    1aa0:	fd cf       	rjmp	.-6      	; 0x1a9c <command+0x14>
    1aa2:	8a e1       	ldi	r24, 0x1A	; 26
    1aa4:	8a 95       	dec	r24
    1aa6:	f1 f7       	brne	.-4      	; 0x1aa4 <command+0x1c>
    1aa8:	00 c0       	rjmp	.+0      	; 0x1aaa <command+0x22>
    1aaa:	2a 9a       	sbi	0x05, 2	; 5
    1aac:	9a e1       	ldi	r25, 0x1A	; 26
    1aae:	9a 95       	dec	r25
    1ab0:	f1 f7       	brne	.-4      	; 0x1aae <command+0x26>
    1ab2:	00 c0       	rjmp	.+0      	; 0x1ab4 <command+0x2c>
    1ab4:	08 95       	ret

00001ab6 <rec>:
    1ab6:	29 98       	cbi	0x05, 1	; 5
    1ab8:	6f e0       	ldi	r22, 0x0F	; 15
    1aba:	80 e2       	ldi	r24, 0x20	; 32
    1abc:	0e 94 ba 0c 	call	0x1974	; 0x1974 <write_onebyte>
    1ac0:	60 e7       	ldi	r22, 0x70	; 112
    1ac2:	87 e2       	ldi	r24, 0x27	; 39
    1ac4:	0e 94 ba 0c 	call	0x1974	; 0x1974 <write_onebyte>
    1ac8:	81 ee       	ldi	r24, 0xE1	; 225
    1aca:	0e 94 44 0d 	call	0x1a88	; 0x1a88 <command>
    1ace:	82 ee       	ldi	r24, 0xE2	; 226
    1ad0:	0e 94 44 0d 	call	0x1a88	; 0x1a88 <command>
    1ad4:	8b e2       	ldi	r24, 0x2B	; 43
    1ad6:	91 e0       	ldi	r25, 0x01	; 1
    1ad8:	01 97       	sbiw	r24, 0x01	; 1
    1ada:	f1 f7       	brne	.-4      	; 0x1ad8 <rec+0x22>
    1adc:	00 c0       	rjmp	.+0      	; 0x1ade <rec+0x28>
    1ade:	00 00       	nop
    1ae0:	29 9a       	sbi	0x05, 1	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1ae2:	8f e1       	ldi	r24, 0x1F	; 31
    1ae4:	9e e4       	ldi	r25, 0x4E	; 78
    1ae6:	01 97       	sbiw	r24, 0x01	; 1
    1ae8:	f1 f7       	brne	.-4      	; 0x1ae6 <rec+0x30>
    1aea:	00 c0       	rjmp	.+0      	; 0x1aec <rec+0x36>
    1aec:	00 00       	nop
    1aee:	29 98       	cbi	0x05, 1	; 5
    1af0:	08 95       	ret

00001af2 <rfInit>:
    1af2:	84 b1       	in	r24, 0x04	; 4
    1af4:	8e 62       	ori	r24, 0x2E	; 46
    1af6:	84 b9       	out	0x04, r24	; 4
    1af8:	2a 9a       	sbi	0x05, 2	; 5
    1afa:	81 e5       	ldi	r24, 0x51	; 81
    1afc:	8c bd       	out	0x2c, r24	; 44
    1afe:	8f e5       	ldi	r24, 0x5F	; 95
    1b00:	9a ee       	ldi	r25, 0xEA	; 234
    1b02:	01 97       	sbiw	r24, 0x01	; 1
    1b04:	f1 f7       	brne	.-4      	; 0x1b02 <rfInit+0x10>
    1b06:	00 c0       	rjmp	.+0      	; 0x1b08 <rfInit+0x16>
    1b08:	00 00       	nop
    1b0a:	62 e0       	ldi	r22, 0x02	; 2
    1b0c:	85 e2       	ldi	r24, 0x25	; 37
    1b0e:	0e 94 ba 0c 	call	0x1974	; 0x1974 <write_onebyte>
    1b12:	6f e0       	ldi	r22, 0x0F	; 15
    1b14:	84 e2       	ldi	r24, 0x24	; 36
    1b16:	0e 94 ba 0c 	call	0x1974	; 0x1974 <write_onebyte>
    1b1a:	60 e2       	ldi	r22, 0x20	; 32
    1b1c:	81 e3       	ldi	r24, 0x31	; 49
    1b1e:	0e 94 ba 0c 	call	0x1974	; 0x1974 <write_onebyte>
    1b22:	08 95       	ret

00001b24 <rfSend>:
    1b24:	af 92       	push	r10
    1b26:	bf 92       	push	r11
    1b28:	cf 92       	push	r12
    1b2a:	df 92       	push	r13
    1b2c:	ef 92       	push	r14
    1b2e:	ff 92       	push	r15
    1b30:	0f 93       	push	r16
    1b32:	1f 93       	push	r17
    1b34:	cf 93       	push	r28
    1b36:	df 93       	push	r29
    1b38:	cd b7       	in	r28, 0x3d	; 61
    1b3a:	de b7       	in	r29, 0x3e	; 62
    1b3c:	a0 97       	sbiw	r28, 0x20	; 32
    1b3e:	0f b6       	in	r0, 0x3f	; 63
    1b40:	f8 94       	cli
    1b42:	de bf       	out	0x3e, r29	; 62
    1b44:	0f be       	out	0x3f, r0	; 63
    1b46:	cd bf       	out	0x3d, r28	; 61
    1b48:	f8 2f       	mov	r31, r24
    1b4a:	e9 2f       	mov	r30, r25
    1b4c:	46 2f       	mov	r20, r22
    1b4e:	66 23       	and	r22, r22
    1b50:	09 f4       	brne	.+2      	; 0x1b54 <rfSend+0x30>
    1b52:	6c c0       	rjmp	.+216    	; 0x1c2c <rfSend+0x108>
    1b54:	26 2f       	mov	r18, r22
    1b56:	30 e0       	ldi	r19, 0x00	; 0
    1b58:	c9 01       	movw	r24, r18
    1b5a:	4c 96       	adiw	r24, 0x1c	; 28
    1b5c:	6d e1       	ldi	r22, 0x1D	; 29
    1b5e:	70 e0       	ldi	r23, 0x00	; 0
    1b60:	0e 94 f7 10 	call	0x21ee	; 0x21ee <__divmodhi4>
    1b64:	b6 2e       	mov	r11, r22
    1b66:	6a 83       	std	Y+2, r22	; 0x02
    1b68:	8b e1       	ldi	r24, 0x1B	; 27
    1b6a:	48 9f       	mul	r20, r24
    1b6c:	81 2d       	mov	r24, r1
    1b6e:	11 24       	eor	r1, r1
    1b70:	94 2f       	mov	r25, r20
    1b72:	98 1b       	sub	r25, r24
    1b74:	96 95       	lsr	r25
    1b76:	89 0f       	add	r24, r25
    1b78:	98 2f       	mov	r25, r24
    1b7a:	92 95       	swap	r25
    1b7c:	9f 70       	andi	r25, 0x0F	; 15
    1b7e:	8d e1       	ldi	r24, 0x1D	; 29
    1b80:	98 9f       	mul	r25, r24
    1b82:	40 19       	sub	r20, r0
    1b84:	11 24       	eor	r1, r1
    1b86:	84 1b       	sub	r24, r20
    1b88:	8b 83       	std	Y+3, r24	; 0x03
    1b8a:	66 23       	and	r22, r22
    1b8c:	09 f4       	brne	.+2      	; 0x1b90 <rfSend+0x6c>
    1b8e:	50 c0       	rjmp	.+160    	; 0x1c30 <rfSend+0x10c>
    1b90:	ef 2e       	mov	r14, r31
    1b92:	fe 2e       	mov	r15, r30
    1b94:	c1 2c       	mov	r12, r1
    1b96:	8e 01       	movw	r16, r28
    1b98:	0f 5d       	subi	r16, 0xDF	; 223
    1b9a:	1f 4f       	sbci	r17, 0xFF	; 255
    1b9c:	68 94       	set
    1b9e:	aa 24       	eor	r10, r10
    1ba0:	a2 f8       	bld	r10, 2
    1ba2:	c9 82       	std	Y+1, r12	; 0x01
    1ba4:	d7 01       	movw	r26, r14
    1ba6:	fe 01       	movw	r30, r28
    1ba8:	34 96       	adiw	r30, 0x04	; 4
    1baa:	8d 91       	ld	r24, X+
    1bac:	81 93       	st	Z+, r24
    1bae:	e0 17       	cp	r30, r16
    1bb0:	f1 07       	cpc	r31, r17
    1bb2:	d9 f7       	brne	.-10     	; 0x1baa <rfSend+0x86>
    1bb4:	8d e1       	ldi	r24, 0x1D	; 29
    1bb6:	e8 0e       	add	r14, r24
    1bb8:	f1 1c       	adc	r15, r1
    1bba:	da 2c       	mov	r13, r10
    1bbc:	02 c0       	rjmp	.+4      	; 0x1bc2 <rfSend+0x9e>
    1bbe:	da 94       	dec	r13
    1bc0:	c9 f1       	breq	.+114    	; 0x1c34 <rfSend+0x110>
    1bc2:	29 98       	cbi	0x05, 1	; 5
    1bc4:	6e e0       	ldi	r22, 0x0E	; 14
    1bc6:	80 e2       	ldi	r24, 0x20	; 32
    1bc8:	0e 94 ba 0c 	call	0x1974	; 0x1974 <write_onebyte>
    1bcc:	60 e7       	ldi	r22, 0x70	; 112
    1bce:	87 e2       	ldi	r24, 0x27	; 39
    1bd0:	0e 94 ba 0c 	call	0x1974	; 0x1974 <write_onebyte>
    1bd4:	82 ee       	ldi	r24, 0xE2	; 226
    1bd6:	0e 94 44 0d 	call	0x1a88	; 0x1a88 <command>
    1bda:	81 ee       	ldi	r24, 0xE1	; 225
    1bdc:	0e 94 44 0d 	call	0x1a88	; 0x1a88 <command>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1be0:	8b e2       	ldi	r24, 0x2B	; 43
    1be2:	91 e0       	ldi	r25, 0x01	; 1
    1be4:	01 97       	sbiw	r24, 0x01	; 1
    1be6:	f1 f7       	brne	.-4      	; 0x1be4 <rfSend+0xc0>
    1be8:	00 c0       	rjmp	.+0      	; 0x1bea <rfSend+0xc6>
    1bea:	00 00       	nop
    1bec:	be 01       	movw	r22, r28
    1bee:	6f 5f       	subi	r22, 0xFF	; 255
    1bf0:	7f 4f       	sbci	r23, 0xFF	; 255
    1bf2:	80 ea       	ldi	r24, 0xA0	; 160
    1bf4:	0e 94 d5 0c 	call	0x19aa	; 0x19aa <write_payload>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1bf8:	8f e1       	ldi	r24, 0x1F	; 31
    1bfa:	9e e4       	ldi	r25, 0x4E	; 78
    1bfc:	01 97       	sbiw	r24, 0x01	; 1
    1bfe:	f1 f7       	brne	.-4      	; 0x1bfc <rfSend+0xd8>
    1c00:	00 c0       	rjmp	.+0      	; 0x1c02 <rfSend+0xde>
    1c02:	00 00       	nop
    1c04:	29 9a       	sbi	0x05, 1	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1c06:	95 e3       	ldi	r25, 0x35	; 53
    1c08:	9a 95       	dec	r25
    1c0a:	f1 f7       	brne	.-4      	; 0x1c08 <rfSend+0xe4>
    1c0c:	00 00       	nop
    1c0e:	29 98       	cbi	0x05, 1	; 5
    1c10:	8f ef       	ldi	r24, 0xFF	; 255
    1c12:	0e 94 2c 0d 	call	0x1a58	; 0x1a58 <commandret>
    1c16:	98 2f       	mov	r25, r24
    1c18:	90 73       	andi	r25, 0x30	; 48
    1c1a:	d1 f3       	breq	.-12     	; 0x1c10 <rfSend+0xec>
    1c1c:	85 ff       	sbrs	r24, 5
    1c1e:	cf cf       	rjmp	.-98     	; 0x1bbe <rfSend+0x9a>
    1c20:	c3 94       	inc	r12
    1c22:	cb 14       	cp	r12, r11
    1c24:	08 f4       	brcc	.+2      	; 0x1c28 <rfSend+0x104>
    1c26:	bd cf       	rjmp	.-134    	; 0x1ba2 <rfSend+0x7e>
    1c28:	80 e0       	ldi	r24, 0x00	; 0
    1c2a:	05 c0       	rjmp	.+10     	; 0x1c36 <rfSend+0x112>
    1c2c:	85 e0       	ldi	r24, 0x05	; 5
    1c2e:	03 c0       	rjmp	.+6      	; 0x1c36 <rfSend+0x112>
    1c30:	80 e0       	ldi	r24, 0x00	; 0
    1c32:	01 c0       	rjmp	.+2      	; 0x1c36 <rfSend+0x112>
    1c34:	81 e0       	ldi	r24, 0x01	; 1
    1c36:	a0 96       	adiw	r28, 0x20	; 32
    1c38:	0f b6       	in	r0, 0x3f	; 63
    1c3a:	f8 94       	cli
    1c3c:	de bf       	out	0x3e, r29	; 62
    1c3e:	0f be       	out	0x3f, r0	; 63
    1c40:	cd bf       	out	0x3d, r28	; 61
    1c42:	df 91       	pop	r29
    1c44:	cf 91       	pop	r28
    1c46:	1f 91       	pop	r17
    1c48:	0f 91       	pop	r16
    1c4a:	ff 90       	pop	r15
    1c4c:	ef 90       	pop	r14
    1c4e:	df 90       	pop	r13
    1c50:	cf 90       	pop	r12
    1c52:	bf 90       	pop	r11
    1c54:	af 90       	pop	r10
    1c56:	08 95       	ret

00001c58 <rfRead>:
    1c58:	4f 92       	push	r4
    1c5a:	5f 92       	push	r5
    1c5c:	6f 92       	push	r6
    1c5e:	7f 92       	push	r7
    1c60:	8f 92       	push	r8
    1c62:	9f 92       	push	r9
    1c64:	af 92       	push	r10
    1c66:	bf 92       	push	r11
    1c68:	cf 92       	push	r12
    1c6a:	df 92       	push	r13
    1c6c:	ef 92       	push	r14
    1c6e:	ff 92       	push	r15
    1c70:	0f 93       	push	r16
    1c72:	1f 93       	push	r17
    1c74:	cf 93       	push	r28
    1c76:	df 93       	push	r29
    1c78:	cd b7       	in	r28, 0x3d	; 61
    1c7a:	de b7       	in	r29, 0x3e	; 62
    1c7c:	a0 97       	sbiw	r28, 0x20	; 32
    1c7e:	0f b6       	in	r0, 0x3f	; 63
    1c80:	f8 94       	cli
    1c82:	de bf       	out	0x3e, r29	; 62
    1c84:	0f be       	out	0x3f, r0	; 63
    1c86:	cd bf       	out	0x3d, r28	; 61
    1c88:	7c 01       	movw	r14, r24
    1c8a:	6b 01       	movw	r12, r22
    1c8c:	91 2c       	mov	r9, r1
    1c8e:	81 2c       	mov	r8, r1
    1c90:	a1 2c       	mov	r10, r1
    1c92:	b1 2c       	mov	r11, r1
    1c94:	71 2c       	mov	r7, r1
    1c96:	0f 2e       	mov	r0, r31
    1c98:	fd e1       	ldi	r31, 0x1D	; 29
    1c9a:	6f 2e       	mov	r6, r31
    1c9c:	f0 2d       	mov	r31, r0
    1c9e:	55 24       	eor	r5, r5
    1ca0:	53 94       	inc	r5
    1ca2:	8e 01       	movw	r16, r28
    1ca4:	0f 5d       	subi	r16, 0xDF	; 223
    1ca6:	1f 4f       	sbci	r17, 0xFF	; 255
    1ca8:	47 2c       	mov	r4, r7
    1caa:	0e 94 5b 0d 	call	0x1ab6	; 0x1ab6 <rec>
    1cae:	8f ef       	ldi	r24, 0xFF	; 255
    1cb0:	0e 94 2c 0d 	call	0x1a58	; 0x1a58 <commandret>
    1cb4:	86 ff       	sbrs	r24, 6
    1cb6:	0a c0       	rjmp	.+20     	; 0x1ccc <rfRead+0x74>
    1cb8:	be 01       	movw	r22, r28
    1cba:	6f 5f       	subi	r22, 0xFF	; 255
    1cbc:	7f 4f       	sbci	r23, 0xFF	; 255
    1cbe:	81 e6       	ldi	r24, 0x61	; 97
    1cc0:	0e 94 96 0c 	call	0x192c	; 0x192c <read_payload>
    1cc4:	23 e0       	ldi	r18, 0x03	; 3
    1cc6:	42 12       	cpse	r4, r18
    1cc8:	07 c0       	rjmp	.+14     	; 0x1cd8 <rfRead+0x80>
    1cca:	63 c0       	rjmp	.+198    	; 0x1d92 <rfRead+0x13a>
    1ccc:	43 94       	inc	r4
    1cce:	33 e0       	ldi	r19, 0x03	; 3
    1cd0:	43 12       	cpse	r4, r19
    1cd2:	eb cf       	rjmp	.-42     	; 0x1caa <rfRead+0x52>
    1cd4:	81 e0       	ldi	r24, 0x01	; 1
    1cd6:	6e c0       	rjmp	.+220    	; 0x1db4 <rfRead+0x15c>
    1cd8:	99 20       	and	r9, r9
    1cda:	21 f0       	breq	.+8      	; 0x1ce4 <rfRead+0x8c>
    1cdc:	81 e0       	ldi	r24, 0x01	; 1
    1cde:	98 12       	cpse	r9, r24
    1ce0:	2b c0       	rjmp	.+86     	; 0x1d38 <rfRead+0xe0>
    1ce2:	20 c0       	rjmp	.+64     	; 0x1d24 <rfRead+0xcc>
    1ce4:	b9 80       	ldd	r11, Y+1	; 0x01
    1ce6:	aa 80       	ldd	r10, Y+2	; 0x02
    1ce8:	8b 81       	ldd	r24, Y+3	; 0x03
    1cea:	0f 2e       	mov	r0, r31
    1cec:	ff e1       	ldi	r31, 0x1F	; 31
    1cee:	8f 2e       	mov	r8, r31
    1cf0:	f0 2d       	mov	r31, r0
    1cf2:	88 22       	and	r8, r24
    1cf4:	ec e1       	ldi	r30, 0x1C	; 28
    1cf6:	e8 15       	cp	r30, r8
    1cf8:	08 f4       	brcc	.+2      	; 0x1cfc <rfRead+0xa4>
    1cfa:	4d c0       	rjmp	.+154    	; 0x1d96 <rfRead+0x13e>
    1cfc:	a6 9c       	mul	r10, r6
    1cfe:	80 2d       	mov	r24, r0
    1d00:	11 24       	eor	r1, r1
    1d02:	88 16       	cp	r8, r24
    1d04:	08 f0       	brcs	.+2      	; 0x1d08 <rfRead+0xb0>
    1d06:	49 c0       	rjmp	.+146    	; 0x1d9a <rfRead+0x142>
    1d08:	88 19       	sub	r24, r8
    1d0a:	f6 01       	movw	r30, r12
    1d0c:	90 81       	ld	r25, Z
    1d0e:	98 17       	cp	r25, r24
    1d10:	08 f4       	brcc	.+2      	; 0x1d14 <rfRead+0xbc>
    1d12:	45 c0       	rjmp	.+138    	; 0x1d9e <rfRead+0x146>
    1d14:	80 83       	st	Z, r24
    1d16:	b1 10       	cpse	r11, r1
    1d18:	44 c0       	rjmp	.+136    	; 0x1da2 <rfRead+0x14a>
    1d1a:	aa 20       	and	r10, r10
    1d1c:	09 f4       	brne	.+2      	; 0x1d20 <rfRead+0xc8>
    1d1e:	43 c0       	rjmp	.+134    	; 0x1da6 <rfRead+0x14e>
    1d20:	95 2c       	mov	r9, r5
    1d22:	0a c0       	rjmp	.+20     	; 0x1d38 <rfRead+0xe0>
    1d24:	2b 2d       	mov	r18, r11
    1d26:	30 e0       	ldi	r19, 0x00	; 0
    1d28:	2f 5f       	subi	r18, 0xFF	; 255
    1d2a:	3f 4f       	sbci	r19, 0xFF	; 255
    1d2c:	b9 80       	ldd	r11, Y+1	; 0x01
    1d2e:	8b 2d       	mov	r24, r11
    1d30:	90 e0       	ldi	r25, 0x00	; 0
    1d32:	28 17       	cp	r18, r24
    1d34:	39 07       	cpc	r19, r25
    1d36:	c9 f5       	brne	.+114    	; 0x1daa <rfRead+0x152>
    1d38:	ba 14       	cp	r11, r10
    1d3a:	c8 f5       	brcc	.+114    	; 0x1dae <rfRead+0x156>
    1d3c:	2b 2d       	mov	r18, r11
    1d3e:	30 e0       	ldi	r19, 0x00	; 0
    1d40:	2f 5f       	subi	r18, 0xFF	; 255
    1d42:	3f 4f       	sbci	r19, 0xFF	; 255
    1d44:	8a 2d       	mov	r24, r10
    1d46:	90 e0       	ldi	r25, 0x00	; 0
    1d48:	28 17       	cp	r18, r24
    1d4a:	39 07       	cpc	r19, r25
    1d4c:	b1 f4       	brne	.+44     	; 0x1d7a <rfRead+0x122>
    1d4e:	fd e1       	ldi	r31, 0x1D	; 29
    1d50:	8f 16       	cp	r8, r31
    1d52:	79 f1       	breq	.+94     	; 0x1db2 <rfRead+0x15a>
    1d54:	fe 01       	movw	r30, r28
    1d56:	34 96       	adiw	r30, 0x04	; 4
    1d58:	d7 01       	movw	r26, r14
    1d5a:	8c e1       	ldi	r24, 0x1C	; 28
    1d5c:	88 19       	sub	r24, r8
    1d5e:	25 e0       	ldi	r18, 0x05	; 5
    1d60:	30 e0       	ldi	r19, 0x00	; 0
    1d62:	2c 0f       	add	r18, r28
    1d64:	3d 1f       	adc	r19, r29
    1d66:	28 0f       	add	r18, r24
    1d68:	31 1d       	adc	r19, r1
    1d6a:	c9 01       	movw	r24, r18
    1d6c:	21 91       	ld	r18, Z+
    1d6e:	2d 93       	st	X+, r18
    1d70:	e8 17       	cp	r30, r24
    1d72:	f9 07       	cpc	r31, r25
    1d74:	d9 f7       	brne	.-10     	; 0x1d6c <rfRead+0x114>
    1d76:	80 e0       	ldi	r24, 0x00	; 0
    1d78:	1d c0       	rjmp	.+58     	; 0x1db4 <rfRead+0x15c>
    1d7a:	fe 01       	movw	r30, r28
    1d7c:	34 96       	adiw	r30, 0x04	; 4
    1d7e:	d7 01       	movw	r26, r14
    1d80:	81 91       	ld	r24, Z+
    1d82:	8d 93       	st	X+, r24
    1d84:	e0 17       	cp	r30, r16
    1d86:	f1 07       	cpc	r31, r17
    1d88:	d9 f7       	brne	.-10     	; 0x1d80 <rfRead+0x128>
    1d8a:	3d e1       	ldi	r19, 0x1D	; 29
    1d8c:	e3 0e       	add	r14, r19
    1d8e:	f1 1c       	adc	r15, r1
    1d90:	8b cf       	rjmp	.-234    	; 0x1ca8 <rfRead+0x50>
    1d92:	81 e0       	ldi	r24, 0x01	; 1
    1d94:	0f c0       	rjmp	.+30     	; 0x1db4 <rfRead+0x15c>
    1d96:	86 e0       	ldi	r24, 0x06	; 6
    1d98:	0d c0       	rjmp	.+26     	; 0x1db4 <rfRead+0x15c>
    1d9a:	85 e0       	ldi	r24, 0x05	; 5
    1d9c:	0b c0       	rjmp	.+22     	; 0x1db4 <rfRead+0x15c>
    1d9e:	82 e0       	ldi	r24, 0x02	; 2
    1da0:	09 c0       	rjmp	.+18     	; 0x1db4 <rfRead+0x15c>
    1da2:	83 e0       	ldi	r24, 0x03	; 3
    1da4:	07 c0       	rjmp	.+14     	; 0x1db4 <rfRead+0x15c>
    1da6:	84 e0       	ldi	r24, 0x04	; 4
    1da8:	05 c0       	rjmp	.+10     	; 0x1db4 <rfRead+0x15c>
    1daa:	83 e0       	ldi	r24, 0x03	; 3
    1dac:	03 c0       	rjmp	.+6      	; 0x1db4 <rfRead+0x15c>
    1dae:	83 e0       	ldi	r24, 0x03	; 3
    1db0:	01 c0       	rjmp	.+2      	; 0x1db4 <rfRead+0x15c>
    1db2:	80 e0       	ldi	r24, 0x00	; 0
    1db4:	a0 96       	adiw	r28, 0x20	; 32
    1db6:	0f b6       	in	r0, 0x3f	; 63
    1db8:	f8 94       	cli
    1dba:	de bf       	out	0x3e, r29	; 62
    1dbc:	0f be       	out	0x3f, r0	; 63
    1dbe:	cd bf       	out	0x3d, r28	; 61
    1dc0:	df 91       	pop	r29
    1dc2:	cf 91       	pop	r28
    1dc4:	1f 91       	pop	r17
    1dc6:	0f 91       	pop	r16
    1dc8:	ff 90       	pop	r15
    1dca:	ef 90       	pop	r14
    1dcc:	df 90       	pop	r13
    1dce:	cf 90       	pop	r12
    1dd0:	bf 90       	pop	r11
    1dd2:	af 90       	pop	r10
    1dd4:	9f 90       	pop	r9
    1dd6:	8f 90       	pop	r8
    1dd8:	7f 90       	pop	r7
    1dda:	6f 90       	pop	r6
    1ddc:	5f 90       	pop	r5
    1dde:	4f 90       	pop	r4
    1de0:	08 95       	ret

00001de2 <setAddressFromEEPROM>:
    1de2:	cf 93       	push	r28
    1de4:	df 93       	push	r29
    1de6:	00 d0       	rcall	.+0      	; 0x1de8 <setAddressFromEEPROM+0x6>
    1de8:	00 d0       	rcall	.+0      	; 0x1dea <setAddressFromEEPROM+0x8>
    1dea:	1f 92       	push	r1
    1dec:	cd b7       	in	r28, 0x3d	; 61
    1dee:	de b7       	in	r29, 0x3e	; 62
    1df0:	45 e0       	ldi	r20, 0x05	; 5
    1df2:	50 e0       	ldi	r21, 0x00	; 0
    1df4:	60 e0       	ldi	r22, 0x00	; 0
    1df6:	70 e0       	ldi	r23, 0x00	; 0
    1df8:	ce 01       	movw	r24, r28
    1dfa:	01 96       	adiw	r24, 0x01	; 1
    1dfc:	0e 94 56 13 	call	0x26ac	; 0x26ac <__eerd_block_m328p>
    1e00:	ce 01       	movw	r24, r28
    1e02:	01 96       	adiw	r24, 0x01	; 1
    1e04:	0e 94 1c 0d 	call	0x1a38	; 0x1a38 <setAddress>
    1e08:	0f 90       	pop	r0
    1e0a:	0f 90       	pop	r0
    1e0c:	0f 90       	pop	r0
    1e0e:	0f 90       	pop	r0
    1e10:	0f 90       	pop	r0
    1e12:	df 91       	pop	r29
    1e14:	cf 91       	pop	r28
    1e16:	08 95       	ret

00001e18 <ultrasonicInit>:
    1e18:	20 9a       	sbi	0x04, 0	; 4
    1e1a:	5f 9a       	sbi	0x0b, 7	; 11
    1e1c:	08 95       	ret

00001e1e <ultrasonicInterruptInit>:
    1e1e:	10 92 85 00 	sts	0x0085, r1
    1e22:	10 92 84 00 	sts	0x0084, r1
    1e26:	80 e0       	ldi	r24, 0x00	; 0
    1e28:	90 e8       	ldi	r25, 0x80	; 128
    1e2a:	90 93 89 00 	sts	0x0089, r25
    1e2e:	80 93 88 00 	sts	0x0088, r24
    1e32:	82 e0       	ldi	r24, 0x02	; 2
    1e34:	80 93 6f 00 	sts	0x006F, r24
    1e38:	84 e0       	ldi	r24, 0x04	; 4
    1e3a:	80 93 81 00 	sts	0x0081, r24
    1e3e:	08 95       	ret

00001e40 <ultrasonicUpdateDistance>:
    1e40:	28 9a       	sbi	0x05, 0	; 5
    1e42:	2a e1       	ldi	r18, 0x1A	; 26
    1e44:	2a 95       	dec	r18
    1e46:	f1 f7       	brne	.-4      	; 0x1e44 <ultrasonicUpdateDistance+0x4>
    1e48:	00 c0       	rjmp	.+0      	; 0x1e4a <ultrasonicUpdateDistance+0xa>
    1e4a:	28 98       	cbi	0x05, 0	; 5
    1e4c:	10 92 85 00 	sts	0x0085, r1
    1e50:	10 92 84 00 	sts	0x0084, r1
    1e54:	e1 e8       	ldi	r30, 0x81	; 129
    1e56:	f0 e0       	ldi	r31, 0x00	; 0
    1e58:	80 81       	ld	r24, Z
    1e5a:	82 60       	ori	r24, 0x02	; 2
    1e5c:	80 83       	st	Z, r24
    1e5e:	e4 e8       	ldi	r30, 0x84	; 132
    1e60:	f0 e0       	ldi	r31, 0x00	; 0
    1e62:	4f 99       	sbic	0x09, 7	; 9
    1e64:	05 c0       	rjmp	.+10     	; 0x1e70 <ultrasonicUpdateDistance+0x30>
    1e66:	80 81       	ld	r24, Z
    1e68:	91 81       	ldd	r25, Z+1	; 0x01
    1e6a:	88 35       	cpi	r24, 0x58	; 88
    1e6c:	9b 41       	sbci	r25, 0x1B	; 27
    1e6e:	c8 f3       	brcs	.-14     	; 0x1e62 <ultrasonicUpdateDistance+0x22>
    1e70:	e1 e8       	ldi	r30, 0x81	; 129
    1e72:	f0 e0       	ldi	r31, 0x00	; 0
    1e74:	80 81       	ld	r24, Z
    1e76:	8d 7f       	andi	r24, 0xFD	; 253
    1e78:	80 83       	st	Z, r24
    1e7a:	10 92 85 00 	sts	0x0085, r1
    1e7e:	10 92 84 00 	sts	0x0084, r1
    1e82:	80 81       	ld	r24, Z
    1e84:	82 60       	ori	r24, 0x02	; 2
    1e86:	80 83       	st	Z, r24
    1e88:	e4 e8       	ldi	r30, 0x84	; 132
    1e8a:	f0 e0       	ldi	r31, 0x00	; 0
    1e8c:	4f 9b       	sbis	0x09, 7	; 9
    1e8e:	05 c0       	rjmp	.+10     	; 0x1e9a <ultrasonicUpdateDistance+0x5a>
    1e90:	80 81       	ld	r24, Z
    1e92:	91 81       	ldd	r25, Z+1	; 0x01
    1e94:	88 35       	cpi	r24, 0x58	; 88
    1e96:	9b 41       	sbci	r25, 0x1B	; 27
    1e98:	c8 f3       	brcs	.-14     	; 0x1e8c <ultrasonicUpdateDistance+0x4c>
    1e9a:	e1 e8       	ldi	r30, 0x81	; 129
    1e9c:	f0 e0       	ldi	r31, 0x00	; 0
    1e9e:	80 81       	ld	r24, Z
    1ea0:	8d 7f       	andi	r24, 0xFD	; 253
    1ea2:	80 83       	st	Z, r24
    1ea4:	80 91 84 00 	lds	r24, 0x0084
    1ea8:	90 91 85 00 	lds	r25, 0x0085
    1eac:	20 91 10 02 	lds	r18, 0x0210
    1eb0:	2f 5f       	subi	r18, 0xFF	; 255
    1eb2:	20 93 10 02 	sts	0x0210, r18
    1eb6:	30 91 10 02 	lds	r19, 0x0210
    1eba:	2b ea       	ldi	r18, 0xAB	; 171
    1ebc:	32 9f       	mul	r19, r18
    1ebe:	21 2d       	mov	r18, r1
    1ec0:	11 24       	eor	r1, r1
    1ec2:	26 95       	lsr	r18
    1ec4:	42 2f       	mov	r20, r18
    1ec6:	44 0f       	add	r20, r20
    1ec8:	24 0f       	add	r18, r20
    1eca:	32 1b       	sub	r19, r18
    1ecc:	30 93 10 02 	sts	0x0210, r19
    1ed0:	e0 91 10 02 	lds	r30, 0x0210
    1ed4:	f0 e0       	ldi	r31, 0x00	; 0
    1ed6:	00 24       	eor	r0, r0
    1ed8:	88 0f       	add	r24, r24
    1eda:	99 1f       	adc	r25, r25
    1edc:	00 1c       	adc	r0, r0
    1ede:	88 0f       	add	r24, r24
    1ee0:	99 1f       	adc	r25, r25
    1ee2:	00 1c       	adc	r0, r0
    1ee4:	89 2f       	mov	r24, r25
    1ee6:	90 2d       	mov	r25, r0
    1ee8:	ef 5f       	subi	r30, 0xFF	; 255
    1eea:	fe 4f       	sbci	r31, 0xFE	; 254
    1eec:	80 83       	st	Z, r24
    1eee:	08 95       	ret

00001ef0 <ultrasonicMinDistance>:
    1ef0:	80 91 01 01 	lds	r24, 0x0101
    1ef4:	90 91 02 01 	lds	r25, 0x0102
    1ef8:	98 17       	cp	r25, r24
    1efa:	10 f4       	brcc	.+4      	; 0x1f00 <ultrasonicMinDistance+0x10>
    1efc:	80 91 02 01 	lds	r24, 0x0102
    1f00:	90 91 03 01 	lds	r25, 0x0103
    1f04:	98 17       	cp	r25, r24
    1f06:	10 f4       	brcc	.+4      	; 0x1f0c <ultrasonicMinDistance+0x1c>
    1f08:	80 91 03 01 	lds	r24, 0x0103
    1f0c:	08 95       	ret

00001f0e <__vector_11>:
    1f0e:	1f 92       	push	r1
    1f10:	0f 92       	push	r0
    1f12:	0f b6       	in	r0, 0x3f	; 63
    1f14:	0f 92       	push	r0
    1f16:	11 24       	eor	r1, r1
    1f18:	2f 93       	push	r18
    1f1a:	3f 93       	push	r19
    1f1c:	4f 93       	push	r20
    1f1e:	5f 93       	push	r21
    1f20:	6f 93       	push	r22
    1f22:	7f 93       	push	r23
    1f24:	8f 93       	push	r24
    1f26:	9f 93       	push	r25
    1f28:	af 93       	push	r26
    1f2a:	bf 93       	push	r27
    1f2c:	ef 93       	push	r30
    1f2e:	ff 93       	push	r31
    1f30:	f8 94       	cli
    1f32:	0e 94 6f 0c 	call	0x18de	; 0x18de <ultrasonicTick>
    1f36:	10 92 81 00 	sts	0x0081, r1
    1f3a:	0e 94 20 0f 	call	0x1e40	; 0x1e40 <ultrasonicUpdateDistance>
    1f3e:	0e 94 78 0f 	call	0x1ef0	; 0x1ef0 <ultrasonicMinDistance>
    1f42:	90 91 1e 02 	lds	r25, 0x021E
    1f46:	28 2f       	mov	r18, r24
    1f48:	2b 50       	subi	r18, 0x0B	; 11
    1f4a:	29 35       	cpi	r18, 0x59	; 89
    1f4c:	30 f4       	brcc	.+12     	; 0x1f5a <__vector_11+0x4c>
    1f4e:	81 e0       	ldi	r24, 0x01	; 1
    1f50:	80 93 1e 02 	sts	0x021E, r24
    1f54:	10 92 11 02 	sts	0x0211, r1
    1f58:	0c c0       	rjmp	.+24     	; 0x1f72 <__vector_11+0x64>
    1f5a:	10 92 1e 02 	sts	0x021E, r1
    1f5e:	8a 30       	cpi	r24, 0x0A	; 10
    1f60:	30 f4       	brcc	.+12     	; 0x1f6e <__vector_11+0x60>
    1f62:	81 e0       	ldi	r24, 0x01	; 1
    1f64:	80 93 11 02 	sts	0x0211, r24
    1f68:	80 93 1e 02 	sts	0x021E, r24
    1f6c:	02 c0       	rjmp	.+4      	; 0x1f72 <__vector_11+0x64>
    1f6e:	10 92 11 02 	sts	0x0211, r1
    1f72:	80 91 1e 02 	lds	r24, 0x021E
    1f76:	89 17       	cp	r24, r25
    1f78:	49 f0       	breq	.+18     	; 0x1f8c <__vector_11+0x7e>
    1f7a:	10 92 15 02 	sts	0x0215, r1
    1f7e:	0e 94 3b 09 	call	0x1276	; 0x1276 <ledOn>
    1f82:	80 91 1e 02 	lds	r24, 0x021E
    1f86:	81 11       	cpse	r24, r1
    1f88:	0e 94 5c 0c 	call	0x18b8	; 0x18b8 <turnOnUIPower>
    1f8c:	10 92 85 00 	sts	0x0085, r1
    1f90:	10 92 84 00 	sts	0x0084, r1
    1f94:	84 e0       	ldi	r24, 0x04	; 4
    1f96:	80 93 81 00 	sts	0x0081, r24
    1f9a:	b1 9a       	sbi	0x16, 1	; 22
    1f9c:	78 94       	sei
    1f9e:	ff 91       	pop	r31
    1fa0:	ef 91       	pop	r30
    1fa2:	bf 91       	pop	r27
    1fa4:	af 91       	pop	r26
    1fa6:	9f 91       	pop	r25
    1fa8:	8f 91       	pop	r24
    1faa:	7f 91       	pop	r23
    1fac:	6f 91       	pop	r22
    1fae:	5f 91       	pop	r21
    1fb0:	4f 91       	pop	r20
    1fb2:	3f 91       	pop	r19
    1fb4:	2f 91       	pop	r18
    1fb6:	0f 90       	pop	r0
    1fb8:	0f be       	out	0x3f, r0	; 63
    1fba:	0f 90       	pop	r0
    1fbc:	1f 90       	pop	r1
    1fbe:	18 95       	reti

00001fc0 <main>:

#include "FullLibrary.h"


int main(void)
{
    1fc0:	cf 93       	push	r28
    1fc2:	df 93       	push	r29
    1fc4:	cd b7       	in	r28, 0x3d	; 61
    1fc6:	de b7       	in	r29, 0x3e	; 62
    1fc8:	65 97       	sbiw	r28, 0x15	; 21
    1fca:	0f b6       	in	r0, 0x3f	; 63
    1fcc:	f8 94       	cli
    1fce:	de bf       	out	0x3e, r29	; 62
    1fd0:	0f be       	out	0x3f, r0	; 63
    1fd2:	cd bf       	out	0x3d, r28	; 61
	
	
	
	PORTD |= (1<<5);	//mode select based to determine if hub or meter
    1fd4:	5d 9a       	sbi	0x0b, 5	; 11
	
	if(1)
	{
		maintenanceInit();
    1fd6:	0e 94 4a 09 	call	0x1294	; 0x1294 <maintenanceInit>
		if(isMaintenance()){
    1fda:	0e 94 4c 09 	call	0x1298	; 0x1298 <isMaintenance>
    1fde:	89 2b       	or	r24, r25
    1fe0:	11 f0       	breq	.+4      	; 0x1fe6 <main+0x26>
			maintenanceMode();
    1fe2:	0e 94 98 0b 	call	0x1730	; 0x1730 <maintenanceMode>
		}

		ultrasonicInit();
    1fe6:	0e 94 0c 0f 	call	0x1e18	; 0x1e18 <ultrasonicInit>
		ultrasonicInterruptInit();
    1fea:	0e 94 0f 0f 	call	0x1e1e	; 0x1e1e <ultrasonicInterruptInit>
		buttonInit();
    1fee:	0e 94 80 02 	call	0x500	; 0x500 <buttonInit>
		rfInit();
    1ff2:	0e 94 79 0d 	call	0x1af2	; 0x1af2 <rfInit>
		setAddressFromEEPROM();
    1ff6:	0e 94 f1 0e 	call	0x1de2	; 0x1de2 <setAddressFromEEPROM>
		ledInit();
    1ffa:	0e 94 39 09 	call	0x1272	; 0x1272 <ledInit>
		ledOn();
    1ffe:	0e 94 3b 09 	call	0x1276	; 0x1276 <ledOn>
		ledSetDutyCycle(20);
    2002:	84 e1       	ldi	r24, 0x14	; 20
    2004:	0e 94 46 09 	call	0x128c	; 0x128c <ledSetDutyCycle>
		turnOnUIPower();
    2008:	0e 94 5c 0c 	call	0x18b8	; 0x18b8 <turnOnUIPower>
		sei();
    200c:	78 94       	sei
			uint8_t cardWritten = 0;
			uint8_t inBufferSize = 20;
			uint8_t outBufferSize = 100;
			uint8_t inBuffer[inBufferSize];
			uint8_t outBuffer[outBufferSize];
			uint8_t messageLengthIn = inBufferSize;
    200e:	0f 2e       	mov	r0, r31
    2010:	f4 e1       	ldi	r31, 0x14	; 20
    2012:	6f 2e       	mov	r6, r31
    2014:	f0 2d       	mov	r31, r0

#include "FullLibrary.h"


int main(void)
    2016:	8e 01       	movw	r16, r28
    2018:	0b 5e       	subi	r16, 0xEB	; 235
    201a:	1f 4f       	sbci	r17, 0xFF	; 255
					outBuffer[83] = prepayTime;
				}else{
					messageLengthOut = 83;
				}
			}else{
				messageLengthOut = 3;
    201c:	0f 2e       	mov	r0, r31
    201e:	f3 e0       	ldi	r31, 0x03	; 3
    2020:	4f 2e       	mov	r4, r31
    2022:	f0 2d       	mov	r31, r0
	while(1)
	{
		
		if(1)
		{
			uint8_t cardWritten = 0;
    2024:	51 2c       	mov	r5, r1

#include "FullLibrary.h"


int main(void)
    2026:	a1 2c       	mov	r10, r1
    2028:	b1 2c       	mov	r11, r1
			outBuffer[0] |= (isPrepay<<5);
			outBuffer[0] |= (isBroken<<4);
			outBuffer[1] = priceDollars;
			outBuffer[2] = priceCents;
			if(isNewCard){
				cardWritten = 1;
    202a:	77 24       	eor	r7, r7
    202c:	73 94       	inc	r7
				}break;
				case RF_TIMEOUT:{
					
				}break;
				default:{
					sprintf((char*)outBuffer,"%d",rfResult);
    202e:	0f 2e       	mov	r0, r31
    2030:	f7 e9       	ldi	r31, 0x97	; 151
    2032:	cf 2e       	mov	r12, r31
    2034:	f1 e0       	ldi	r31, 0x01	; 1
    2036:	df 2e       	mov	r13, r31
    2038:	f0 2d       	mov	r31, r0
    203a:	8d b6       	in	r8, 0x3d	; 61
    203c:	9e b6       	in	r9, 0x3e	; 62
		{
			uint8_t cardWritten = 0;
			uint8_t inBufferSize = 20;
			uint8_t outBufferSize = 100;
			uint8_t inBuffer[inBufferSize];
			uint8_t outBuffer[outBufferSize];
    203e:	8d b7       	in	r24, 0x3d	; 61
    2040:	9e b7       	in	r25, 0x3e	; 62
    2042:	84 56       	subi	r24, 0x64	; 100
    2044:	91 09       	sbc	r25, r1
    2046:	0f b6       	in	r0, 0x3f	; 63
    2048:	f8 94       	cli
    204a:	9e bf       	out	0x3e, r25	; 62
    204c:	0f be       	out	0x3f, r0	; 63
    204e:	8d bf       	out	0x3d, r24	; 61
    2050:	ed b6       	in	r14, 0x3d	; 61
    2052:	fe b6       	in	r15, 0x3e	; 62
    2054:	e1 e0       	ldi	r30, 0x01	; 1
    2056:	f0 e0       	ldi	r31, 0x00	; 0
    2058:	ee 0e       	add	r14, r30
    205a:	ff 1e       	adc	r15, r31
			uint8_t messageLengthIn = inBufferSize;
    205c:	6d 8a       	std	Y+21, r6	; 0x15
    205e:	fe 01       	movw	r30, r28
    2060:	31 96       	adiw	r30, 0x01	; 1
			uint8_t messageLengthOut = outBufferSize;
			uint8_t rfResult;
			for(uint8_t i=0;i<inBufferSize;i++)
			{
				inBuffer[i] = 0;
    2062:	11 92       	st	Z+, r1
			uint8_t inBuffer[inBufferSize];
			uint8_t outBuffer[outBufferSize];
			uint8_t messageLengthIn = inBufferSize;
			uint8_t messageLengthOut = outBufferSize;
			uint8_t rfResult;
			for(uint8_t i=0;i<inBufferSize;i++)
    2064:	e0 17       	cp	r30, r16
    2066:	f1 07       	cpc	r31, r17
    2068:	e1 f7       	brne	.-8      	; 0x2062 <main+0xa2>
			{
				inBuffer[i] = 0;
			}
			outBuffer[0] = isCarParked<<7;
    206a:	80 91 1e 02 	lds	r24, 0x021E
			outBuffer[0] |= (isNewCard<<6);
    206e:	40 91 21 02 	lds	r20, 0x0221
			outBuffer[0] |= (isPrepay<<5);
    2072:	20 91 1d 02 	lds	r18, 0x021D
			outBuffer[0] |= (isBroken<<4);
    2076:	90 91 11 02 	lds	r25, 0x0211
			for(uint8_t i=0;i<inBufferSize;i++)
			{
				inBuffer[i] = 0;
			}
			outBuffer[0] = isCarParked<<7;
			outBuffer[0] |= (isNewCard<<6);
    207a:	f0 e4       	ldi	r31, 0x40	; 64
    207c:	4f 9f       	mul	r20, r31
    207e:	a0 01       	movw	r20, r0
    2080:	11 24       	eor	r1, r1
			outBuffer[0] |= (isPrepay<<5);
    2082:	60 e2       	ldi	r22, 0x20	; 32
    2084:	26 9f       	mul	r18, r22
    2086:	90 01       	movw	r18, r0
    2088:	11 24       	eor	r1, r1
			for(uint8_t i=0;i<inBufferSize;i++)
			{
				inBuffer[i] = 0;
			}
			outBuffer[0] = isCarParked<<7;
			outBuffer[0] |= (isNewCard<<6);
    208a:	24 2b       	or	r18, r20
			uint8_t rfResult;
			for(uint8_t i=0;i<inBufferSize;i++)
			{
				inBuffer[i] = 0;
			}
			outBuffer[0] = isCarParked<<7;
    208c:	87 95       	ror	r24
    208e:	88 27       	eor	r24, r24
    2090:	87 95       	ror	r24
			outBuffer[0] |= (isNewCard<<6);
			outBuffer[0] |= (isPrepay<<5);
    2092:	28 2b       	or	r18, r24
			outBuffer[0] |= (isBroken<<4);
    2094:	e0 e1       	ldi	r30, 0x10	; 16
    2096:	9e 9f       	mul	r25, r30
    2098:	c0 01       	movw	r24, r0
    209a:	11 24       	eor	r1, r1
    209c:	82 2b       	or	r24, r18
    209e:	f7 01       	movw	r30, r14
    20a0:	80 83       	st	Z, r24
			outBuffer[1] = priceDollars;
    20a2:	80 91 1c 02 	lds	r24, 0x021C
    20a6:	81 83       	std	Z+1, r24	; 0x01
			outBuffer[2] = priceCents;
    20a8:	80 91 1b 02 	lds	r24, 0x021B
    20ac:	82 83       	std	Z+2, r24	; 0x02
			if(isNewCard){
    20ae:	80 91 21 02 	lds	r24, 0x0221
    20b2:	88 23       	and	r24, r24
    20b4:	e1 f0       	breq	.+56     	; 0x20ee <main+0x12e>

#include "FullLibrary.h"


int main(void)
    20b6:	33 96       	adiw	r30, 0x03	; 3
    20b8:	95 01       	movw	r18, r10
			outBuffer[2] = priceCents;
			if(isNewCard){
				cardWritten = 1;
				for(uint8_t i=0;i<80;i++)
				{
					outBuffer[i+3] = cardBuffer[i];
    20ba:	d9 01       	movw	r26, r18
    20bc:	ac 5d       	subi	r26, 0xDC	; 220
    20be:	bd 4f       	sbci	r27, 0xFD	; 253
    20c0:	8c 91       	ld	r24, X
    20c2:	81 93       	st	Z+, r24
    20c4:	2f 5f       	subi	r18, 0xFF	; 255
    20c6:	3f 4f       	sbci	r19, 0xFF	; 255
			outBuffer[0] |= (isBroken<<4);
			outBuffer[1] = priceDollars;
			outBuffer[2] = priceCents;
			if(isNewCard){
				cardWritten = 1;
				for(uint8_t i=0;i<80;i++)
    20c8:	20 35       	cpi	r18, 0x50	; 80
    20ca:	31 05       	cpc	r19, r1
    20cc:	b1 f7       	brne	.-20     	; 0x20ba <main+0xfa>
				{
					outBuffer[i+3] = cardBuffer[i];
				}
				if(isPrepay){
    20ce:	80 91 1d 02 	lds	r24, 0x021D
    20d2:	88 23       	and	r24, r24
    20d4:	79 f0       	breq	.+30     	; 0x20f4 <main+0x134>
					messageLengthOut = 84;
					outBuffer[83] = prepayTime;
    20d6:	80 91 12 02 	lds	r24, 0x0212
    20da:	f7 01       	movw	r30, r14
    20dc:	ed 5a       	subi	r30, 0xAD	; 173
    20de:	ff 4f       	sbci	r31, 0xFF	; 255
    20e0:	80 83       	st	Z, r24
				for(uint8_t i=0;i<80;i++)
				{
					outBuffer[i+3] = cardBuffer[i];
				}
				if(isPrepay){
					messageLengthOut = 84;
    20e2:	0f 2e       	mov	r0, r31
    20e4:	f4 e5       	ldi	r31, 0x54	; 84
    20e6:	3f 2e       	mov	r3, r31
    20e8:	f0 2d       	mov	r31, r0
			outBuffer[0] |= (isPrepay<<5);
			outBuffer[0] |= (isBroken<<4);
			outBuffer[1] = priceDollars;
			outBuffer[2] = priceCents;
			if(isNewCard){
				cardWritten = 1;
    20ea:	27 2c       	mov	r2, r7
    20ec:	08 c0       	rjmp	.+16     	; 0x20fe <main+0x13e>
					outBuffer[83] = prepayTime;
				}else{
					messageLengthOut = 83;
				}
			}else{
				messageLengthOut = 3;
    20ee:	34 2c       	mov	r3, r4
	while(1)
	{
		
		if(1)
		{
			uint8_t cardWritten = 0;
    20f0:	25 2c       	mov	r2, r5
    20f2:	05 c0       	rjmp	.+10     	; 0x20fe <main+0x13e>
				}
				if(isPrepay){
					messageLengthOut = 84;
					outBuffer[83] = prepayTime;
				}else{
					messageLengthOut = 83;
    20f4:	0f 2e       	mov	r0, r31
    20f6:	f3 e5       	ldi	r31, 0x53	; 83
    20f8:	3f 2e       	mov	r3, r31
    20fa:	f0 2d       	mov	r31, r0
			outBuffer[0] |= (isPrepay<<5);
			outBuffer[0] |= (isBroken<<4);
			outBuffer[1] = priceDollars;
			outBuffer[2] = priceCents;
			if(isNewCard){
				cardWritten = 1;
    20fc:	27 2c       	mov	r2, r7
					messageLengthOut = 83;
				}
			}else{
				messageLengthOut = 3;
			}
			switch(rfResult = rfRead(inBuffer,&messageLengthIn)){
    20fe:	b8 01       	movw	r22, r16
    2100:	ce 01       	movw	r24, r28
    2102:	01 96       	adiw	r24, 0x01	; 1
    2104:	0e 94 2c 0e 	call	0x1c58	; 0x1c58 <rfRead>
    2108:	88 23       	and	r24, r24
    210a:	21 f0       	breq	.+8      	; 0x2114 <main+0x154>
    210c:	81 30       	cpi	r24, 0x01	; 1
    210e:	09 f0       	breq	.+2      	; 0x2112 <main+0x152>
    2110:	48 c0       	rjmp	.+144    	; 0x21a2 <main+0x1e2>
    2112:	65 c0       	rjmp	.+202    	; 0x21de <main+0x21e>
				case RF_SUCCESS:{
					rfResult = rfSend((uint8_t*)outBuffer,messageLengthOut);
    2114:	63 2d       	mov	r22, r3
    2116:	c7 01       	movw	r24, r14
    2118:	0e 94 92 0d 	call	0x1b24	; 0x1b24 <rfSend>
					if(rfResult==RF_SUCCESS){
    211c:	81 11       	cpse	r24, r1
    211e:	11 c0       	rjmp	.+34     	; 0x2142 <main+0x182>
						if(cardWritten == 1){
    2120:	f1 e0       	ldi	r31, 0x01	; 1
    2122:	2f 12       	cpse	r2, r31
    2124:	0e c0       	rjmp	.+28     	; 0x2142 <main+0x182>
							isNewCard = 0;
    2126:	50 92 21 02 	sts	0x0221, r5

#include "FullLibrary.h"


int main(void)
    212a:	f7 01       	movw	r30, r14
    212c:	34 96       	adiw	r30, 0x04	; 4
    212e:	c5 01       	movw	r24, r10
					if(rfResult==RF_SUCCESS){
						if(cardWritten == 1){
							isNewCard = 0;
							for(uint8_t i=0;i<80;i++)
							{
								cardBuffer[i] = 0;
    2130:	dc 01       	movw	r26, r24
    2132:	ac 5d       	subi	r26, 0xDC	; 220
    2134:	bd 4f       	sbci	r27, 0xFD	; 253
    2136:	1c 92       	st	X, r1
								outBuffer[i+4] = 0;
    2138:	11 92       	st	Z+, r1
    213a:	01 96       	adiw	r24, 0x01	; 1
				case RF_SUCCESS:{
					rfResult = rfSend((uint8_t*)outBuffer,messageLengthOut);
					if(rfResult==RF_SUCCESS){
						if(cardWritten == 1){
							isNewCard = 0;
							for(uint8_t i=0;i<80;i++)
    213c:	80 35       	cpi	r24, 0x50	; 80
    213e:	91 05       	cpc	r25, r1
    2140:	b9 f7       	brne	.-18     	; 0x2130 <main+0x170>
								outBuffer[i+4] = 0;
							}
							
						}
					}
					ledSetDutyCycle(inBuffer[2]);
    2142:	8b 81       	ldd	r24, Y+3	; 0x03
    2144:	0e 94 46 09 	call	0x128c	; 0x128c <ledSetDutyCycle>
					meterStatus = inBuffer[3];
    2148:	8c 81       	ldd	r24, Y+4	; 0x04
    214a:	80 93 1f 02 	sts	0x021F, r24
					timeHours = inBuffer[4];
    214e:	8d 81       	ldd	r24, Y+5	; 0x05
    2150:	80 93 18 02 	sts	0x0218, r24
					timeMinutes = inBuffer[5];
    2154:	8e 81       	ldd	r24, Y+6	; 0x06
    2156:	80 93 17 02 	sts	0x0217, r24
					priceDollarsNext =  inBuffer[0];
    215a:	89 81       	ldd	r24, Y+1	; 0x01
    215c:	80 93 1a 02 	sts	0x021A, r24
					priceCentsNext = inBuffer[1];
    2160:	8a 81       	ldd	r24, Y+2	; 0x02
    2162:	80 93 19 02 	sts	0x0219, r24
					switch(uiState){
    2166:	80 91 14 02 	lds	r24, 0x0214
    216a:	87 30       	cpi	r24, 0x07	; 7
    216c:	28 f4       	brcc	.+10     	; 0x2178 <main+0x1b8>
    216e:	85 30       	cpi	r24, 0x05	; 5
    2170:	38 f4       	brcc	.+14     	; 0x2180 <main+0x1c0>
    2172:	83 30       	cpi	r24, 0x03	; 3
    2174:	a0 f1       	brcs	.+104    	; 0x21de <main+0x21e>
    2176:	0c c0       	rjmp	.+24     	; 0x2190 <main+0x1d0>
    2178:	89 50       	subi	r24, 0x09	; 9
    217a:	82 30       	cpi	r24, 0x02	; 2
    217c:	80 f5       	brcc	.+96     	; 0x21de <main+0x21e>
    217e:	03 c0       	rjmp	.+6      	; 0x2186 <main+0x1c6>
						case WAITING_TO_SEND_CARD_POSTPAY:
						case WAITING_TO_SEND_CARD_PREPAY:
							setUIStateRF();
    2180:	0e 94 8e 02 	call	0x51c	; 0x51c <setUIStateRF>
						break;
    2184:	2c c0       	rjmp	.+88     	; 0x21de <main+0x21e>
						case WAITING_POSTPAY:
						case WAITING_PREPAY:
							setUIStateRF();
    2186:	0e 94 8e 02 	call	0x51c	; 0x51c <setUIStateRF>
							turnOnUIPower();
    218a:	0e 94 5c 0c 	call	0x18b8	; 0x18b8 <turnOnUIPower>
							break;
    218e:	27 c0       	rjmp	.+78     	; 0x21de <main+0x21e>
						case PREPAID:
						case POSTPAID:
							setUIStateRF();
    2190:	0e 94 8e 02 	call	0x51c	; 0x51c <setUIStateRF>
							if(isPower()){
    2194:	0e 94 50 0c 	call	0x18a0	; 0x18a0 <isPower>
    2198:	89 2b       	or	r24, r25
    219a:	09 f1       	breq	.+66     	; 0x21de <main+0x21e>
								turnOnUIPower();
    219c:	0e 94 5c 0c 	call	0x18b8	; 0x18b8 <turnOnUIPower>
    21a0:	1e c0       	rjmp	.+60     	; 0x21de <main+0x21e>
				}break;
				case RF_TIMEOUT:{
					
				}break;
				default:{
					sprintf((char*)outBuffer,"%d",rfResult);
    21a2:	1f 92       	push	r1
    21a4:	8f 93       	push	r24
    21a6:	df 92       	push	r13
    21a8:	cf 92       	push	r12
    21aa:	ff 92       	push	r15
    21ac:	ef 92       	push	r14
    21ae:	0e 94 58 11 	call	0x22b0	; 0x22b0 <sprintf>
					lcdGoToY(1);
    21b2:	87 2d       	mov	r24, r7
    21b4:	0e 94 0a 07 	call	0xe14	; 0xe14 <lcdGoToY>
					lcdPrint((uint8_t*)"Error",5);
    21b8:	65 e0       	ldi	r22, 0x05	; 5
    21ba:	8a e0       	ldi	r24, 0x0A	; 10
    21bc:	92 e0       	ldi	r25, 0x02	; 2
    21be:	0e 94 2b 07 	call	0xe56	; 0xe56 <lcdPrint>
					lcdGoToY(2);
    21c2:	82 e0       	ldi	r24, 0x02	; 2
    21c4:	0e 94 0a 07 	call	0xe14	; 0xe14 <lcdGoToY>
					lcdPrint(outBuffer,1);
    21c8:	67 2d       	mov	r22, r7
    21ca:	8e 2d       	mov	r24, r14
    21cc:	9f 2d       	mov	r25, r15
    21ce:	0e 94 2b 07 	call	0xe56	; 0xe56 <lcdPrint>
				}break;
    21d2:	0f 90       	pop	r0
    21d4:	0f 90       	pop	r0
    21d6:	0f 90       	pop	r0
    21d8:	0f 90       	pop	r0
    21da:	0f 90       	pop	r0
    21dc:	0f 90       	pop	r0
    21de:	88 2d       	mov	r24, r8
    21e0:	99 2d       	mov	r25, r9
    21e2:	0f b6       	in	r0, 0x3f	; 63
    21e4:	f8 94       	cli
    21e6:	9e bf       	out	0x3e, r25	; 62
    21e8:	0f be       	out	0x3f, r0	; 63
    21ea:	8d bf       	out	0x3d, r24	; 61
				}break;
			}
			*/
		}
		
	}
    21ec:	26 cf       	rjmp	.-436    	; 0x203a <main+0x7a>

000021ee <__divmodhi4>:
    21ee:	97 fb       	bst	r25, 7
    21f0:	07 2e       	mov	r0, r23
    21f2:	16 f4       	brtc	.+4      	; 0x21f8 <__divmodhi4+0xa>
    21f4:	00 94       	com	r0
    21f6:	07 d0       	rcall	.+14     	; 0x2206 <__divmodhi4_neg1>
    21f8:	77 fd       	sbrc	r23, 7
    21fa:	09 d0       	rcall	.+18     	; 0x220e <__divmodhi4_neg2>
    21fc:	0e 94 44 11 	call	0x2288	; 0x2288 <__udivmodhi4>
    2200:	07 fc       	sbrc	r0, 7
    2202:	05 d0       	rcall	.+10     	; 0x220e <__divmodhi4_neg2>
    2204:	3e f4       	brtc	.+14     	; 0x2214 <__divmodhi4_exit>

00002206 <__divmodhi4_neg1>:
    2206:	90 95       	com	r25
    2208:	81 95       	neg	r24
    220a:	9f 4f       	sbci	r25, 0xFF	; 255
    220c:	08 95       	ret

0000220e <__divmodhi4_neg2>:
    220e:	70 95       	com	r23
    2210:	61 95       	neg	r22
    2212:	7f 4f       	sbci	r23, 0xFF	; 255

00002214 <__divmodhi4_exit>:
    2214:	08 95       	ret

00002216 <__udivmodsi4>:
    2216:	a1 e2       	ldi	r26, 0x21	; 33
    2218:	1a 2e       	mov	r1, r26
    221a:	aa 1b       	sub	r26, r26
    221c:	bb 1b       	sub	r27, r27
    221e:	fd 01       	movw	r30, r26
    2220:	0d c0       	rjmp	.+26     	; 0x223c <__udivmodsi4_ep>

00002222 <__udivmodsi4_loop>:
    2222:	aa 1f       	adc	r26, r26
    2224:	bb 1f       	adc	r27, r27
    2226:	ee 1f       	adc	r30, r30
    2228:	ff 1f       	adc	r31, r31
    222a:	a2 17       	cp	r26, r18
    222c:	b3 07       	cpc	r27, r19
    222e:	e4 07       	cpc	r30, r20
    2230:	f5 07       	cpc	r31, r21
    2232:	20 f0       	brcs	.+8      	; 0x223c <__udivmodsi4_ep>
    2234:	a2 1b       	sub	r26, r18
    2236:	b3 0b       	sbc	r27, r19
    2238:	e4 0b       	sbc	r30, r20
    223a:	f5 0b       	sbc	r31, r21

0000223c <__udivmodsi4_ep>:
    223c:	66 1f       	adc	r22, r22
    223e:	77 1f       	adc	r23, r23
    2240:	88 1f       	adc	r24, r24
    2242:	99 1f       	adc	r25, r25
    2244:	1a 94       	dec	r1
    2246:	69 f7       	brne	.-38     	; 0x2222 <__udivmodsi4_loop>
    2248:	60 95       	com	r22
    224a:	70 95       	com	r23
    224c:	80 95       	com	r24
    224e:	90 95       	com	r25
    2250:	9b 01       	movw	r18, r22
    2252:	ac 01       	movw	r20, r24
    2254:	bd 01       	movw	r22, r26
    2256:	cf 01       	movw	r24, r30
    2258:	08 95       	ret

0000225a <__umulhisi3>:
    225a:	a2 9f       	mul	r26, r18
    225c:	b0 01       	movw	r22, r0
    225e:	b3 9f       	mul	r27, r19
    2260:	c0 01       	movw	r24, r0
    2262:	a3 9f       	mul	r26, r19
    2264:	01 d0       	rcall	.+2      	; 0x2268 <__umulhisi3+0xe>
    2266:	b2 9f       	mul	r27, r18
    2268:	70 0d       	add	r23, r0
    226a:	81 1d       	adc	r24, r1
    226c:	11 24       	eor	r1, r1
    226e:	91 1d       	adc	r25, r1
    2270:	08 95       	ret

00002272 <__muluhisi3>:
    2272:	0e 94 2d 11 	call	0x225a	; 0x225a <__umulhisi3>
    2276:	a5 9f       	mul	r26, r21
    2278:	90 0d       	add	r25, r0
    227a:	b4 9f       	mul	r27, r20
    227c:	90 0d       	add	r25, r0
    227e:	a4 9f       	mul	r26, r20
    2280:	80 0d       	add	r24, r0
    2282:	91 1d       	adc	r25, r1
    2284:	11 24       	eor	r1, r1
    2286:	08 95       	ret

00002288 <__udivmodhi4>:
    2288:	aa 1b       	sub	r26, r26
    228a:	bb 1b       	sub	r27, r27
    228c:	51 e1       	ldi	r21, 0x11	; 17
    228e:	07 c0       	rjmp	.+14     	; 0x229e <__udivmodhi4_ep>

00002290 <__udivmodhi4_loop>:
    2290:	aa 1f       	adc	r26, r26
    2292:	bb 1f       	adc	r27, r27
    2294:	a6 17       	cp	r26, r22
    2296:	b7 07       	cpc	r27, r23
    2298:	10 f0       	brcs	.+4      	; 0x229e <__udivmodhi4_ep>
    229a:	a6 1b       	sub	r26, r22
    229c:	b7 0b       	sbc	r27, r23

0000229e <__udivmodhi4_ep>:
    229e:	88 1f       	adc	r24, r24
    22a0:	99 1f       	adc	r25, r25
    22a2:	5a 95       	dec	r21
    22a4:	a9 f7       	brne	.-22     	; 0x2290 <__udivmodhi4_loop>
    22a6:	80 95       	com	r24
    22a8:	90 95       	com	r25
    22aa:	bc 01       	movw	r22, r24
    22ac:	cd 01       	movw	r24, r26
    22ae:	08 95       	ret

000022b0 <sprintf>:
    22b0:	ae e0       	ldi	r26, 0x0E	; 14
    22b2:	b0 e0       	ldi	r27, 0x00	; 0
    22b4:	ee e5       	ldi	r30, 0x5E	; 94
    22b6:	f1 e1       	ldi	r31, 0x11	; 17
    22b8:	0c 94 36 14 	jmp	0x286c	; 0x286c <__prologue_saves__+0x1c>
    22bc:	0d 89       	ldd	r16, Y+21	; 0x15
    22be:	1e 89       	ldd	r17, Y+22	; 0x16
    22c0:	86 e0       	ldi	r24, 0x06	; 6
    22c2:	8c 83       	std	Y+4, r24	; 0x04
    22c4:	1a 83       	std	Y+2, r17	; 0x02
    22c6:	09 83       	std	Y+1, r16	; 0x01
    22c8:	8f ef       	ldi	r24, 0xFF	; 255
    22ca:	9f e7       	ldi	r25, 0x7F	; 127
    22cc:	9e 83       	std	Y+6, r25	; 0x06
    22ce:	8d 83       	std	Y+5, r24	; 0x05
    22d0:	ce 01       	movw	r24, r28
    22d2:	49 96       	adiw	r24, 0x19	; 25
    22d4:	ac 01       	movw	r20, r24
    22d6:	6f 89       	ldd	r22, Y+23	; 0x17
    22d8:	78 8d       	ldd	r23, Y+24	; 0x18
    22da:	ce 01       	movw	r24, r28
    22dc:	01 96       	adiw	r24, 0x01	; 1
    22de:	0e 94 7a 11 	call	0x22f4	; 0x22f4 <vfprintf>
    22e2:	ef 81       	ldd	r30, Y+7	; 0x07
    22e4:	f8 85       	ldd	r31, Y+8	; 0x08
    22e6:	e0 0f       	add	r30, r16
    22e8:	f1 1f       	adc	r31, r17
    22ea:	10 82       	st	Z, r1
    22ec:	2e 96       	adiw	r28, 0x0e	; 14
    22ee:	e4 e0       	ldi	r30, 0x04	; 4
    22f0:	0c 94 52 14 	jmp	0x28a4	; 0x28a4 <__epilogue_restores__+0x1c>

000022f4 <vfprintf>:
    22f4:	ac e0       	ldi	r26, 0x0C	; 12
    22f6:	b0 e0       	ldi	r27, 0x00	; 0
    22f8:	e0 e8       	ldi	r30, 0x80	; 128
    22fa:	f1 e1       	ldi	r31, 0x11	; 17
    22fc:	0c 94 28 14 	jmp	0x2850	; 0x2850 <__prologue_saves__>
    2300:	7c 01       	movw	r14, r24
    2302:	6b 01       	movw	r12, r22
    2304:	8a 01       	movw	r16, r20
    2306:	fc 01       	movw	r30, r24
    2308:	17 82       	std	Z+7, r1	; 0x07
    230a:	16 82       	std	Z+6, r1	; 0x06
    230c:	83 81       	ldd	r24, Z+3	; 0x03
    230e:	81 ff       	sbrs	r24, 1
    2310:	c6 c1       	rjmp	.+908    	; 0x269e <vfprintf+0x3aa>
    2312:	88 24       	eor	r8, r8
    2314:	83 94       	inc	r8
    2316:	91 2c       	mov	r9, r1
    2318:	8c 0e       	add	r8, r28
    231a:	9d 1e       	adc	r9, r29
    231c:	f7 01       	movw	r30, r14
    231e:	93 81       	ldd	r25, Z+3	; 0x03
    2320:	f6 01       	movw	r30, r12
    2322:	93 fd       	sbrc	r25, 3
    2324:	85 91       	lpm	r24, Z+
    2326:	93 ff       	sbrs	r25, 3
    2328:	81 91       	ld	r24, Z+
    232a:	6f 01       	movw	r12, r30
    232c:	88 23       	and	r24, r24
    232e:	09 f4       	brne	.+2      	; 0x2332 <vfprintf+0x3e>
    2330:	b2 c1       	rjmp	.+868    	; 0x2696 <vfprintf+0x3a2>
    2332:	85 32       	cpi	r24, 0x25	; 37
    2334:	39 f4       	brne	.+14     	; 0x2344 <vfprintf+0x50>
    2336:	93 fd       	sbrc	r25, 3
    2338:	85 91       	lpm	r24, Z+
    233a:	93 ff       	sbrs	r25, 3
    233c:	81 91       	ld	r24, Z+
    233e:	6f 01       	movw	r12, r30
    2340:	85 32       	cpi	r24, 0x25	; 37
    2342:	29 f4       	brne	.+10     	; 0x234e <vfprintf+0x5a>
    2344:	b7 01       	movw	r22, r14
    2346:	90 e0       	ldi	r25, 0x00	; 0
    2348:	0e 94 9e 13 	call	0x273c	; 0x273c <fputc>
    234c:	e7 cf       	rjmp	.-50     	; 0x231c <vfprintf+0x28>
    234e:	51 2c       	mov	r5, r1
    2350:	31 2c       	mov	r3, r1
    2352:	20 e0       	ldi	r18, 0x00	; 0
    2354:	20 32       	cpi	r18, 0x20	; 32
    2356:	a8 f4       	brcc	.+42     	; 0x2382 <vfprintf+0x8e>
    2358:	8b 32       	cpi	r24, 0x2B	; 43
    235a:	61 f0       	breq	.+24     	; 0x2374 <vfprintf+0x80>
    235c:	28 f4       	brcc	.+10     	; 0x2368 <vfprintf+0x74>
    235e:	80 32       	cpi	r24, 0x20	; 32
    2360:	51 f0       	breq	.+20     	; 0x2376 <vfprintf+0x82>
    2362:	83 32       	cpi	r24, 0x23	; 35
    2364:	71 f4       	brne	.+28     	; 0x2382 <vfprintf+0x8e>
    2366:	0b c0       	rjmp	.+22     	; 0x237e <vfprintf+0x8a>
    2368:	8d 32       	cpi	r24, 0x2D	; 45
    236a:	39 f0       	breq	.+14     	; 0x237a <vfprintf+0x86>
    236c:	80 33       	cpi	r24, 0x30	; 48
    236e:	49 f4       	brne	.+18     	; 0x2382 <vfprintf+0x8e>
    2370:	21 60       	ori	r18, 0x01	; 1
    2372:	28 c0       	rjmp	.+80     	; 0x23c4 <vfprintf+0xd0>
    2374:	22 60       	ori	r18, 0x02	; 2
    2376:	24 60       	ori	r18, 0x04	; 4
    2378:	25 c0       	rjmp	.+74     	; 0x23c4 <vfprintf+0xd0>
    237a:	28 60       	ori	r18, 0x08	; 8
    237c:	23 c0       	rjmp	.+70     	; 0x23c4 <vfprintf+0xd0>
    237e:	20 61       	ori	r18, 0x10	; 16
    2380:	21 c0       	rjmp	.+66     	; 0x23c4 <vfprintf+0xd0>
    2382:	27 fd       	sbrc	r18, 7
    2384:	27 c0       	rjmp	.+78     	; 0x23d4 <vfprintf+0xe0>
    2386:	38 2f       	mov	r19, r24
    2388:	30 53       	subi	r19, 0x30	; 48
    238a:	3a 30       	cpi	r19, 0x0A	; 10
    238c:	78 f4       	brcc	.+30     	; 0x23ac <vfprintf+0xb8>
    238e:	26 ff       	sbrs	r18, 6
    2390:	06 c0       	rjmp	.+12     	; 0x239e <vfprintf+0xaa>
    2392:	fa e0       	ldi	r31, 0x0A	; 10
    2394:	5f 9e       	mul	r5, r31
    2396:	30 0d       	add	r19, r0
    2398:	11 24       	eor	r1, r1
    239a:	53 2e       	mov	r5, r19
    239c:	13 c0       	rjmp	.+38     	; 0x23c4 <vfprintf+0xd0>
    239e:	8a e0       	ldi	r24, 0x0A	; 10
    23a0:	38 9e       	mul	r3, r24
    23a2:	30 0d       	add	r19, r0
    23a4:	11 24       	eor	r1, r1
    23a6:	33 2e       	mov	r3, r19
    23a8:	20 62       	ori	r18, 0x20	; 32
    23aa:	0c c0       	rjmp	.+24     	; 0x23c4 <vfprintf+0xd0>
    23ac:	8e 32       	cpi	r24, 0x2E	; 46
    23ae:	21 f4       	brne	.+8      	; 0x23b8 <vfprintf+0xc4>
    23b0:	26 fd       	sbrc	r18, 6
    23b2:	71 c1       	rjmp	.+738    	; 0x2696 <vfprintf+0x3a2>
    23b4:	20 64       	ori	r18, 0x40	; 64
    23b6:	06 c0       	rjmp	.+12     	; 0x23c4 <vfprintf+0xd0>
    23b8:	8c 36       	cpi	r24, 0x6C	; 108
    23ba:	11 f4       	brne	.+4      	; 0x23c0 <vfprintf+0xcc>
    23bc:	20 68       	ori	r18, 0x80	; 128
    23be:	02 c0       	rjmp	.+4      	; 0x23c4 <vfprintf+0xd0>
    23c0:	88 36       	cpi	r24, 0x68	; 104
    23c2:	41 f4       	brne	.+16     	; 0x23d4 <vfprintf+0xe0>
    23c4:	f6 01       	movw	r30, r12
    23c6:	93 fd       	sbrc	r25, 3
    23c8:	85 91       	lpm	r24, Z+
    23ca:	93 ff       	sbrs	r25, 3
    23cc:	81 91       	ld	r24, Z+
    23ce:	6f 01       	movw	r12, r30
    23d0:	81 11       	cpse	r24, r1
    23d2:	c0 cf       	rjmp	.-128    	; 0x2354 <vfprintf+0x60>
    23d4:	98 2f       	mov	r25, r24
    23d6:	95 54       	subi	r25, 0x45	; 69
    23d8:	93 30       	cpi	r25, 0x03	; 3
    23da:	18 f0       	brcs	.+6      	; 0x23e2 <vfprintf+0xee>
    23dc:	90 52       	subi	r25, 0x20	; 32
    23de:	93 30       	cpi	r25, 0x03	; 3
    23e0:	28 f4       	brcc	.+10     	; 0x23ec <vfprintf+0xf8>
    23e2:	0c 5f       	subi	r16, 0xFC	; 252
    23e4:	1f 4f       	sbci	r17, 0xFF	; 255
    23e6:	ff e3       	ldi	r31, 0x3F	; 63
    23e8:	f9 83       	std	Y+1, r31	; 0x01
    23ea:	0d c0       	rjmp	.+26     	; 0x2406 <vfprintf+0x112>
    23ec:	83 36       	cpi	r24, 0x63	; 99
    23ee:	31 f0       	breq	.+12     	; 0x23fc <vfprintf+0x108>
    23f0:	83 37       	cpi	r24, 0x73	; 115
    23f2:	71 f0       	breq	.+28     	; 0x2410 <vfprintf+0x11c>
    23f4:	83 35       	cpi	r24, 0x53	; 83
    23f6:	09 f0       	breq	.+2      	; 0x23fa <vfprintf+0x106>
    23f8:	5e c0       	rjmp	.+188    	; 0x24b6 <vfprintf+0x1c2>
    23fa:	23 c0       	rjmp	.+70     	; 0x2442 <vfprintf+0x14e>
    23fc:	f8 01       	movw	r30, r16
    23fe:	80 81       	ld	r24, Z
    2400:	89 83       	std	Y+1, r24	; 0x01
    2402:	0e 5f       	subi	r16, 0xFE	; 254
    2404:	1f 4f       	sbci	r17, 0xFF	; 255
    2406:	44 24       	eor	r4, r4
    2408:	43 94       	inc	r4
    240a:	51 2c       	mov	r5, r1
    240c:	54 01       	movw	r10, r8
    240e:	15 c0       	rjmp	.+42     	; 0x243a <vfprintf+0x146>
    2410:	38 01       	movw	r6, r16
    2412:	f2 e0       	ldi	r31, 0x02	; 2
    2414:	6f 0e       	add	r6, r31
    2416:	71 1c       	adc	r7, r1
    2418:	f8 01       	movw	r30, r16
    241a:	a0 80       	ld	r10, Z
    241c:	b1 80       	ldd	r11, Z+1	; 0x01
    241e:	26 ff       	sbrs	r18, 6
    2420:	03 c0       	rjmp	.+6      	; 0x2428 <vfprintf+0x134>
    2422:	65 2d       	mov	r22, r5
    2424:	70 e0       	ldi	r23, 0x00	; 0
    2426:	02 c0       	rjmp	.+4      	; 0x242c <vfprintf+0x138>
    2428:	6f ef       	ldi	r22, 0xFF	; 255
    242a:	7f ef       	ldi	r23, 0xFF	; 255
    242c:	c5 01       	movw	r24, r10
    242e:	2c 87       	std	Y+12, r18	; 0x0c
    2430:	0e 94 93 13 	call	0x2726	; 0x2726 <strnlen>
    2434:	2c 01       	movw	r4, r24
    2436:	83 01       	movw	r16, r6
    2438:	2c 85       	ldd	r18, Y+12	; 0x0c
    243a:	6f e7       	ldi	r22, 0x7F	; 127
    243c:	26 2e       	mov	r2, r22
    243e:	22 22       	and	r2, r18
    2440:	18 c0       	rjmp	.+48     	; 0x2472 <vfprintf+0x17e>
    2442:	38 01       	movw	r6, r16
    2444:	f2 e0       	ldi	r31, 0x02	; 2
    2446:	6f 0e       	add	r6, r31
    2448:	71 1c       	adc	r7, r1
    244a:	f8 01       	movw	r30, r16
    244c:	a0 80       	ld	r10, Z
    244e:	b1 80       	ldd	r11, Z+1	; 0x01
    2450:	26 ff       	sbrs	r18, 6
    2452:	03 c0       	rjmp	.+6      	; 0x245a <vfprintf+0x166>
    2454:	65 2d       	mov	r22, r5
    2456:	70 e0       	ldi	r23, 0x00	; 0
    2458:	02 c0       	rjmp	.+4      	; 0x245e <vfprintf+0x16a>
    245a:	6f ef       	ldi	r22, 0xFF	; 255
    245c:	7f ef       	ldi	r23, 0xFF	; 255
    245e:	c5 01       	movw	r24, r10
    2460:	2c 87       	std	Y+12, r18	; 0x0c
    2462:	0e 94 88 13 	call	0x2710	; 0x2710 <strnlen_P>
    2466:	2c 01       	movw	r4, r24
    2468:	2c 85       	ldd	r18, Y+12	; 0x0c
    246a:	50 e8       	ldi	r21, 0x80	; 128
    246c:	25 2e       	mov	r2, r21
    246e:	22 2a       	or	r2, r18
    2470:	83 01       	movw	r16, r6
    2472:	23 fc       	sbrc	r2, 3
    2474:	1c c0       	rjmp	.+56     	; 0x24ae <vfprintf+0x1ba>
    2476:	06 c0       	rjmp	.+12     	; 0x2484 <vfprintf+0x190>
    2478:	b7 01       	movw	r22, r14
    247a:	80 e2       	ldi	r24, 0x20	; 32
    247c:	90 e0       	ldi	r25, 0x00	; 0
    247e:	0e 94 9e 13 	call	0x273c	; 0x273c <fputc>
    2482:	3a 94       	dec	r3
    2484:	83 2d       	mov	r24, r3
    2486:	90 e0       	ldi	r25, 0x00	; 0
    2488:	48 16       	cp	r4, r24
    248a:	59 06       	cpc	r5, r25
    248c:	a8 f3       	brcs	.-22     	; 0x2478 <vfprintf+0x184>
    248e:	0f c0       	rjmp	.+30     	; 0x24ae <vfprintf+0x1ba>
    2490:	f5 01       	movw	r30, r10
    2492:	27 fc       	sbrc	r2, 7
    2494:	85 91       	lpm	r24, Z+
    2496:	27 fe       	sbrs	r2, 7
    2498:	81 91       	ld	r24, Z+
    249a:	5f 01       	movw	r10, r30
    249c:	b7 01       	movw	r22, r14
    249e:	90 e0       	ldi	r25, 0x00	; 0
    24a0:	0e 94 9e 13 	call	0x273c	; 0x273c <fputc>
    24a4:	31 10       	cpse	r3, r1
    24a6:	3a 94       	dec	r3
    24a8:	f1 e0       	ldi	r31, 0x01	; 1
    24aa:	4f 1a       	sub	r4, r31
    24ac:	51 08       	sbc	r5, r1
    24ae:	41 14       	cp	r4, r1
    24b0:	51 04       	cpc	r5, r1
    24b2:	71 f7       	brne	.-36     	; 0x2490 <vfprintf+0x19c>
    24b4:	ed c0       	rjmp	.+474    	; 0x2690 <vfprintf+0x39c>
    24b6:	84 36       	cpi	r24, 0x64	; 100
    24b8:	11 f0       	breq	.+4      	; 0x24be <vfprintf+0x1ca>
    24ba:	89 36       	cpi	r24, 0x69	; 105
    24bc:	41 f5       	brne	.+80     	; 0x250e <vfprintf+0x21a>
    24be:	f8 01       	movw	r30, r16
    24c0:	27 ff       	sbrs	r18, 7
    24c2:	07 c0       	rjmp	.+14     	; 0x24d2 <vfprintf+0x1de>
    24c4:	60 81       	ld	r22, Z
    24c6:	71 81       	ldd	r23, Z+1	; 0x01
    24c8:	82 81       	ldd	r24, Z+2	; 0x02
    24ca:	93 81       	ldd	r25, Z+3	; 0x03
    24cc:	0c 5f       	subi	r16, 0xFC	; 252
    24ce:	1f 4f       	sbci	r17, 0xFF	; 255
    24d0:	08 c0       	rjmp	.+16     	; 0x24e2 <vfprintf+0x1ee>
    24d2:	60 81       	ld	r22, Z
    24d4:	71 81       	ldd	r23, Z+1	; 0x01
    24d6:	88 27       	eor	r24, r24
    24d8:	77 fd       	sbrc	r23, 7
    24da:	80 95       	com	r24
    24dc:	98 2f       	mov	r25, r24
    24de:	0e 5f       	subi	r16, 0xFE	; 254
    24e0:	1f 4f       	sbci	r17, 0xFF	; 255
    24e2:	4f e6       	ldi	r20, 0x6F	; 111
    24e4:	b4 2e       	mov	r11, r20
    24e6:	b2 22       	and	r11, r18
    24e8:	97 ff       	sbrs	r25, 7
    24ea:	09 c0       	rjmp	.+18     	; 0x24fe <vfprintf+0x20a>
    24ec:	90 95       	com	r25
    24ee:	80 95       	com	r24
    24f0:	70 95       	com	r23
    24f2:	61 95       	neg	r22
    24f4:	7f 4f       	sbci	r23, 0xFF	; 255
    24f6:	8f 4f       	sbci	r24, 0xFF	; 255
    24f8:	9f 4f       	sbci	r25, 0xFF	; 255
    24fa:	f0 e8       	ldi	r31, 0x80	; 128
    24fc:	bf 2a       	or	r11, r31
    24fe:	2a e0       	ldi	r18, 0x0A	; 10
    2500:	30 e0       	ldi	r19, 0x00	; 0
    2502:	a4 01       	movw	r20, r8
    2504:	0e 94 ca 13 	call	0x2794	; 0x2794 <__ultoa_invert>
    2508:	a8 2e       	mov	r10, r24
    250a:	a8 18       	sub	r10, r8
    250c:	43 c0       	rjmp	.+134    	; 0x2594 <vfprintf+0x2a0>
    250e:	85 37       	cpi	r24, 0x75	; 117
    2510:	31 f4       	brne	.+12     	; 0x251e <vfprintf+0x22a>
    2512:	3f ee       	ldi	r19, 0xEF	; 239
    2514:	b3 2e       	mov	r11, r19
    2516:	b2 22       	and	r11, r18
    2518:	2a e0       	ldi	r18, 0x0A	; 10
    251a:	30 e0       	ldi	r19, 0x00	; 0
    251c:	24 c0       	rjmp	.+72     	; 0x2566 <vfprintf+0x272>
    251e:	99 ef       	ldi	r25, 0xF9	; 249
    2520:	b9 2e       	mov	r11, r25
    2522:	b2 22       	and	r11, r18
    2524:	8f 36       	cpi	r24, 0x6F	; 111
    2526:	b9 f0       	breq	.+46     	; 0x2556 <vfprintf+0x262>
    2528:	20 f4       	brcc	.+8      	; 0x2532 <vfprintf+0x23e>
    252a:	88 35       	cpi	r24, 0x58	; 88
    252c:	09 f0       	breq	.+2      	; 0x2530 <vfprintf+0x23c>
    252e:	b3 c0       	rjmp	.+358    	; 0x2696 <vfprintf+0x3a2>
    2530:	0d c0       	rjmp	.+26     	; 0x254c <vfprintf+0x258>
    2532:	80 37       	cpi	r24, 0x70	; 112
    2534:	21 f0       	breq	.+8      	; 0x253e <vfprintf+0x24a>
    2536:	88 37       	cpi	r24, 0x78	; 120
    2538:	09 f0       	breq	.+2      	; 0x253c <vfprintf+0x248>
    253a:	ad c0       	rjmp	.+346    	; 0x2696 <vfprintf+0x3a2>
    253c:	02 c0       	rjmp	.+4      	; 0x2542 <vfprintf+0x24e>
    253e:	20 e1       	ldi	r18, 0x10	; 16
    2540:	b2 2a       	or	r11, r18
    2542:	b4 fe       	sbrs	r11, 4
    2544:	0b c0       	rjmp	.+22     	; 0x255c <vfprintf+0x268>
    2546:	84 e0       	ldi	r24, 0x04	; 4
    2548:	b8 2a       	or	r11, r24
    254a:	08 c0       	rjmp	.+16     	; 0x255c <vfprintf+0x268>
    254c:	24 ff       	sbrs	r18, 4
    254e:	09 c0       	rjmp	.+18     	; 0x2562 <vfprintf+0x26e>
    2550:	e6 e0       	ldi	r30, 0x06	; 6
    2552:	be 2a       	or	r11, r30
    2554:	06 c0       	rjmp	.+12     	; 0x2562 <vfprintf+0x26e>
    2556:	28 e0       	ldi	r18, 0x08	; 8
    2558:	30 e0       	ldi	r19, 0x00	; 0
    255a:	05 c0       	rjmp	.+10     	; 0x2566 <vfprintf+0x272>
    255c:	20 e1       	ldi	r18, 0x10	; 16
    255e:	30 e0       	ldi	r19, 0x00	; 0
    2560:	02 c0       	rjmp	.+4      	; 0x2566 <vfprintf+0x272>
    2562:	20 e1       	ldi	r18, 0x10	; 16
    2564:	32 e0       	ldi	r19, 0x02	; 2
    2566:	f8 01       	movw	r30, r16
    2568:	b7 fe       	sbrs	r11, 7
    256a:	07 c0       	rjmp	.+14     	; 0x257a <vfprintf+0x286>
    256c:	60 81       	ld	r22, Z
    256e:	71 81       	ldd	r23, Z+1	; 0x01
    2570:	82 81       	ldd	r24, Z+2	; 0x02
    2572:	93 81       	ldd	r25, Z+3	; 0x03
    2574:	0c 5f       	subi	r16, 0xFC	; 252
    2576:	1f 4f       	sbci	r17, 0xFF	; 255
    2578:	06 c0       	rjmp	.+12     	; 0x2586 <vfprintf+0x292>
    257a:	60 81       	ld	r22, Z
    257c:	71 81       	ldd	r23, Z+1	; 0x01
    257e:	80 e0       	ldi	r24, 0x00	; 0
    2580:	90 e0       	ldi	r25, 0x00	; 0
    2582:	0e 5f       	subi	r16, 0xFE	; 254
    2584:	1f 4f       	sbci	r17, 0xFF	; 255
    2586:	a4 01       	movw	r20, r8
    2588:	0e 94 ca 13 	call	0x2794	; 0x2794 <__ultoa_invert>
    258c:	a8 2e       	mov	r10, r24
    258e:	a8 18       	sub	r10, r8
    2590:	ff e7       	ldi	r31, 0x7F	; 127
    2592:	bf 22       	and	r11, r31
    2594:	b6 fe       	sbrs	r11, 6
    2596:	0b c0       	rjmp	.+22     	; 0x25ae <vfprintf+0x2ba>
    2598:	2b 2d       	mov	r18, r11
    259a:	2e 7f       	andi	r18, 0xFE	; 254
    259c:	a5 14       	cp	r10, r5
    259e:	50 f4       	brcc	.+20     	; 0x25b4 <vfprintf+0x2c0>
    25a0:	b4 fe       	sbrs	r11, 4
    25a2:	0a c0       	rjmp	.+20     	; 0x25b8 <vfprintf+0x2c4>
    25a4:	b2 fc       	sbrc	r11, 2
    25a6:	08 c0       	rjmp	.+16     	; 0x25b8 <vfprintf+0x2c4>
    25a8:	2b 2d       	mov	r18, r11
    25aa:	2e 7e       	andi	r18, 0xEE	; 238
    25ac:	05 c0       	rjmp	.+10     	; 0x25b8 <vfprintf+0x2c4>
    25ae:	7a 2c       	mov	r7, r10
    25b0:	2b 2d       	mov	r18, r11
    25b2:	03 c0       	rjmp	.+6      	; 0x25ba <vfprintf+0x2c6>
    25b4:	7a 2c       	mov	r7, r10
    25b6:	01 c0       	rjmp	.+2      	; 0x25ba <vfprintf+0x2c6>
    25b8:	75 2c       	mov	r7, r5
    25ba:	24 ff       	sbrs	r18, 4
    25bc:	0d c0       	rjmp	.+26     	; 0x25d8 <vfprintf+0x2e4>
    25be:	fe 01       	movw	r30, r28
    25c0:	ea 0d       	add	r30, r10
    25c2:	f1 1d       	adc	r31, r1
    25c4:	80 81       	ld	r24, Z
    25c6:	80 33       	cpi	r24, 0x30	; 48
    25c8:	11 f4       	brne	.+4      	; 0x25ce <vfprintf+0x2da>
    25ca:	29 7e       	andi	r18, 0xE9	; 233
    25cc:	09 c0       	rjmp	.+18     	; 0x25e0 <vfprintf+0x2ec>
    25ce:	22 ff       	sbrs	r18, 2
    25d0:	06 c0       	rjmp	.+12     	; 0x25de <vfprintf+0x2ea>
    25d2:	73 94       	inc	r7
    25d4:	73 94       	inc	r7
    25d6:	04 c0       	rjmp	.+8      	; 0x25e0 <vfprintf+0x2ec>
    25d8:	82 2f       	mov	r24, r18
    25da:	86 78       	andi	r24, 0x86	; 134
    25dc:	09 f0       	breq	.+2      	; 0x25e0 <vfprintf+0x2ec>
    25de:	73 94       	inc	r7
    25e0:	23 fd       	sbrc	r18, 3
    25e2:	14 c0       	rjmp	.+40     	; 0x260c <vfprintf+0x318>
    25e4:	20 ff       	sbrs	r18, 0
    25e6:	0f c0       	rjmp	.+30     	; 0x2606 <vfprintf+0x312>
    25e8:	5a 2c       	mov	r5, r10
    25ea:	73 14       	cp	r7, r3
    25ec:	60 f4       	brcc	.+24     	; 0x2606 <vfprintf+0x312>
    25ee:	53 0c       	add	r5, r3
    25f0:	57 18       	sub	r5, r7
    25f2:	73 2c       	mov	r7, r3
    25f4:	08 c0       	rjmp	.+16     	; 0x2606 <vfprintf+0x312>
    25f6:	b7 01       	movw	r22, r14
    25f8:	80 e2       	ldi	r24, 0x20	; 32
    25fa:	90 e0       	ldi	r25, 0x00	; 0
    25fc:	2c 87       	std	Y+12, r18	; 0x0c
    25fe:	0e 94 9e 13 	call	0x273c	; 0x273c <fputc>
    2602:	73 94       	inc	r7
    2604:	2c 85       	ldd	r18, Y+12	; 0x0c
    2606:	73 14       	cp	r7, r3
    2608:	b0 f3       	brcs	.-20     	; 0x25f6 <vfprintf+0x302>
    260a:	04 c0       	rjmp	.+8      	; 0x2614 <vfprintf+0x320>
    260c:	73 14       	cp	r7, r3
    260e:	10 f4       	brcc	.+4      	; 0x2614 <vfprintf+0x320>
    2610:	37 18       	sub	r3, r7
    2612:	01 c0       	rjmp	.+2      	; 0x2616 <vfprintf+0x322>
    2614:	31 2c       	mov	r3, r1
    2616:	24 ff       	sbrs	r18, 4
    2618:	12 c0       	rjmp	.+36     	; 0x263e <vfprintf+0x34a>
    261a:	b7 01       	movw	r22, r14
    261c:	80 e3       	ldi	r24, 0x30	; 48
    261e:	90 e0       	ldi	r25, 0x00	; 0
    2620:	2c 87       	std	Y+12, r18	; 0x0c
    2622:	0e 94 9e 13 	call	0x273c	; 0x273c <fputc>
    2626:	2c 85       	ldd	r18, Y+12	; 0x0c
    2628:	22 ff       	sbrs	r18, 2
    262a:	1e c0       	rjmp	.+60     	; 0x2668 <vfprintf+0x374>
    262c:	21 ff       	sbrs	r18, 1
    262e:	03 c0       	rjmp	.+6      	; 0x2636 <vfprintf+0x342>
    2630:	88 e5       	ldi	r24, 0x58	; 88
    2632:	90 e0       	ldi	r25, 0x00	; 0
    2634:	02 c0       	rjmp	.+4      	; 0x263a <vfprintf+0x346>
    2636:	88 e7       	ldi	r24, 0x78	; 120
    2638:	90 e0       	ldi	r25, 0x00	; 0
    263a:	b7 01       	movw	r22, r14
    263c:	0c c0       	rjmp	.+24     	; 0x2656 <vfprintf+0x362>
    263e:	82 2f       	mov	r24, r18
    2640:	86 78       	andi	r24, 0x86	; 134
    2642:	91 f0       	breq	.+36     	; 0x2668 <vfprintf+0x374>
    2644:	21 fd       	sbrc	r18, 1
    2646:	02 c0       	rjmp	.+4      	; 0x264c <vfprintf+0x358>
    2648:	80 e2       	ldi	r24, 0x20	; 32
    264a:	01 c0       	rjmp	.+2      	; 0x264e <vfprintf+0x35a>
    264c:	8b e2       	ldi	r24, 0x2B	; 43
    264e:	27 fd       	sbrc	r18, 7
    2650:	8d e2       	ldi	r24, 0x2D	; 45
    2652:	b7 01       	movw	r22, r14
    2654:	90 e0       	ldi	r25, 0x00	; 0
    2656:	0e 94 9e 13 	call	0x273c	; 0x273c <fputc>
    265a:	06 c0       	rjmp	.+12     	; 0x2668 <vfprintf+0x374>
    265c:	b7 01       	movw	r22, r14
    265e:	80 e3       	ldi	r24, 0x30	; 48
    2660:	90 e0       	ldi	r25, 0x00	; 0
    2662:	0e 94 9e 13 	call	0x273c	; 0x273c <fputc>
    2666:	5a 94       	dec	r5
    2668:	a5 14       	cp	r10, r5
    266a:	c0 f3       	brcs	.-16     	; 0x265c <vfprintf+0x368>
    266c:	aa 94       	dec	r10
    266e:	f4 01       	movw	r30, r8
    2670:	ea 0d       	add	r30, r10
    2672:	f1 1d       	adc	r31, r1
    2674:	b7 01       	movw	r22, r14
    2676:	80 81       	ld	r24, Z
    2678:	90 e0       	ldi	r25, 0x00	; 0
    267a:	0e 94 9e 13 	call	0x273c	; 0x273c <fputc>
    267e:	a1 10       	cpse	r10, r1
    2680:	f5 cf       	rjmp	.-22     	; 0x266c <vfprintf+0x378>
    2682:	06 c0       	rjmp	.+12     	; 0x2690 <vfprintf+0x39c>
    2684:	b7 01       	movw	r22, r14
    2686:	80 e2       	ldi	r24, 0x20	; 32
    2688:	90 e0       	ldi	r25, 0x00	; 0
    268a:	0e 94 9e 13 	call	0x273c	; 0x273c <fputc>
    268e:	3a 94       	dec	r3
    2690:	31 10       	cpse	r3, r1
    2692:	f8 cf       	rjmp	.-16     	; 0x2684 <vfprintf+0x390>
    2694:	43 ce       	rjmp	.-890    	; 0x231c <vfprintf+0x28>
    2696:	f7 01       	movw	r30, r14
    2698:	26 81       	ldd	r18, Z+6	; 0x06
    269a:	37 81       	ldd	r19, Z+7	; 0x07
    269c:	02 c0       	rjmp	.+4      	; 0x26a2 <vfprintf+0x3ae>
    269e:	2f ef       	ldi	r18, 0xFF	; 255
    26a0:	3f ef       	ldi	r19, 0xFF	; 255
    26a2:	c9 01       	movw	r24, r18
    26a4:	2c 96       	adiw	r28, 0x0c	; 12
    26a6:	e2 e1       	ldi	r30, 0x12	; 18
    26a8:	0c 94 44 14 	jmp	0x2888	; 0x2888 <__epilogue_restores__>

000026ac <__eerd_block_m328p>:
    26ac:	dc 01       	movw	r26, r24
    26ae:	cb 01       	movw	r24, r22

000026b0 <__eerd_blraw_m328p>:
    26b0:	fc 01       	movw	r30, r24
    26b2:	f9 99       	sbic	0x1f, 1	; 31
    26b4:	fe cf       	rjmp	.-4      	; 0x26b2 <__eerd_blraw_m328p+0x2>
    26b6:	06 c0       	rjmp	.+12     	; 0x26c4 <__eerd_blraw_m328p+0x14>
    26b8:	f2 bd       	out	0x22, r31	; 34
    26ba:	e1 bd       	out	0x21, r30	; 33
    26bc:	f8 9a       	sbi	0x1f, 0	; 31
    26be:	31 96       	adiw	r30, 0x01	; 1
    26c0:	00 b4       	in	r0, 0x20	; 32
    26c2:	0d 92       	st	X+, r0
    26c4:	41 50       	subi	r20, 0x01	; 1
    26c6:	50 40       	sbci	r21, 0x00	; 0
    26c8:	b8 f7       	brcc	.-18     	; 0x26b8 <__eerd_blraw_m328p+0x8>
    26ca:	08 95       	ret

000026cc <__eeupd_block_m328p>:
    26cc:	dc 01       	movw	r26, r24
    26ce:	a4 0f       	add	r26, r20
    26d0:	b5 1f       	adc	r27, r21
    26d2:	41 50       	subi	r20, 0x01	; 1
    26d4:	50 40       	sbci	r21, 0x00	; 0
    26d6:	48 f0       	brcs	.+18     	; 0x26ea <__eeupd_block_m328p+0x1e>
    26d8:	cb 01       	movw	r24, r22
    26da:	84 0f       	add	r24, r20
    26dc:	95 1f       	adc	r25, r21
    26de:	2e 91       	ld	r18, -X
    26e0:	0e 94 77 13 	call	0x26ee	; 0x26ee <__eeupd_r18_m328p>
    26e4:	41 50       	subi	r20, 0x01	; 1
    26e6:	50 40       	sbci	r21, 0x00	; 0
    26e8:	d0 f7       	brcc	.-12     	; 0x26de <__eeupd_block_m328p+0x12>
    26ea:	08 95       	ret

000026ec <__eeupd_byte_m328p>:
    26ec:	26 2f       	mov	r18, r22

000026ee <__eeupd_r18_m328p>:
    26ee:	f9 99       	sbic	0x1f, 1	; 31
    26f0:	fe cf       	rjmp	.-4      	; 0x26ee <__eeupd_r18_m328p>
    26f2:	92 bd       	out	0x22, r25	; 34
    26f4:	81 bd       	out	0x21, r24	; 33
    26f6:	f8 9a       	sbi	0x1f, 0	; 31
    26f8:	01 97       	sbiw	r24, 0x01	; 1
    26fa:	00 b4       	in	r0, 0x20	; 32
    26fc:	02 16       	cp	r0, r18
    26fe:	39 f0       	breq	.+14     	; 0x270e <__eeupd_r18_m328p+0x20>
    2700:	1f ba       	out	0x1f, r1	; 31
    2702:	20 bd       	out	0x20, r18	; 32
    2704:	0f b6       	in	r0, 0x3f	; 63
    2706:	f8 94       	cli
    2708:	fa 9a       	sbi	0x1f, 2	; 31
    270a:	f9 9a       	sbi	0x1f, 1	; 31
    270c:	0f be       	out	0x3f, r0	; 63
    270e:	08 95       	ret

00002710 <strnlen_P>:
    2710:	fc 01       	movw	r30, r24
    2712:	05 90       	lpm	r0, Z+
    2714:	61 50       	subi	r22, 0x01	; 1
    2716:	70 40       	sbci	r23, 0x00	; 0
    2718:	01 10       	cpse	r0, r1
    271a:	d8 f7       	brcc	.-10     	; 0x2712 <strnlen_P+0x2>
    271c:	80 95       	com	r24
    271e:	90 95       	com	r25
    2720:	8e 0f       	add	r24, r30
    2722:	9f 1f       	adc	r25, r31
    2724:	08 95       	ret

00002726 <strnlen>:
    2726:	fc 01       	movw	r30, r24
    2728:	61 50       	subi	r22, 0x01	; 1
    272a:	70 40       	sbci	r23, 0x00	; 0
    272c:	01 90       	ld	r0, Z+
    272e:	01 10       	cpse	r0, r1
    2730:	d8 f7       	brcc	.-10     	; 0x2728 <strnlen+0x2>
    2732:	80 95       	com	r24
    2734:	90 95       	com	r25
    2736:	8e 0f       	add	r24, r30
    2738:	9f 1f       	adc	r25, r31
    273a:	08 95       	ret

0000273c <fputc>:
    273c:	0f 93       	push	r16
    273e:	1f 93       	push	r17
    2740:	cf 93       	push	r28
    2742:	df 93       	push	r29
    2744:	8c 01       	movw	r16, r24
    2746:	eb 01       	movw	r28, r22
    2748:	8b 81       	ldd	r24, Y+3	; 0x03
    274a:	81 fd       	sbrc	r24, 1
    274c:	03 c0       	rjmp	.+6      	; 0x2754 <fputc+0x18>
    274e:	0f ef       	ldi	r16, 0xFF	; 255
    2750:	1f ef       	ldi	r17, 0xFF	; 255
    2752:	1a c0       	rjmp	.+52     	; 0x2788 <fputc+0x4c>
    2754:	82 ff       	sbrs	r24, 2
    2756:	0d c0       	rjmp	.+26     	; 0x2772 <fputc+0x36>
    2758:	2e 81       	ldd	r18, Y+6	; 0x06
    275a:	3f 81       	ldd	r19, Y+7	; 0x07
    275c:	8c 81       	ldd	r24, Y+4	; 0x04
    275e:	9d 81       	ldd	r25, Y+5	; 0x05
    2760:	28 17       	cp	r18, r24
    2762:	39 07       	cpc	r19, r25
    2764:	64 f4       	brge	.+24     	; 0x277e <fputc+0x42>
    2766:	e8 81       	ld	r30, Y
    2768:	f9 81       	ldd	r31, Y+1	; 0x01
    276a:	01 93       	st	Z+, r16
    276c:	f9 83       	std	Y+1, r31	; 0x01
    276e:	e8 83       	st	Y, r30
    2770:	06 c0       	rjmp	.+12     	; 0x277e <fputc+0x42>
    2772:	e8 85       	ldd	r30, Y+8	; 0x08
    2774:	f9 85       	ldd	r31, Y+9	; 0x09
    2776:	80 2f       	mov	r24, r16
    2778:	09 95       	icall
    277a:	89 2b       	or	r24, r25
    277c:	41 f7       	brne	.-48     	; 0x274e <fputc+0x12>
    277e:	8e 81       	ldd	r24, Y+6	; 0x06
    2780:	9f 81       	ldd	r25, Y+7	; 0x07
    2782:	01 96       	adiw	r24, 0x01	; 1
    2784:	9f 83       	std	Y+7, r25	; 0x07
    2786:	8e 83       	std	Y+6, r24	; 0x06
    2788:	c8 01       	movw	r24, r16
    278a:	df 91       	pop	r29
    278c:	cf 91       	pop	r28
    278e:	1f 91       	pop	r17
    2790:	0f 91       	pop	r16
    2792:	08 95       	ret

00002794 <__ultoa_invert>:
    2794:	fa 01       	movw	r30, r20
    2796:	aa 27       	eor	r26, r26
    2798:	28 30       	cpi	r18, 0x08	; 8
    279a:	51 f1       	breq	.+84     	; 0x27f0 <__ultoa_invert+0x5c>
    279c:	20 31       	cpi	r18, 0x10	; 16
    279e:	81 f1       	breq	.+96     	; 0x2800 <__ultoa_invert+0x6c>
    27a0:	e8 94       	clt
    27a2:	6f 93       	push	r22
    27a4:	6e 7f       	andi	r22, 0xFE	; 254
    27a6:	6e 5f       	subi	r22, 0xFE	; 254
    27a8:	7f 4f       	sbci	r23, 0xFF	; 255
    27aa:	8f 4f       	sbci	r24, 0xFF	; 255
    27ac:	9f 4f       	sbci	r25, 0xFF	; 255
    27ae:	af 4f       	sbci	r26, 0xFF	; 255
    27b0:	b1 e0       	ldi	r27, 0x01	; 1
    27b2:	3e d0       	rcall	.+124    	; 0x2830 <__ultoa_invert+0x9c>
    27b4:	b4 e0       	ldi	r27, 0x04	; 4
    27b6:	3c d0       	rcall	.+120    	; 0x2830 <__ultoa_invert+0x9c>
    27b8:	67 0f       	add	r22, r23
    27ba:	78 1f       	adc	r23, r24
    27bc:	89 1f       	adc	r24, r25
    27be:	9a 1f       	adc	r25, r26
    27c0:	a1 1d       	adc	r26, r1
    27c2:	68 0f       	add	r22, r24
    27c4:	79 1f       	adc	r23, r25
    27c6:	8a 1f       	adc	r24, r26
    27c8:	91 1d       	adc	r25, r1
    27ca:	a1 1d       	adc	r26, r1
    27cc:	6a 0f       	add	r22, r26
    27ce:	71 1d       	adc	r23, r1
    27d0:	81 1d       	adc	r24, r1
    27d2:	91 1d       	adc	r25, r1
    27d4:	a1 1d       	adc	r26, r1
    27d6:	20 d0       	rcall	.+64     	; 0x2818 <__ultoa_invert+0x84>
    27d8:	09 f4       	brne	.+2      	; 0x27dc <__ultoa_invert+0x48>
    27da:	68 94       	set
    27dc:	3f 91       	pop	r19
    27de:	2a e0       	ldi	r18, 0x0A	; 10
    27e0:	26 9f       	mul	r18, r22
    27e2:	11 24       	eor	r1, r1
    27e4:	30 19       	sub	r19, r0
    27e6:	30 5d       	subi	r19, 0xD0	; 208
    27e8:	31 93       	st	Z+, r19
    27ea:	de f6       	brtc	.-74     	; 0x27a2 <__ultoa_invert+0xe>
    27ec:	cf 01       	movw	r24, r30
    27ee:	08 95       	ret
    27f0:	46 2f       	mov	r20, r22
    27f2:	47 70       	andi	r20, 0x07	; 7
    27f4:	40 5d       	subi	r20, 0xD0	; 208
    27f6:	41 93       	st	Z+, r20
    27f8:	b3 e0       	ldi	r27, 0x03	; 3
    27fa:	0f d0       	rcall	.+30     	; 0x281a <__ultoa_invert+0x86>
    27fc:	c9 f7       	brne	.-14     	; 0x27f0 <__ultoa_invert+0x5c>
    27fe:	f6 cf       	rjmp	.-20     	; 0x27ec <__ultoa_invert+0x58>
    2800:	46 2f       	mov	r20, r22
    2802:	4f 70       	andi	r20, 0x0F	; 15
    2804:	40 5d       	subi	r20, 0xD0	; 208
    2806:	4a 33       	cpi	r20, 0x3A	; 58
    2808:	18 f0       	brcs	.+6      	; 0x2810 <__ultoa_invert+0x7c>
    280a:	49 5d       	subi	r20, 0xD9	; 217
    280c:	31 fd       	sbrc	r19, 1
    280e:	40 52       	subi	r20, 0x20	; 32
    2810:	41 93       	st	Z+, r20
    2812:	02 d0       	rcall	.+4      	; 0x2818 <__ultoa_invert+0x84>
    2814:	a9 f7       	brne	.-22     	; 0x2800 <__ultoa_invert+0x6c>
    2816:	ea cf       	rjmp	.-44     	; 0x27ec <__ultoa_invert+0x58>
    2818:	b4 e0       	ldi	r27, 0x04	; 4
    281a:	a6 95       	lsr	r26
    281c:	97 95       	ror	r25
    281e:	87 95       	ror	r24
    2820:	77 95       	ror	r23
    2822:	67 95       	ror	r22
    2824:	ba 95       	dec	r27
    2826:	c9 f7       	brne	.-14     	; 0x281a <__ultoa_invert+0x86>
    2828:	00 97       	sbiw	r24, 0x00	; 0
    282a:	61 05       	cpc	r22, r1
    282c:	71 05       	cpc	r23, r1
    282e:	08 95       	ret
    2830:	9b 01       	movw	r18, r22
    2832:	ac 01       	movw	r20, r24
    2834:	0a 2e       	mov	r0, r26
    2836:	06 94       	lsr	r0
    2838:	57 95       	ror	r21
    283a:	47 95       	ror	r20
    283c:	37 95       	ror	r19
    283e:	27 95       	ror	r18
    2840:	ba 95       	dec	r27
    2842:	c9 f7       	brne	.-14     	; 0x2836 <__ultoa_invert+0xa2>
    2844:	62 0f       	add	r22, r18
    2846:	73 1f       	adc	r23, r19
    2848:	84 1f       	adc	r24, r20
    284a:	95 1f       	adc	r25, r21
    284c:	a0 1d       	adc	r26, r0
    284e:	08 95       	ret

00002850 <__prologue_saves__>:
    2850:	2f 92       	push	r2
    2852:	3f 92       	push	r3
    2854:	4f 92       	push	r4
    2856:	5f 92       	push	r5
    2858:	6f 92       	push	r6
    285a:	7f 92       	push	r7
    285c:	8f 92       	push	r8
    285e:	9f 92       	push	r9
    2860:	af 92       	push	r10
    2862:	bf 92       	push	r11
    2864:	cf 92       	push	r12
    2866:	df 92       	push	r13
    2868:	ef 92       	push	r14
    286a:	ff 92       	push	r15
    286c:	0f 93       	push	r16
    286e:	1f 93       	push	r17
    2870:	cf 93       	push	r28
    2872:	df 93       	push	r29
    2874:	cd b7       	in	r28, 0x3d	; 61
    2876:	de b7       	in	r29, 0x3e	; 62
    2878:	ca 1b       	sub	r28, r26
    287a:	db 0b       	sbc	r29, r27
    287c:	0f b6       	in	r0, 0x3f	; 63
    287e:	f8 94       	cli
    2880:	de bf       	out	0x3e, r29	; 62
    2882:	0f be       	out	0x3f, r0	; 63
    2884:	cd bf       	out	0x3d, r28	; 61
    2886:	09 94       	ijmp

00002888 <__epilogue_restores__>:
    2888:	2a 88       	ldd	r2, Y+18	; 0x12
    288a:	39 88       	ldd	r3, Y+17	; 0x11
    288c:	48 88       	ldd	r4, Y+16	; 0x10
    288e:	5f 84       	ldd	r5, Y+15	; 0x0f
    2890:	6e 84       	ldd	r6, Y+14	; 0x0e
    2892:	7d 84       	ldd	r7, Y+13	; 0x0d
    2894:	8c 84       	ldd	r8, Y+12	; 0x0c
    2896:	9b 84       	ldd	r9, Y+11	; 0x0b
    2898:	aa 84       	ldd	r10, Y+10	; 0x0a
    289a:	b9 84       	ldd	r11, Y+9	; 0x09
    289c:	c8 84       	ldd	r12, Y+8	; 0x08
    289e:	df 80       	ldd	r13, Y+7	; 0x07
    28a0:	ee 80       	ldd	r14, Y+6	; 0x06
    28a2:	fd 80       	ldd	r15, Y+5	; 0x05
    28a4:	0c 81       	ldd	r16, Y+4	; 0x04
    28a6:	1b 81       	ldd	r17, Y+3	; 0x03
    28a8:	aa 81       	ldd	r26, Y+2	; 0x02
    28aa:	b9 81       	ldd	r27, Y+1	; 0x01
    28ac:	ce 0f       	add	r28, r30
    28ae:	d1 1d       	adc	r29, r1
    28b0:	0f b6       	in	r0, 0x3f	; 63
    28b2:	f8 94       	cli
    28b4:	de bf       	out	0x3e, r29	; 62
    28b6:	0f be       	out	0x3f, r0	; 63
    28b8:	cd bf       	out	0x3d, r28	; 61
    28ba:	ed 01       	movw	r28, r26
    28bc:	08 95       	ret

000028be <_exit>:
    28be:	f8 94       	cli

000028c0 <__stop_program>:
    28c0:	ff cf       	rjmp	.-2      	; 0x28c0 <__stop_program>
